{"version":3,"file":"icon__testing.js","sources":["../../../../../../src/material/icon/testing/fake-icon-registry.ts","../../../../../../src/material/icon/testing/public-api.ts","../../../../../../src/material/icon/testing/index.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgModule, OnDestroy} from '@angular/core';\nimport {MatIconRegistry} from '@angular/material/icon';\nimport {Observable, of as observableOf} from 'rxjs';\n\n// tslint:disable:no-any Impossible to tell param types.\ntype PublicApi<T> = {\n  [K in keyof T]: T[K] extends (...x: any[]) => T ? (...x: any[]) => PublicApi<T> : T[K]\n};\n// tslint:enable:no-any\n\n/**\n * A null icon registry that must be imported to allow disabling of custom\n * icons.\n */\n@Injectable()\nexport class FakeMatIconRegistry implements PublicApi<MatIconRegistry>, OnDestroy {\n  addSvgIcon(): this {\n    return this;\n  }\n\n  addSvgIconLiteral(): this {\n    return this;\n  }\n\n  addSvgIconInNamespace(): this {\n    return this;\n  }\n\n  addSvgIconLiteralInNamespace(): this {\n    return this;\n  }\n\n  addSvgIconSet(): this {\n    return this;\n  }\n\n  addSvgIconSetLiteral(): this {\n    return this;\n  }\n\n  addSvgIconSetInNamespace(): this {\n    return this;\n  }\n\n  addSvgIconSetLiteralInNamespace(): this {\n    return this;\n  }\n\n  registerFontClassAlias(): this {\n    return this;\n  }\n\n  classNameForFontAlias(alias: string): string {\n    return alias;\n  }\n\n  getDefaultFontSetClass() {\n    return 'material-icons';\n  }\n\n  getSvgIconFromUrl(): Observable<SVGElement> {\n    return observableOf(this._generateEmptySvg());\n  }\n\n  getNamedSvgIcon(): Observable<SVGElement> {\n    return observableOf(this._generateEmptySvg());\n  }\n\n  setDefaultFontSetClass(): this {\n    return this;\n  }\n\n  ngOnDestroy() { }\n\n  private _generateEmptySvg(): SVGElement {\n    const emptySvg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    emptySvg.classList.add('fake-testing-svg');\n    // Emulate real icon characteristics from `MatIconRegistry` so size remains consistent in tests.\n    emptySvg.setAttribute('fit', '');\n    emptySvg.setAttribute('height', '100%');\n    emptySvg.setAttribute('width', '100%');\n    emptySvg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n    emptySvg.setAttribute('focusable', 'false');\n    return emptySvg;\n  }\n}\n\n/** Import this module in tests to install the null icon registry. */\n@NgModule({\n  providers: [{provide: MatIconRegistry, useClass: FakeMatIconRegistry}]\n})\nexport class MatIconTestingModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './fake-icon-registry';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["observableOf"],"mappings":";;;;AAAA;;;;;;;AAQA,AAQA;;;;;AAMA;IAAA,MACa,mBAAmB;QAC9B,UAAU;YACR,OAAO,IAAI,CAAC;SACb;QAED,iBAAiB;YACf,OAAO,IAAI,CAAC;SACb;QAED,qBAAqB;YACnB,OAAO,IAAI,CAAC;SACb;QAED,4BAA4B;YAC1B,OAAO,IAAI,CAAC;SACb;QAED,aAAa;YACX,OAAO,IAAI,CAAC;SACb;QAED,oBAAoB;YAClB,OAAO,IAAI,CAAC;SACb;QAED,wBAAwB;YACtB,OAAO,IAAI,CAAC;SACb;QAED,+BAA+B;YAC7B,OAAO,IAAI,CAAC;SACb;QAED,sBAAsB;YACpB,OAAO,IAAI,CAAC;SACb;QAED,qBAAqB,CAAC,KAAa;YACjC,OAAO,KAAK,CAAC;SACd;QAED,sBAAsB;YACpB,OAAO,gBAAgB,CAAC;SACzB;QAED,iBAAiB;YACf,OAAOA,EAAY,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;SAC/C;QAED,eAAe;YACb,OAAOA,EAAY,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;SAC/C;QAED,sBAAsB;YACpB,OAAO,IAAI,CAAC;SACb;QAED,WAAW,MAAM;QAET,iBAAiB;YACvB,MAAM,QAAQ,GAAG,QAAQ,CAAC,eAAe,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;YAC/E,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;;YAE3C,QAAQ,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;YACjC,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;YACxC,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YACvC,QAAQ,CAAC,YAAY,CAAC,qBAAqB,EAAE,eAAe,CAAC,CAAC;YAC9D,QAAQ,CAAC,YAAY,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;YAC5C,OAAO,QAAQ,CAAC;SACjB;;;gBAtEF,UAAU;;IAuEX,0BAAC;KAAA;AAED;AACA;IAAA,MAGa,oBAAoB;;;gBAHhC,QAAQ,SAAC;oBACR,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,mBAAmB,EAAC,CAAC;iBACvE;;IAED,2BAAC;;;ACpGD;;;;;;GAMG;;ACNH;;GAEG;;;;"}