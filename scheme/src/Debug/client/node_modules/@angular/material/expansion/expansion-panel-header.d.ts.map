{"version":3,"file":"expansion-panel-header.d.ts","sources":["expansion-panel-header.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { FocusMonitor, FocusableOption, FocusOrigin } from '@angular/cdk/a11y';\nimport { ChangeDetectorRef, ElementRef, OnDestroy, AfterViewInit } from '@angular/core';\nimport { MatExpansionPanel, MatExpansionPanelDefaultOptions } from './expansion-panel';\nimport { MatAccordionTogglePosition } from './accordion-base';\n/**\n * `<mat-expansion-panel-header>`\n *\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\n */\nexport declare class MatExpansionPanelHeader implements AfterViewInit, OnDestroy, FocusableOption {\n    panel: MatExpansionPanel;\n    private _element;\n    private _focusMonitor;\n    private _changeDetectorRef;\n    _animationMode?: string | undefined;\n    private _parentChangeSubscription;\n    constructor(panel: MatExpansionPanel, _element: ElementRef, _focusMonitor: FocusMonitor, _changeDetectorRef: ChangeDetectorRef, defaultOptions?: MatExpansionPanelDefaultOptions, _animationMode?: string | undefined);\n    /** Height of the header while the panel is expanded. */\n    expandedHeight: string;\n    /** Height of the header while the panel is collapsed. */\n    collapsedHeight: string;\n    /**\n     * Whether the associated panel is disabled. Implemented as a part of `FocusableOption`.\n     * @docs-private\n     */\n    get disabled(): any;\n    /** Toggles the expanded state of the panel. */\n    _toggle(): void;\n    /** Gets whether the panel is expanded. */\n    _isExpanded(): boolean;\n    /** Gets the expanded state string of the panel. */\n    _getExpandedState(): string;\n    /** Gets the panel id. */\n    _getPanelId(): string;\n    /** Gets the toggle position for the header. */\n    _getTogglePosition(): MatAccordionTogglePosition;\n    /** Gets whether the expand indicator should be shown. */\n    _showToggle(): boolean;\n    /**\n     * Gets the current height of the header. Null if no custom height has been\n     * specified, and if the default height from the stylesheet should be used.\n     */\n    _getHeaderHeight(): string | null;\n    /** Handle keydown event calling to toggle() if appropriate. */\n    _keydown(event: KeyboardEvent): void;\n    /**\n     * Focuses the panel header. Implemented as a part of `FocusableOption`.\n     * @param origin Origin of the action that triggered the focus.\n     * @docs-private\n     */\n    focus(origin?: FocusOrigin, options?: FocusOptions): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n/**\n * `<mat-panel-description>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nexport declare class MatExpansionPanelDescription {\n}\n/**\n * `<mat-panel-title>`\n *\n * This directive is to be used inside of the MatExpansionPanelHeader component.\n */\nexport declare class MatExpansionPanelTitle {\n}\n"]}