{"version":3,"file":"accordion.d.ts","sources":["accordion.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { QueryList, AfterContentInit } from '@angular/core';\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { CdkAccordion } from '@angular/cdk/accordion';\nimport { MatAccordionBase, MatAccordionDisplayMode, MatAccordionTogglePosition } from './accordion-base';\nimport { MatExpansionPanelHeader } from './expansion-panel-header';\n/**\n * Directive for a Material Design Accordion.\n */\nexport declare class MatAccordion extends CdkAccordion implements MatAccordionBase, AfterContentInit {\n    private _keyManager;\n    /** Headers belonging to this accordion. */\n    private _ownHeaders;\n    /** All headers inside the accordion. Includes headers inside nested accordions. */\n    _headers: QueryList<MatExpansionPanelHeader>;\n    /** Whether the expansion indicator should be hidden. */\n    get hideToggle(): boolean;\n    set hideToggle(show: boolean);\n    private _hideToggle;\n    /**\n     * Display mode used for all expansion panels in the accordion. Currently two display\n     * modes exist:\n     *  default - a gutter-like spacing is placed around any expanded panel, placing the expanded\n     *     panel at a different elevation from the rest of the accordion.\n     *  flat - no spacing is placed around expanded panels, showing all panels at the same\n     *     elevation.\n     */\n    displayMode: MatAccordionDisplayMode;\n    /** The position of the expansion indicator. */\n    togglePosition: MatAccordionTogglePosition;\n    ngAfterContentInit(): void;\n    /** Handles keyboard events coming in from the panel headers. */\n    _handleHeaderKeydown(event: KeyboardEvent): void;\n    _handleHeaderFocus(header: MatExpansionPanelHeader): void;\n    static ngAcceptInputType_hideToggle: BooleanInput;\n}\n"]}