{"version":3,"file":"toolbar.js","sources":["../../../../../../src/material/toolbar/toolbar.ts","../../../../../../src/material/toolbar/toolbar-module.ts","../../../../../../src/material/toolbar/public-api.ts","../../../../../../src/material/toolbar/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Platform} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  Inject,\n  isDevMode,\n  QueryList,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanColor, CanColorCtor, mixinColor} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatToolbar.\n/** @docs-private */\nclass MatToolbarBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatToolbarMixinBase: CanColorCtor & typeof MatToolbarBase = mixinColor(MatToolbarBase);\n\n@Directive({\n  selector: 'mat-toolbar-row',\n  exportAs: 'matToolbarRow',\n  host: {'class': 'mat-toolbar-row'},\n})\nexport class MatToolbarRow {}\n\n@Component({\n  selector: 'mat-toolbar',\n  exportAs: 'matToolbar',\n  templateUrl: 'toolbar.html',\n  styleUrls: ['toolbar.css'],\n  inputs: ['color'],\n  host: {\n    'class': 'mat-toolbar',\n    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MatToolbar extends _MatToolbarMixinBase implements CanColor, AfterViewInit {\n  private _document: Document;\n\n  /** Reference to all toolbar row elements that have been projected. */\n  @ContentChildren(MatToolbarRow, {descendants: true}) _toolbarRows: QueryList<MatToolbarRow>;\n\n  constructor(\n    elementRef: ElementRef,\n    private _platform: Platform,\n    @Inject(DOCUMENT) document?: any) {\n    super(elementRef);\n\n    // TODO: make the document a required param when doing breaking changes.\n    this._document = document;\n  }\n\n  ngAfterViewInit() {\n    if (!isDevMode() || !this._platform.isBrowser) {\n      return;\n    }\n\n    this._checkToolbarMixedModes();\n    this._toolbarRows.changes.subscribe(() => this._checkToolbarMixedModes());\n  }\n\n  /**\n   * Throws an exception when developers are attempting to combine the different toolbar row modes.\n   */\n  private _checkToolbarMixedModes() {\n    if (!this._toolbarRows.length) {\n      return;\n    }\n\n    // Check if there are any other DOM nodes that can display content but aren't inside of\n    // a <mat-toolbar-row> element.\n    const isCombinedUsage = Array.from<HTMLElement>(this._elementRef.nativeElement.childNodes)\n      .filter(node => !(node.classList && node.classList.contains('mat-toolbar-row')))\n      .filter(node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8))\n      .some(node => !!(node.textContent && node.textContent.trim()));\n\n    if (isCombinedUsage) {\n      throwToolbarMixedModesError();\n    }\n  }\n}\n\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * @docs-private\n */\nexport function throwToolbarMixedModesError() {\n  throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n    'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n    'inside of a `<mat-toolbar>` for a single row.');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatToolbar, MatToolbarRow} from './toolbar';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n  declarations: [MatToolbar, MatToolbarRow],\n})\nexport class MatToolbarModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './toolbar-module';\nexport * from './toolbar';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}