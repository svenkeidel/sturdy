{"version":3,"file":"form-field.js","sources":["../../../../../../src/material/form-field/error.ts","../../../../../../src/material/form-field/form-field-animations.ts","../../../../../../src/material/form-field/form-field-control.ts","../../../../../../src/material/form-field/form-field-errors.ts","../../../../../../src/material/form-field/hint.ts","../../../../../../src/material/form-field/label.ts","../../../../../../src/material/form-field/placeholder.ts","../../../../../../src/material/form-field/prefix.ts","../../../../../../src/material/form-field/suffix.ts","../../../../../../src/material/form-field/form-field.ts","../../../../../../src/material/form-field/form-field-module.ts","../../../../../../src/material/form-field/public-api.ts","../../../../../../src/material/form-field/index.ts"],"names":["nextUniqueId"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n\n/** Single error message to be shown underneath the form field. */\n@Directive({\n  selector: 'mat-error',\n  host: {\n    'class': 'mat-error',\n    'role': 'alert',\n    '[attr.id]': 'id',\n  }\n})\nexport class MatError {\n  @Input() id: string = `mat-error-${nextUniqueId++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nexport const matFormFieldAnimations: {\n  readonly transitionMessages: AnimationTriggerMetadata\n} = {\n  /** Animation that transitions the form field's error and hint messages. */\n  transitionMessages: trigger('transitionMessages', [\n    // TODO(mmalerba): Use angular animations for label animation as well.\n    state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n    transition('void => enter', [\n      style({ opacity: 0, transform: 'translateY(-100%)' }),\n      animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n    ]),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Observable} from 'rxjs';\nimport {NgControl} from '@angular/forms';\nimport {Directive} from '@angular/core';\n\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\n@Directive()\nexport abstract class MatFormFieldControl<T> {\n  /** The value of the control. */\n  value: T | null;\n\n  /**\n   * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n   * needs to run change detection.\n   */\n  readonly stateChanges: Observable<void>;\n\n  /** The element ID for this control. */\n  readonly id: string;\n\n  /** The placeholder for this control. */\n  readonly placeholder: string;\n\n  /** Gets the NgControl for this control. */\n  readonly ngControl: NgControl | null;\n\n  /** Whether the control is focused. */\n  readonly focused: boolean;\n\n  /** Whether the control is empty. */\n  readonly empty: boolean;\n\n  /** Whether the `MatFormField` label should try to float. */\n  readonly shouldLabelFloat: boolean;\n\n  /** Whether the control is required. */\n  readonly required: boolean;\n\n  /** Whether the control is disabled. */\n  readonly disabled: boolean;\n\n  /** Whether the control is in an error state. */\n  readonly errorState: boolean;\n\n  /**\n   * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n   * based on their control type. The form field will add a class,\n   * `mat-form-field-type-{{controlType}}` to its root element.\n   */\n  readonly controlType?: string;\n\n  /**\n   * Whether the input is currently in an autofilled state. If property is not present on the\n   * control it is assumed to be false.\n   */\n  readonly autofilled?: boolean;\n\n  /** Sets the list of element IDs that currently describe this control. */\n  abstract setDescribedByIds(ids: string[]): void;\n\n  /** Handles a click on the control's container. */\n  abstract onContainerClick(event: MouseEvent): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function getMatFormFieldPlaceholderConflictError(): Error {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n\n/** @docs-private */\nexport function getMatFormFieldDuplicatedHintError(align: string): Error {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n\n/** @docs-private */\nexport function getMatFormFieldMissingControlError(): Error {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, Input} from '@angular/core';\n\n\nlet nextUniqueId = 0;\n\n\n/** Hint text to be shown underneath the form field control. */\n@Directive({\n  selector: 'mat-hint',\n  host: {\n    'class': 'mat-hint',\n    '[class.mat-right]': 'align == \"end\"',\n    '[attr.id]': 'id',\n    // Remove align attribute to prevent it from interfering with layout.\n    '[attr.align]': 'null',\n  }\n})\nexport class MatHint {\n  /** Whether to align the hint label at the start or end of the line. */\n  @Input() align: 'start' | 'end' = 'start';\n\n  /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n  @Input() id: string = `mat-hint-${nextUniqueId++}`;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/** The floating label for a `mat-form-field`. */\n@Directive({\n  selector: 'mat-label'\n})\nexport class MatLabel {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\n@Directive({\n  selector: 'mat-placeholder'\n})\nexport class MatPlaceholder {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/** Prefix to be placed in front of the form field. */\n@Directive({\n  selector: '[matPrefix]',\n})\nexport class MatPrefix {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive} from '@angular/core';\n\n\n/** Suffix to be placed at the end of the form field. */\n@Directive({\n  selector: '[matSuffix]',\n})\nexport class MatSuffix {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {\n  CanColor, CanColorCtor,\n  LabelOptions,\n  MAT_LABEL_GLOBAL_OPTIONS,\n  mixinColor,\n} from '@angular/material/core';\nimport {fromEvent, merge, Subject} from 'rxjs';\nimport {startWith, take, takeUntil} from 'rxjs/operators';\nimport {MatError} from './error';\nimport {matFormFieldAnimations} from './form-field-animations';\nimport {MatFormFieldControl} from './form-field-control';\nimport {\n  getMatFormFieldDuplicatedHintError,\n  getMatFormFieldMissingControlError,\n  getMatFormFieldPlaceholderConflictError,\n} from './form-field-errors';\nimport {MatHint} from './hint';\nimport {MatLabel} from './label';\nimport {MatPlaceholder} from './placeholder';\nimport {MatPrefix} from './prefix';\nimport {MatSuffix} from './suffix';\nimport {Platform} from '@angular/cdk/platform';\nimport {NgControl} from '@angular/forms';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n\n\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nclass MatFormFieldBase {\n  constructor(public _elementRef: ElementRef) { }\n}\n\n/**\n * Base class to which we're applying the form field mixins.\n * @docs-private\n */\nconst _MatFormFieldMixinBase: CanColorCtor & typeof MatFormFieldBase =\n    mixinColor(MatFormFieldBase, 'primary');\n\n/** Possible appearance styles for the form field. */\nexport type MatFormFieldAppearance = 'legacy' | 'standard' | 'fill' | 'outline';\n\n/** Possible values for the \"floatLabel\" form-field input. */\nexport type FloatLabelType = 'always' | 'never' | 'auto';\n\n/**\n * Represents the default options for the form field that can be configured\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\n */\nexport interface MatFormFieldDefaultOptions {\n  appearance?: MatFormFieldAppearance;\n  hideRequiredMarker?: boolean;\n  /**\n   * Whether the label for form-fields should by default float `always`,\n   * `never`, or `auto` (only when necessary).\n   */\n  floatLabel?: FloatLabelType;\n}\n\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nexport const MAT_FORM_FIELD_DEFAULT_OPTIONS =\n    new InjectionToken<MatFormFieldDefaultOptions>('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nexport const MAT_FORM_FIELD = new InjectionToken<MatFormField>('MatFormField');\n\n/** Container for form controls that applies Material Design styling and behavior. */\n@Component({\n  selector: 'mat-form-field',\n  exportAs: 'matFormField',\n  templateUrl: 'form-field.html',\n  // MatInput is a directive and can't have styles, so we need to include its styles here\n  // in form-field-input.css. The MatInput styles are fairly minimal so it shouldn't be a\n  // big deal for people who aren't using MatInput.\n  styleUrls: [\n    'form-field.css',\n    'form-field-fill.css',\n    'form-field-input.css',\n    'form-field-legacy.css',\n    'form-field-outline.css',\n    'form-field-standard.css',\n  ],\n  animations: [matFormFieldAnimations.transitionMessages],\n  host: {\n    'class': 'mat-form-field',\n    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n    '[class.mat-form-field-invalid]': '_control.errorState',\n    '[class.mat-form-field-can-float]': '_canLabelFloat',\n    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n    '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n    '[class.mat-form-field-disabled]': '_control.disabled',\n    '[class.mat-form-field-autofilled]': '_control.autofilled',\n    '[class.mat-focused]': '_control.focused',\n    '[class.mat-accent]': 'color == \"accent\"',\n    '[class.mat-warn]': 'color == \"warn\"',\n    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n    '[class.ng-touched]': '_shouldForward(\"touched\")',\n    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n    '[class.ng-valid]': '_shouldForward(\"valid\")',\n    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n    '[class.ng-pending]': '_shouldForward(\"pending\")',\n    '[class._mat-animation-noopable]': '!_animationsEnabled',\n  },\n  inputs: ['color'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {provide: MAT_FORM_FIELD, useExisting: MatFormField},\n  ]\n})\n\nexport class MatFormField extends _MatFormFieldMixinBase\n    implements AfterContentInit, AfterContentChecked, AfterViewInit, OnDestroy, CanColor {\n  private _labelOptions: LabelOptions;\n\n  /**\n   * Whether the outline gap needs to be calculated\n   * immediately on the next change detection run.\n   */\n  private _outlineGapCalculationNeededImmediately = false;\n\n  /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n  private _outlineGapCalculationNeededOnStable = false;\n\n  private _destroyed = new Subject<void>();\n\n  /** The form-field appearance style. */\n  @Input()\n  get appearance(): MatFormFieldAppearance { return this._appearance; }\n  set appearance(value: MatFormFieldAppearance) {\n    const oldValue = this._appearance;\n\n    this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n\n    if (this._appearance === 'outline' && oldValue !== value) {\n      this._outlineGapCalculationNeededOnStable = true;\n    }\n  }\n  _appearance: MatFormFieldAppearance;\n\n  /** Whether the required marker should be hidden. */\n  @Input()\n  get hideRequiredMarker(): boolean { return this._hideRequiredMarker; }\n  set hideRequiredMarker(value: boolean) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\n  private _hideRequiredMarker: boolean;\n\n  /** Override for the logic that disables the label animation in certain cases. */\n  private _showAlwaysAnimate = false;\n\n  /** Whether the floating label should always float or not. */\n  get _shouldAlwaysFloat(): boolean {\n    return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n  }\n\n  /** Whether the label can float or not. */\n  get _canLabelFloat(): boolean { return this.floatLabel !== 'never'; }\n\n  /** State of the mat-hint and mat-error animations. */\n  _subscriptAnimationState: string = '';\n\n  /** Text for the form field hint. */\n  @Input()\n  get hintLabel(): string { return this._hintLabel; }\n  set hintLabel(value: string) {\n    this._hintLabel = value;\n    this._processHints();\n  }\n  private _hintLabel = '';\n\n  // Unique id for the hint label.\n  _hintLabelId: string = `mat-hint-${nextUniqueId++}`;\n\n  // Unique id for the internal form field label.\n  _labelId = `mat-form-field-label-${nextUniqueId++}`;\n\n  /**\n   * Whether the label should always float, never float or float as the user types.\n   *\n   * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n   * way to make the floating label emulate the behavior of a standard input placeholder. However\n   * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n   * appearances the `never` option has been disabled in favor of just using the placeholder.\n   */\n  @Input()\n  get floatLabel(): FloatLabelType {\n    return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n  }\n  set floatLabel(value: FloatLabelType) {\n    if (value !== this._floatLabel) {\n      this._floatLabel = value || this._getDefaultFloatLabelState();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _floatLabel: FloatLabelType;\n\n  /** Whether the Angular animations are enabled. */\n  _animationsEnabled: boolean;\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  @ViewChild('underline') underlineRef: ElementRef;\n\n  @ViewChild('connectionContainer', {static: true}) _connectionContainerRef: ElementRef;\n  @ViewChild('inputContainer') _inputContainerRef: ElementRef;\n  @ViewChild('label') private _label: ElementRef<HTMLElement>;\n\n  @ContentChild(MatFormFieldControl) _controlNonStatic: MatFormFieldControl<any>;\n  @ContentChild(MatFormFieldControl, {static: true}) _controlStatic: MatFormFieldControl<any>;\n  get _control() {\n    // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n    //  We should clean this up once Ivy is the default renderer.\n    return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n  }\n  set _control(value) {\n    this._explicitFormFieldControl = value;\n  }\n  private _explicitFormFieldControl: MatFormFieldControl<any>;\n\n  @ContentChild(MatLabel) _labelChildNonStatic: MatLabel;\n  @ContentChild(MatLabel, {static: true}) _labelChildStatic: MatLabel;\n  get _labelChild() {\n    return this._labelChildNonStatic || this._labelChildStatic;\n  }\n\n  @ContentChild(MatPlaceholder) _placeholderChild: MatPlaceholder;\n  @ContentChildren(MatError, {descendants: true}) _errorChildren: QueryList<MatError>;\n  @ContentChildren(MatHint, {descendants: true}) _hintChildren: QueryList<MatHint>;\n  @ContentChildren(MatPrefix, {descendants: true}) _prefixChildren: QueryList<MatPrefix>;\n  @ContentChildren(MatSuffix, {descendants: true}) _suffixChildren: QueryList<MatSuffix>;\n\n  constructor(\n      public _elementRef: ElementRef, private _changeDetectorRef: ChangeDetectorRef,\n      @Optional() @Inject(MAT_LABEL_GLOBAL_OPTIONS) labelOptions: LabelOptions,\n      @Optional() private _dir: Directionality,\n      @Optional() @Inject(MAT_FORM_FIELD_DEFAULT_OPTIONS) private _defaults:\n          MatFormFieldDefaultOptions, private _platform: Platform, private _ngZone: NgZone,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) _animationMode: string) {\n    super(_elementRef);\n\n    this._labelOptions = labelOptions ? labelOptions : {};\n    this.floatLabel = this._getDefaultFloatLabelState();\n    this._animationsEnabled = _animationMode !== 'NoopAnimations';\n\n    // Set the default through here so we invoke the setter on the first run.\n    this.appearance = (_defaults && _defaults.appearance) ? _defaults.appearance : 'legacy';\n    this._hideRequiredMarker = (_defaults && _defaults.hideRequiredMarker != null) ?\n        _defaults.hideRequiredMarker : false;\n  }\n\n  /**\n   * Gets an ElementRef for the element that a overlay attached to the form-field should be\n   * positioned relative to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._connectionContainerRef || this._elementRef;\n  }\n\n  ngAfterContentInit() {\n    this._validateControlChild();\n\n    const control = this._control;\n\n    if (control.controlType) {\n      this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n    }\n\n    // Subscribe to changes in the child control state in order to update the form field UI.\n    control.stateChanges.pipe(startWith(null!)).subscribe(() => {\n      this._validatePlaceholders();\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Run change detection if the value changes.\n    if (control.ngControl && control.ngControl.valueChanges) {\n      control.ngControl.valueChanges\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n\n    // Note that we have to run outside of the `NgZone` explicitly,\n    // in order to avoid throwing users into an infinite loop\n    // if `zone-patch-rxjs` is included.\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (this._outlineGapCalculationNeededOnStable) {\n          this.updateOutlineGap();\n        }\n      });\n    });\n\n    // Run change detection and update the outline if the suffix or prefix changes.\n    merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n      this._outlineGapCalculationNeededOnStable = true;\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Re-validate when the number of hints changes.\n    this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n      this._processHints();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    // Update the aria-described by when the number of errors changes.\n    this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n\n    if (this._dir) {\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (typeof requestAnimationFrame === 'function') {\n          this._ngZone.runOutsideAngular(() => {\n            requestAnimationFrame(() => this.updateOutlineGap());\n          });\n        } else {\n          this.updateOutlineGap();\n        }\n      });\n    }\n  }\n\n  ngAfterContentChecked() {\n    this._validateControlChild();\n    if (this._outlineGapCalculationNeededImmediately) {\n      this.updateOutlineGap();\n    }\n  }\n\n  ngAfterViewInit() {\n    // Avoid animations on load.\n    this._subscriptAnimationState = 'enter';\n    this._changeDetectorRef.detectChanges();\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Determines whether a class from the NgControl should be forwarded to the host element. */\n  _shouldForward(prop: keyof NgControl): boolean {\n    const ngControl = this._control ? this._control.ngControl : null;\n    return ngControl && ngControl[prop];\n  }\n\n  _hasPlaceholder() {\n    return !!(this._control && this._control.placeholder || this._placeholderChild);\n  }\n\n  _hasLabel() {\n    return !!this._labelChild;\n  }\n\n  _shouldLabelFloat() {\n    return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\n  }\n\n  _hideControlPlaceholder() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this.appearance === 'legacy' && !this._hasLabel() ||\n        this._hasLabel() && !this._shouldLabelFloat();\n  }\n\n  _hasFloatingLabel() {\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\n    return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\n  }\n\n  /** Determines whether to display hints or errors. */\n  _getDisplayedMessages(): 'error' | 'hint' {\n    return (this._errorChildren && this._errorChildren.length > 0 &&\n        this._control.errorState) ? 'error' : 'hint';\n  }\n\n  /** Animates the placeholder up and locks it in position. */\n  _animateAndLockLabel(): void {\n    if (this._hasFloatingLabel() && this._canLabelFloat) {\n      // If animations are disabled, we shouldn't go in here,\n      // because the `transitionend` will never fire.\n      if (this._animationsEnabled && this._label) {\n        this._showAlwaysAnimate = true;\n\n        fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\n          this._showAlwaysAnimate = false;\n        });\n      }\n\n      this.floatLabel = 'always';\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n   * or child element with the `mat-placeholder` directive).\n   */\n  private _validatePlaceholders() {\n    if (this._control.placeholder && this._placeholderChild) {\n      throw getMatFormFieldPlaceholderConflictError();\n    }\n  }\n\n  /** Does any extra processing that is required when handling the hints. */\n  private _processHints() {\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n\n  /**\n   * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n   * attribute being considered as `align=\"start\"`.\n   */\n  private _validateHints() {\n    if (this._hintChildren) {\n      let startHint: MatHint;\n      let endHint: MatHint;\n      this._hintChildren.forEach((hint: MatHint) => {\n        if (hint.align === 'start') {\n          if (startHint || this.hintLabel) {\n            throw getMatFormFieldDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align === 'end') {\n          if (endHint) {\n            throw getMatFormFieldDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n\n  /** Gets the default float label state. */\n  private _getDefaultFloatLabelState(): FloatLabelType {\n    return (this._defaults && this._defaults.floatLabel) || this._labelOptions.float || 'auto';\n  }\n\n  /**\n   * Sets the list of element IDs that describe the child control. This allows the control to update\n   * its `aria-describedby` attribute accordingly.\n   */\n  private _syncDescribedByIds() {\n    if (this._control) {\n      let ids: string[] = [];\n\n      if (this._getDisplayedMessages() === 'hint') {\n        const startHint = this._hintChildren ?\n            this._hintChildren.find(hint => hint.align === 'start') : null;\n        const endHint = this._hintChildren ?\n            this._hintChildren.find(hint => hint.align === 'end') : null;\n\n        if (startHint) {\n          ids.push(startHint.id);\n        } else if (this._hintLabel) {\n          ids.push(this._hintLabelId);\n        }\n\n        if (endHint) {\n          ids.push(endHint.id);\n        }\n      } else if (this._errorChildren) {\n        ids = this._errorChildren.map(error => error.id);\n      }\n\n      this._control.setDescribedByIds(ids);\n    }\n  }\n\n  /** Throws an error if the form field's control is missing. */\n  protected _validateControlChild() {\n    if (!this._control) {\n      throw getMatFormFieldMissingControlError();\n    }\n  }\n\n  /**\n   * Updates the width and position of the gap in the outline. Only relevant for the outline\n   * appearance.\n   */\n  updateOutlineGap() {\n    const labelEl = this._label ? this._label.nativeElement : null;\n\n    if (this.appearance !== 'outline' || !labelEl || !labelEl.children.length ||\n        !labelEl.textContent!.trim()) {\n      return;\n    }\n\n    if (!this._platform.isBrowser) {\n      // getBoundingClientRect isn't available on the server.\n      return;\n    }\n    // If the element is not present in the DOM, the outline gap will need to be calculated\n    // the next time it is checked and in the DOM.\n    if (!this._isAttachedToDOM()) {\n      this._outlineGapCalculationNeededImmediately = true;\n      return;\n    }\n\n    let startWidth = 0;\n    let gapWidth = 0;\n\n    const container = this._connectionContainerRef.nativeElement;\n    const startEls = container.querySelectorAll('.mat-form-field-outline-start');\n    const gapEls = container.querySelectorAll('.mat-form-field-outline-gap');\n\n    if (this._label && this._label.nativeElement.children.length) {\n      const containerRect = container.getBoundingClientRect();\n\n      // If the container's width and height are zero, it means that the element is\n      // invisible and we can't calculate the outline gap. Mark the element as needing\n      // to be checked the next time the zone stabilizes. We can't do this immediately\n      // on the next change detection, because even if the element becomes visible,\n      // the `ClientRect` won't be reclaculated immediately. We reset the\n      // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n      if (containerRect.width === 0 && containerRect.height === 0) {\n        this._outlineGapCalculationNeededOnStable = true;\n        this._outlineGapCalculationNeededImmediately = false;\n        return;\n      }\n\n      const containerStart = this._getStartEnd(containerRect);\n      const labelChildren = labelEl.children;\n      const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n      let labelWidth = 0;\n\n      for (let i = 0; i < labelChildren.length; i++) {\n        labelWidth += (labelChildren[i] as HTMLElement).offsetWidth;\n      }\n      startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n      gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n    }\n\n    for (let i = 0; i < startEls.length; i++) {\n      startEls[i].style.width = `${startWidth}px`;\n    }\n    for (let i = 0; i < gapEls.length; i++) {\n      gapEls[i].style.width = `${gapWidth}px`;\n    }\n\n    this._outlineGapCalculationNeededOnStable =\n        this._outlineGapCalculationNeededImmediately = false;\n  }\n\n  /** Gets the start end of the rect considering the current directionality. */\n  private _getStartEnd(rect: ClientRect): number {\n    return (this._dir && this._dir.value === 'rtl') ? rect.right : rect.left;\n  }\n\n  /** Checks whether the form field is attached to the DOM. */\n  private _isAttachedToDOM(): boolean {\n    const element: HTMLElement = this._elementRef.nativeElement;\n\n    if (element.getRootNode) {\n      const rootNode = element.getRootNode();\n      // If the element is inside the DOM the root node will be either the document\n      // or the closest shadow root, otherwise it'll be the element itself.\n      return rootNode && rootNode !== element;\n    }\n\n    // Otherwise fall back to checking if it's in the document. This doesn't account for\n    // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n    return document.documentElement!.contains(element);\n  }\n\n  static ngAcceptInputType_hideRequiredMarker: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatError} from './error';\nimport {MatFormField} from './form-field';\nimport {MatHint} from './hint';\nimport {MatLabel} from './label';\nimport {MatPlaceholder} from './placeholder';\nimport {MatPrefix} from './prefix';\nimport {MatSuffix} from './suffix';\n\n@NgModule({\n  declarations: [\n    MatError,\n    MatFormField,\n    MatHint,\n    MatLabel,\n    MatPlaceholder,\n    MatPrefix,\n    MatSuffix,\n  ],\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    ObserversModule,\n  ],\n  exports: [\n    MatCommonModule,\n    MatError,\n    MatFormField,\n    MatHint,\n    MatLabel,\n    MatPlaceholder,\n    MatPrefix,\n    MatSuffix,\n  ],\n})\nexport class MatFormFieldModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './form-field-module';\nexport * from './error';\nexport * from './form-field';\nexport {MatFormFieldControl} from './form-field-control';\nexport * from './form-field-errors';\nexport * from './hint';\nexport * from './placeholder';\nexport * from './prefix';\nexport * from './suffix';\nexport * from './label';\nexport * from './form-field-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}