{"version":3,"file":"menu.js","sources":["../../../../../../src/material/menu/menu-animations.ts","../../../../../../src/material/menu/menu-content.ts","../../../../../../src/material/menu/menu-errors.ts","../../../../../../src/material/menu/menu-panel.ts","../../../../../../src/material/menu/menu-item.ts","../../../../../../src/material/menu/menu.ts","../../../../../../src/material/menu/menu-trigger.ts","../../../../../../src/material/menu/menu-module.ts","../../../../../../src/material/menu/menu-positions.ts","../../../../../../src/material/menu/public-api.ts","../../../../../../src/material/menu/index.ts"],"names":["observableOf"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AACA,MAAa,iBAAiB,GAG1B;AACJ;AACE;AACE;AACE;AAEH;AAAO;AACE;AAEJ;AAAQ,IAAd,aAAa,EAAE,OAAO,CAAC,eAAe,EAAE;AAC1C,QAAI,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC;AACxB,YAAM,OAAO,EAAE,CAAC;AAChB,YAAM,SAAS,EAAE,YAAY;AAC7B,SAAK,CAAC,CAAC;AACP,QAAI,UAAU,CAAC,eAAe,EAAE,KAAK,CAAC;AACtC,YAAM,KAAK,CAAC,0CAA0C,EAAE,OAAO,CAAC,cAAc,EAAE,KAAK,CAAC;AACtF,gBAAQ,OAAO,EAAE,CAAC;AAClB,aAAO,CAAC,CAAC,CAAC;AACV,YAAM,OAAO,CAAC,kCAAkC,EAAE,KAAK,CAAC,EAAC,SAAS,EAAE,UAAU,EAAC,CAAC,CAAC;AACjF,SAAK,CAAC,CAAC;AACP,QAAI,UAAU,CAAC,WAAW,EAAE,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC,CAAC;AAC9E,KAAG,CAAC;AACJ;AAGA;AACE;AACE;AACE,IAAJ,WAAW,EAAE,OAAO,CAAC,aAAa,EAAE;AACtC;AACI;AACI,QAAJ,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;AACzC,QAAI,UAAU,CAAC,WAAW,EAAE;AAC5B,YAAM,KAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC;AACzB,YAAM,OAAO,CAAC,8CAA8C,CAAC;AAC7D,SAAK,CAAC;AACN,KAAG,CAAC;AACJ,CAAC,CAAC;AACF;AACG;AACW;AACW;AACT;AAEhB,MAAa,WAAW,GAAG,iBAAiB,CAAC,WAAW,CAAC;AACzD;AACG;AACW;AACW;AACT;AAEhB,MAAa,aAAa,GAAG,iBAAiB,CAAC,aAAa;AAC5D;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AAiBA;AACA;AACA;AACA;AAC+B,IAD/B,MAGa,cAAc;AAAG,QAO5B,YACU,SAA2B,EAC3B,yBAAmD,EACnD,OAAuB,EACvB,SAAmB,EACnB,iBAAmC,EACjB,SAAc,EAChC,kBAAsC;AAAI,YAN1C,cAAS,GAAT,SAAS,CAAkB;AAAC,YAC5B,8BAAyB,GAAzB,yBAAyB,CAA0B;AAAC,YACpD,YAAO,GAAP,OAAO,CAAgB;AAAC,YACxB,cAAS,GAAT,SAAS,CAAU;AAAC,YACpB,sBAAiB,GAAjB,iBAAiB,CAAkB;AAAC,YAClB,cAAS,GAAT,SAAS,CAAK;AAAC,YACjC,uBAAkB,GAAlB,kBAAkB,CAAoB;AAAC;AAIjD,YAbA,cAAS,GAAG,IAAI,OAAO,EAAQ,CAAC;AAClC,SAQsD;AACtD;AAEK;AACM;AAEA;AAAY,QAArB,MAAM,CAAC,UAAe,EAAE;AAC1B,YAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACvB,gBAAM,IAAI,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AAChF,aAAK;AACL,YACI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,YACI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;AACvB,gBAAM,IAAI,CAAC,OAAO,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,EAClE,IAAI,CAAC,yBAAyB,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;AACxE,aAAK;AACL,YACI,MAAM,OAAO,GAAgB,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC;AACzE;AAEO;AACQ;AACQ,YAAnB,OAAO,CAAC,UAAW,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;AAC1E;AAEO;AACQ;AACQ;AACQ;AACQ;AAE3B,YADR,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACjC,gBAAM,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;AAC7C,aAAK;AACL,YACI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAC/C,YAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;AAC1B,SAAG;AACH;AAEK;AACM;AAEA;AACD,QADR,MAAM;AACR,YAAI,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE;AACjC,gBAAM,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;AAC5B,aAAK;AACL,SAAG;AACH,QACE,WAAW;AACb,YAAI,IAAI,IAAI,CAAC,OAAO,EAAE;AACtB,gBAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;AAC7B,aAAK;AACL,SAAG;AACH;kDAvEC,SAAS,SAAC,sBACT,QAAQ,EAAE,6BAA6B,kBACxC;6HACQ;AAAC;AACP,gBAZD,WAAW;AACX,gBANA,wBAAwB;AACxB,gBAHA,cAAc;AACd,gBAIA,QAAQ;AACR,gBAEA,gBAAgB;AAChB,gDAsBG,MAAM,SAAC,QAAQ;AAAS,gBA9B3B,iBAAiB;AAClB;;;;;;;;;sEAAM;AAAC,IAoFR,qBAAC;AACA;AAAM;AClGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACG;AACyF;AAC5E;AAEhB,SAAgB,wBAAwB;AACxC,IAAE,MAAM,KAAK,CAAC;AACd;AACA;AACA;AACA,mDAAmD,CAAC,CAAC;AACrD,CAAC;AACD;AACG;AAC0E;AACrB;AACxC;AAEhB,SAAgB,4BAA4B;AAC5C,IAAE,MAAM,KAAK,CAAC;AACd,wEAAwE,CAAC,CAAC;AAC1E,CAAC;AACD;AACG;AAC0E;AACtB;AACvC;AAEhB,SAAgB,4BAA4B;AAC5C,IAAE,MAAM,KAAK,CAAC;AACd,uEAAuE,CAAC,CAAC;AACzE,CAAC;AACD;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA,MAAa,cAAc,GAAG,IAAI,cAAc,CAAe,gBAAgB,CAAC;AAChF;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AA0BA;AACA;AACA,MAAM,eAAe;AAAG,CAAA;AACxB,MAAM,qBAAqB,GACvB,kBAAkB,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;AACvD;AACG;AAC+F;AAElG;AAC4B,IAD5B,MAkBa,WAAY,SAAQ,qBAAqB;AACpD,QAmBA,YACU,WAAoC,EAC1B,QAAc,EACxB,aAA4B,EACO,WAAuC;AACtF;AAEO,YAAH,KAAK,EAAE,CAAC;AACZ,YAPY,gBAAW,GAAX,WAAW,CAAyB;AAAC,YAErC,kBAAa,GAAb,aAAa,CAAe;AAAC,YACM,gBAAW,GAAX,WAAW,CAA4B;AAAC;AAE3C,YAtBjC,SAAI,GAAsD,UAAU,CAAC;AAChF;AAGmC,YACxB,aAAQ,GAAyB,IAAI,OAAO,EAAe,CAAC;AACvE;AAES,YAAE,aAAQ,GAAG,IAAI,OAAO,EAAe,CAAC;AACjD;AAES,YAAP,iBAAY,GAAY,KAAK,CAAC;AAChC;AAES,YAAP,qBAAgB,GAAY,KAAK,CAAC;AACpC,YAUI,IAAI,WAAW,IAAI,WAAW,CAAC,OAAO,EAAE;AAC5C,gBAAM,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AAChC,aAAK;AACL,YACI,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;AAC9B,SAAG;AACH;AAEK,QAAH,KAAK,CAAC,SAAsB,SAAS,EAAE,OAAsB;AAAI,YAC/D,IAAI,IAAI,CAAC,aAAa,EAAE;AAC5B,gBAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AAC3E,aAAK;AAAC,iBAAK;AACX,gBAAM,IAAI,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC5C,aAAK;AACL,YACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,SAAG;AACH,QACE,eAAe;AACjB,YAAI,IAAI,IAAI,CAAC,aAAa,EAAE;AAC5B;AACU;AACU;AACU,gBAAxB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;AAC1D,aAAK;AACL,SAAG;AACH,QACE,WAAW;AACb,YAAI,IAAI,IAAI,CAAC,aAAa,EAAE;AAC5B,gBAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAC1D,aAAK;AACL,YACI,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;AACzD,gBAAM,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AACxC,aAAK;AACL,YACI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC7B,YAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;AAC7B,SAAG;AACH;AAEK,QAAH,YAAY;AAAK,YACf,OAAO,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC;AACtC,SAAG;AACH;AAEK,QAAH,eAAe;AAAK,YAClB,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;AAC1C,SAAG;AACH;AAEK;AACM;AACM;AACM;AACM;AACM,QACjC,cAAc,CAAC,KAAY;AAAI,YAC7B,IAAI,IAAI,CAAC,QAAQ,EAAE;AACvB,gBAAM,KAAK,CAAC,cAAc,EAAE,CAAC;AAC7B,gBAAM,KAAK,CAAC,eAAe,EAAE,CAAC;AAC9B,aAAK;AACL,SAAG;AACH;AAEK;AACM;AACM;AACM;AACM;AAExB,QAAH,iBAAiB;AACnB,YAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC7B,SAAG;AACH;AAEK,QAAH,QAAQ;AAAK,YACX,MAAM,OAAO,GAAgB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;AAChE,YAAI,MAAM,YAAY,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;AACvE,YAAI,IAAI,MAAM,GAAG,EAAE,CAAC;AACpB,YACI,IAAI,OAAO,CAAC,UAAU,EAAE;AAC5B,gBAAM,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC;AAC/C;AAES;AACU;AACU,gBAAvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AACvC,oBAAQ,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,YAAY,EAAE;AAC7D,wBAAU,MAAM,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;AACtD,qBAAS;AACT,iBAAO;AACP,aAAK;AACL,YACI,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC;AACzB,SAAG;AACH;+CA/IC,SAAS,SAAC,sBACT,QAAQ,EAAE,iBAAiB,sBAC3B,QAAQ,EAAE,aAAa,sBACvB,MAAM,EAAE,CAAC,UAAU,EAAE,eAAe,CAAC,sBACrC,IAAI,EAAE;YACJ,aAAa,EAAE,MAAM,0BACrB,uBAAuB,EAAE,MAAM,0BAC/B,mCAAmC,EAAE,cAAc,0BACnD;CAAuC,EAAE,kBAAkB,0BAC3D,iBAAiB,EAAE,gBAAgB,0BACnC,sBAAsB,EAAE,qBAAqB,0BAC7C,iBAAiB,EAAE,kBAAkB;QACrC,OAAO,EAAE;kBAAqB,uBAC/B,sBACD,eAAe,EAAE,uBAAuB,CAAC,MAAM,sBAC/C,aAAa,EAAE;UAAiB,CAAC,IAAI,sBACrC;6EAA6B,kBAC9B;;;;;;;iFACQ;AAAC;AAAyC,gBA9CjD,UAAU;AACV,gDAmEG,MAAM,SAAC,QAAQ;AAAS,gBAzEJ,YAAY;AAAI,gDA2EpC,MAAM,SAAC,cAAc,cAAG,QAAQ;AAAM;AAAO;AAAmC,uBApBlF,KAAK;AAAK,iCAiFV,YAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;AAC9B,oCAaF,YAAY,SAAC,YAAY;AACxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAM;AAAC,IA4BX,kBAAC;AACA;AAAM;AC5LP;AACA;AACA;AACA;AACA;AACA;AACA;AAgEA;AACA,MAAa,wBAAwB,GACjC,IAAI,cAAc,CAAwB,0BAA0B,EAAE;AAC1E,IAAM,UAAU,EAAE,MAAM;AACxB,IAAM,OAAO,EAAE,gCAAgC;AAC/C,CAAK,CAAC,CAAC;AACP;AAEA,SAAgB,gCAAgC;AAAK,IACnD,OAAO;AACT,QAAI,cAAc,EAAE,KAAK;AACzB,QAAI,SAAS,EAAE,OAAO;AACtB,QAAI,SAAS,EAAE,OAAO;AACtB,QAAI,aAAa,EAAE,kCAAkC;AACrD,KAAG,CAAC;AACJ,CAAC;AACD;AACA;AACA;AACA;AACA,MAAM,uBAAuB,GAAG,CAAC,CAAC;AAElC,IAAI,YAAY,GAAG,CAAC,CAAC;AACrB;AAEA;AAC6B,IAD7B,MAEa,YAAY;AAAG,QAwJ1B,YACU,WAAoC,EACpC,OAAe,EACmB,eAAsC;AAAI,YAF5E,gBAAW,GAAX,WAAW,CAAyB;AAAC,YACrC,YAAO,GAAP,OAAO,CAAQ;AAAC,YACkB,oBAAe,GAAf,eAAe,CAAuB;AAAC,YAxJ3E,eAAU,GAAkB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;AACrE,YAAU,eAAU,GAAkB,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC;AACrE;AAEmB,YAIT,2BAAsB,GAAG,IAAI,SAAS,EAAe,CAAC;AAChE;AAES,YAAC,qBAAgB,GAAG,YAAY,CAAC,KAAK,CAAC;AAChD;AAES,YAAP,eAAU,GAA6B,EAAE,CAAC;AAC5C;AAES,YAAP,yBAAoB,GAAqB,MAAM,CAAC;AAClD;AAES,YAAP,mBAAc,GAAG,IAAI,OAAO,EAAkB,CAAC;AACjD;AAEqB,YASV,kBAAa,GAAW,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;AACtE,YAsDU,oBAAe,GAAY,IAAI,CAAC,eAAe,CAAC,cAAc,CAAC;AACzE,YAOU,iBAAY,GAAwB,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC;AAC/E;AAEmD,YAuC9B,WAAM,GACrB,IAAI,YAAY,EAAsC,CAAC;AAC7D;AAES;AACU;AAElB;AACgC;AAAgB,YAArC,UAAK,GAAqD,IAAI,CAAC,MAAM,CAAC;AAClF,YACW,YAAO,GAAG,kBAAkB,YAAY,EAAE,EAAE,CAAC;AACxD,SAIyF;AACzF;AAIA,QAjHE,IACI,SAAS,KAAoB,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;AAC5D,QAAE,IAAI,SAAS,CAAC,KAAoB;AACpC,YAAI,IAAI,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,OAAO,EAAE;AACjD,gBAAM,4BAA4B,EAAE,CAAC;AACrC,aAAK;AACL,YAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC5B,YAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,SAAG;AACH;AAEK,QAAH,IACI,SAAS,KAAoB,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;AAC5D,QAAE,IAAI,SAAS,CAAC,KAAoB;AACpC,YAAI,IAAI,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK,OAAO,EAAE;AAChD,gBAAM,4BAA4B,EAAE,CAAC;AACrC,aAAK;AACL,YAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC5B,YAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,SAAG;AACH;AAEoC,QAgBlC,IACI,cAAc,KAAc,OAAO,IAAI,CAAC,eAAe,CAAC,EAAE;AAChE,QAAE,IAAI,cAAc,CAAC,KAAc;AACnC,YAAI,IAAI,CAAC,eAAe,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;AACxD,SAAG;AACH;AAAgD,QAG9C,IACI,WAAW,KAA0B,OAAO,IAAI,CAAC,YAAY,CAAC,EAAE;AACtE,QAAE,IAAI,WAAW,CAAC,KAA0B;AAC5C,YAAI,IAAI,CAAC,YAAY,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;AACrD,SAAG;AACH;AAAY;AAGO;AACI;AAClB;AAA8C;AAClD,QAEC,IACI,UAAU,CAAC,OAAe;AAChC,YAAI,MAAM,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC;AACxD,YACI,IAAI,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,EAAE;AACzD,gBAAM,kBAAkB,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,SAAiB;AAC9D,oBAAQ,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AAC3C,iBAAO,CAAC,CAAC;AACT,aAAK;AACL,YACI,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;AACvC,YACI,IAAI,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE;AACnC,gBAAM,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,SAAiB;AACnD,oBAAQ,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;AAC1C,iBAAO,CAAC,CAAC;AACT,gBACM,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;AACpD,aAAK;AACL,SAAG;AACH;AAAY;AAGgD;AACI;AAClB;AACb;AACT;AAEtB,QAAA,IACI,SAAS,KAAa,OAAO,IAAI,CAAC,UAAU,CAAC,EAAE;AACrD,QAAE,IAAI,SAAS,CAAC,OAAe,IAAI,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,EAAE;AAC/D,QAmBE,QAAQ;AACV,YAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC9B,SAAG;AACH,QACE,kBAAkB;AACpB,YAAI,IAAI,CAAC,wBAAwB,EAAE,CAAC;AACpC,YAAI,IAAI,CAAC,WAAW,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,QAAQ,EAAE,CAAC,aAAa,EAAE,CAAC;AACnG,YAAI,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7F;AAEO;AACQ;AACQ,YAAnB,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,IAAI,CACtC,SAAS,CAAC,IAAI,CAAC,sBAAsB,CAAC,EACtC,SAAS,CAAC,KAAK,IAAI,KAAK,CAAc,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAiB,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAC3F,CAAC,SAAS,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;AAC/E,SAAG;AACH,QACE,WAAW;AACb,YAAI,IAAI,CAAC,sBAAsB,CAAC,OAAO,EAAE,CAAC;AAC1C,YAAI,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;AACxC,YAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;AAC3B,SAAG;AACH;AAEK,QAAH,QAAQ;AAAK;AACmD,YAC9D,MAAM,WAAW,GAAG,IAAI,CAAC,sBAAsB,CAAC,OAA6C,CAAC;AAClG,YAAI,OAAO,WAAW,CAAC,IAAI,CACrB,SAAS,CAAC,IAAI,CAAC,sBAAsB,CAAC,EACtC,SAAS,CAAC,KAAK,IAAI,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,IAAiB,KAAK,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CACnD,CAAC;AACjC,SAAG;AACH;AAEK;AACM;AACM;AACM;AAEA;AAEtB,QAFC,OAAO,CAAC,KAAkB,KAAI;AAChC;AAEK;AACM;AACM;AACM;AAEA;AAAY,QAAjC,UAAU,CAAC,KAAkB,KAAI;AACnC;AAEK,QAAH,cAAc,CAAC,KAAoB;AACrC,YAAI,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAClC,YAAI,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;AACrC,YACI,QAAQ,OAAO;AACnB,gBAAM,KAAK,MAAM;AACjB,oBAAQ,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;AACpC,wBAAU,KAAK,CAAC,cAAc,EAAE,CAAC;AACjC,wBAAU,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACtC,qBAAS;AACT,oBAAM,MAAM;AACZ,gBAAM,KAAK,UAAU;AACrB,oBAAQ,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;AACzD,wBAAU,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACtC,qBAAS;AACT,oBAAM,MAAM;AACZ,gBAAM,KAAK,WAAW;AACtB,oBAAQ,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;AACzD,wBAAU,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACtC,qBAAS;AACT,oBAAM,MAAM;AACZ,gBAAM,KAAK,IAAI,CAAC;AAChB,gBAAM,KAAK,GAAG;AACd,oBAAQ,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;AACpC,wBAAU,OAAO,KAAK,IAAI,GAAG,OAAO,CAAC,kBAAkB,EAAE,GAAG,OAAO,CAAC,iBAAiB,EAAE,CAAC;AACxF,wBAAU,KAAK,CAAC,cAAc,EAAE,CAAC;AACjC,qBAAS;AACT,oBAAM,MAAM;AACZ,gBAAM;AACN,oBAAQ,IAAI,OAAO,KAAK,QAAQ,IAAI,OAAO,KAAK,UAAU,EAAE;AAC5D,wBAAU,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;AAC7C,qBAAS;AACT,oBACQ,OAAO,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACjC,aAAK;AACL,SAAG;AACH;AAEK;AACM;AAEA;AAAY,QAArB,cAAc,CAAC,SAAsB,SAAS;AAAI;AAElD,YAAE,IAAI,IAAI,CAAC,WAAW,EAAE;AAC1B,gBAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,EAAE;AAC1C,qBAAS,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACtB,qBAAS,SAAS,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;AACvD,aAAK;AAAC,iBAAK;AACX,gBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AACnC,aAAK;AACL,SAAG;AACH;AAEK;AACM;AAEA;AAAY,QAAb,eAAe,CAAC,MAAmB;AAC7C,YAAI,MAAM,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;AACrC,YACI,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,CAAC;AACxD;AAEO;AACQ;AACQ,YAAnB,IAAI,CAAC,OAAO,CAAC,UAAU,IAAI,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE;AACnE,gBAAM,IAAI,OAAO,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,aAAa,CAAC;AACtF;AAES;AACU;AACU;AAEd,gBADT,OAAO,OAAO,EAAE;AACtB,oBAAQ,IAAI,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,MAAM,EAAE;AACrD,wBAAU,OAAO,CAAC,KAAK,EAAE,CAAC;AAC1B,wBAAU,MAAM;AAChB,qBAAS;AAAC,yBAAK;AACf,wBAAU,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC;AAC1C,qBAAS;AACT,iBAAO;AACP,aAAK;AACL,SAAG;AACH;AAEK;AACM;AAEA;AACV,QADC,eAAe;AACjB,YAAI,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,SAAG;AACH;AAEK;AACM;AAEA;AAAY,QAArB,YAAY,CAAC,KAAa;AAAI;AAE9B;AACQ,YAAN,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,uBAAuB,GAAG,KAAK,EAAE,EAAE,CAAC,CAAC;AACpE,YAAI,MAAM,YAAY,GAAG,kBAAkB,SAAS,EAAE,CAAC;AACvD,YAAI,MAAM,eAAe,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;AACpG,YACI,IAAI,CAAC,eAAe,IAAI,eAAe,KAAK,IAAI,CAAC,kBAAkB,EAAE;AACzE,gBAAM,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACnC,oBAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,GAAG,KAAK,CAAC;AACzD,iBAAO;AACP,gBACM,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC;AAC3C,gBAAM,IAAI,CAAC,kBAAkB,GAAG,YAAY,CAAC;AAC7C,aAAK;AACL,SAAG;AACH;AAEK;AACM;AACM;AACM;AAGnB;AAAyB;AAAY,QAAvC,kBAAkB,CAAC,OAAsB,IAAI,CAAC,SAAS,EAAE,OAAsB,IAAI,CAAC,SAAS;AAC/F,YAAI,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC;AACpC,YAAI,OAAO,CAAC,iBAAiB,CAAC,GAAG,IAAI,KAAK,QAAQ,CAAC;AACnD,YAAI,OAAO,CAAC,gBAAgB,CAAC,GAAG,IAAI,KAAK,OAAO,CAAC;AACjD,YAAI,OAAO,CAAC,gBAAgB,CAAC,GAAG,IAAI,KAAK,OAAO,CAAC;AACjD,YAAI,OAAO,CAAC,gBAAgB,CAAC,GAAG,IAAI,KAAK,OAAO,CAAC;AACjD,SAAG;AACH;AAEK,QAAH,eAAe;AACjB;AACQ,YAAJ,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC;AACxC,SAAG;AACH;AAEK,QAAH,eAAe;AACjB;AACQ,YAAJ,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC;AACvC,SAAG;AACH;AAEK,QAAH,gBAAgB,CAAC,KAAqB;AACxC,YAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACpC,YAAI,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAC9B,SAAG;AACH,QACE,iBAAiB,CAAC,KAAqB;AACzC,YAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAC7B;AAEO;AACQ;AACQ;AACQ;AACQ;AACQ,YAA3C,IAAI,KAAK,CAAC,OAAO,KAAK,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,eAAe,KAAK,CAAC,EAAE;AAC7E,gBAAM,KAAK,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;AAClC,aAAK;AACL,SAAG;AACH;AAEK;AACM;AACM;AACM;AAEA;AAAY,QAAzB,wBAAwB;AAClC,YAAI,IAAI,CAAC,SAAS,CAAC,OAAO;AAC1B,iBAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACtC,iBAAO,SAAS,CAAC,CAAC,KAA6B;AAC/C,gBAAQ,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;AAC3F,gBAAQ,IAAI,CAAC,sBAAsB,CAAC,eAAe,EAAE,CAAC;AACtD,aAAO,CAAC,CAAC;AACT,SAAG;AACH;gDA9XC,SAAS;;;;;;;;;;;;;;;0aACJ;AAAC;AACG,gBArER,UAAU;AACV,gBAIA,MAAM;AACN,gDA0NG,MAAM,SAAC,wBAAwB;AAAQ;AAAO;AAAoC,4BAnJpF,eAAe,SAAC,WAAW,EAAE,EAAC,WAAW,EAAE,IAAI,EAAC;AAAO,gCA2BvD,KAAK;AAAK,4BAGV,KAAK,SAAC,YAAY;AAAO,iCAGzB,KAAK,SAAC,iBAAiB;AAAO,kCAG9B,KAAK,SAAC,kBAAkB;AAAO,4BAG/B,KAAK;AACN,4BAUC,KAAK;AACN,8BAUC,SAAS,SAAC,WAAW;AAAO,wBAO5B,eAAe,SAAC,WAAW,EAAE,EAAC,WAAW,EAAE,KAAK,EAAC;AAAO,8BAMxD,YAAY,SAAC,cAAc;AAAO,iCAGlC,KAAK;AACN,8BAOC,KAAK;AACN,6BAYC,KAAK,SAAC,OAAO;AACX,4BA4BF,KAAK;AACN,yBAIC,MAAM;AAAK,wBAQX,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAM;AAAC,IA2OpB,mBAAC;AAED,KAFC;AAED;AACA;AACwB,IADxB,MACa,OAAQ,SAAQ,YAAY;AAAG;2CAD3C,SAAS;;;;;0BACJ;AAAC,IAAoC,cAAC;AAE5C,KAF4C;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEC,IAFD,MAiBa,QAAS,SAAQ,OAAO;AACrC,QACE,YAAY,UAAmC,EAAE,MAAc,EACzB,cAAqC;AAC7E,YAAI,KAAK,CAAC,UAAU,EAAE,MAAM,EAAE,cAAc,CAAC,CAAC;AAC9C,SAAG;AACH;4CAvBC,SAAS,SAAC,sBACT,QAAQ,EAAE,UAAU,sBACpB;;;;;sBAAwB;UAExB,eAAe,EAAE,uBAAuB,CAAC,MAAM,sBAC/C;QAAa,EAAE,iBAAiB,CAAC,IAAI,sBACrC,QAAQ,EAAE,SAAS,sBACnB,UAAU,EAAE,0BACV,iBAAiB,CAAC,aAAa,0BAC/B,iBAAiB,CAAC,WAAW,sBAC9B,sBACD,SAAS,EAAE,0BACT,EAAC,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,OAAO,EAAC,0BAC/C,EAAC,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAC,sBAC1C;;;mCAEM;AAAC;AACD,gBAveP,UAAU;AACV,gBAIA,MAAM;AACN,gDAoeK,MAAM,SAAC,wBAAwB;AAAQ;;cAL7C;;;;;;;;;;;;;;;;;;;;kCAKmD;AAAC,IAGrD,eAAC;AACA;AAAM;AC1gBP;AACA;AACA;AACA;AACA;AACA;AACA;AAsCA;AACA,MAAa,wBAAwB,GACjC,IAAI,cAAc,CAAuB,0BAA0B,CAAC,CAAC;AACzE;AAEA,SAAgB,gCAAgC,CAAC,OAAgB;AAAI,IACnE,OAAO,MAAM,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC;AACrD,CAAC;AACD;AAEA,MAAa,yCAAyC,GAAG;AACzD,IAAE,OAAO,EAAE,wBAAwB;AACnC,IAAE,IAAI,EAAE,CAAC,OAAO,CAAC;AACjB,IAAE,UAAU,EAAE,gCAAgC;AAC9C,CAAC,CAAC;AACF;AAEO,MAAM,sBAAsB,GAAG,CAAC,CAAC;AACxC;AAEA,MAAM,2BAA2B,GAAG,+BAA+B,CAAC,EAAC,OAAO,EAAE,IAAI,EAAC,CAAC,CAAC;AACrF;AAC2F;AAG3F;AAC+B,IAD/B,MAaa,cAAc;AAAG,QAqF5B,YAAoB,QAAiB,EACjB,QAAiC,EACjC,iBAAmC,EACT,cAAmB,EACjC,WAAoB,EACZ,iBAA8B,EACtC,IAAoB;AACrD;AAAwF;AAC5D,QACP,aAA4B;AAClD,YAVsB,aAAQ,GAAR,QAAQ,CAAS;AAAC,YAClB,aAAQ,GAAR,QAAQ,CAAyB;AAAC,YAClC,sBAAiB,GAAjB,iBAAiB,CAAkB;AAAC,YAExB,gBAAW,GAAX,WAAW,CAAS;AAAC,YACb,sBAAiB,GAAjB,iBAAiB,CAAa;AAAC,YACvC,SAAI,GAAJ,IAAI,CAAgB;AAAC,YAGjC,kBAAa,GAAb,aAAa,CAAe;AAAC,YA5FzC,gBAAW,GAAsB,IAAI,CAAC;AAChD,YAAU,cAAS,GAAY,KAAK,CAAC;AACrC,YAAU,gCAA2B,GAAG,YAAY,CAAC,KAAK,CAAC;AAC3D,YAAU,uBAAkB,GAAG,YAAY,CAAC,KAAK,CAAC;AAClD,YAAU,2BAAsB,GAAG,YAAY,CAAC,KAAK,CAAC;AACtD;AAAgB;AAGE;AAC4D;AAAgB,YAEpF,sBAAiB,GAAG,MAAM,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;AAC7D;AAES;AACU,YAAjB,cAAS,GAA6B,IAAI,CAAC;AAC7C;AAES;AAGsB;AAEvB;AAIG;AAAgB,YAgCY,iBAAY,GAAY,IAAI,CAAC;AACpE;AAES,YAAY,eAAU,GAAuB,IAAI,YAAY,EAAQ,CAAC;AAC/E;AAES;AACU;AAElB;AACgC;AAAgB;AACU,YAAtC,eAAU,GAAuB,IAAI,CAAC,UAAU,CAAC;AACtE;AAES,YAAY,eAAU,GAAuB,IAAI,YAAY,EAAQ,CAAC;AAC/E;AAES;AACU;AAElB;AACgC;AAAgB;AACU,YAAtC,gBAAW,GAAuB,IAAI,CAAC,UAAU,CAAC;AACvE,YAYI,QAAQ,CAAC,aAAa,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,EACxE,2BAA2B,CAAC,CAAC;AACrC,YACI,IAAI,iBAAiB,EAAE;AAC3B,gBAAM,iBAAiB,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAClE,aAAK;AACL,YACI,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;AAC1C,SAAG;AACH;AACW;AACF;AACW;AAGlB,QAxFA,IACI,4BAA4B,KAAmB,OAAO,IAAI,CAAC,IAAI,CAAC,EAAE;AACxE,QAAE,IAAI,4BAA4B,CAAC,CAAe;AAClD,YAAI,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;AAClB,SAAG;AACH;AAEK,QAAH,IACI,IAAI,KAAK,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE;AACnC,QAAE,IAAI,IAAI,CAAC,IAAkB;AAC7B,YAAI,IAAI,IAAI,KAAK,IAAI,CAAC,KAAK,EAAE;AAC7B,gBAAM,OAAO;AACb,aAAK;AACL,YACI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,YAAI,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;AAC9C,YACI,IAAI,IAAI,EAAE;AACd,gBAAM,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,MAAM;AAC9E,oBAAQ,IAAI,CAAC,YAAY,EAAE,CAAC;AAC5B;AAEW,oBAAH,IAAI,CAAC,MAAM,KAAK,OAAO,IAAI,MAAM,KAAK,KAAK,KAAK,IAAI,CAAC,WAAW,EAAE;AAC1E,wBAAU,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAC/C,qBAAS;AACT,iBAAO,CAAC,CAAC;AACT,aAAK;AACL,SAAG;AACH,QAuDE,kBAAkB;AACpB,YAAI,IAAI,CAAC,UAAU,EAAE,CAAC;AACtB,YAAI,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,SAAG;AACH,QACE,WAAW;AACb,YAAI,IAAI,IAAI,CAAC,WAAW,EAAE;AAC1B,gBAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;AACjC,gBAAM,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AAC9B,aAAK;AACL,YACI,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,EAChF,2BAA2B,CAAC,CAAC;AACrC,YACI,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,CAAC;AAC9C,YAAI,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;AACnD,YAAI,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;AAC1C,SAAG;AACH;AAEK,QAAH,IAAI,QAAQ;AAAK,YACf,OAAO,IAAI,CAAC,SAAS,CAAC;AAC1B,SAAG;AACH;AAEK,QAAH,IAAI,GAAG;AAAK,YACV,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,CAAC;AAClE,SAAG;AACH;AAEK,QAAH,eAAe;AAAK,YAClB,OAAO,CAAC,EAAE,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,WAAW,CAAC,CAAC;AAC1D,SAAG;AACH;AAEK,QAAH,UAAU;AAAK,YACb,OAAO,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC/D,SAAG;AACH;AAEK,QAAH,QAAQ;AAAK,YACX,IAAI,IAAI,CAAC,SAAS,EAAE;AACxB,gBAAM,OAAO;AACb,aAAK;AACL,YACI,IAAI,CAAC,UAAU,EAAE,CAAC;AACtB,YACI,MAAM,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;AAC7C,YAAI,MAAM,aAAa,GAAG,UAAU,CAAC,SAAS,EAAE,CAAC;AACjD,YACI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,gBAAqD,CAAC,CAAC;AAC3F,YAAI,aAAa,CAAC,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,eAAe,EAAE;AACvF,gBAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;AAC9B,YAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;AACzC,YACI,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AAC/B,gBAAM,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAClD,aAAK;AACL,YACI,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;AACpG,YAAI,IAAI,CAAC,SAAS,EAAE,CAAC;AACrB,YACI,IAAI,IAAI,CAAC,IAAI,YAAY,OAAO,EAAE;AACtC,gBAAM,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC;AAClC,aAAK;AACL,SAAG;AACH;AAEK,QAAH,SAAS;AAAK,YACZ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;AAC3B,SAAG;AACH;AAEK;AACM;AAEA;AAAY,QAArB,KAAK,CAAC,SAAsB,SAAS,EAAE,OAAsB;AAC/D,YAAI,IAAI,IAAI,CAAC,aAAa,EAAE;AAC5B,gBAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC;AAClE,aAAK;AAAC,iBAAK;AACX,gBAAM,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AACjD,aAAK;AACL,SAAG;AACH;AAEK,QAAK,YAAY;AACtB,YAAI,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;AAC7C,gBAAM,OAAO;AACb,aAAK;AACL,YACI,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AAC3B,YAAI,IAAI,CAAC,2BAA2B,CAAC,WAAW,EAAE,CAAC;AACnD,YAAI,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;AAC9B,YAAI,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,YACI,IAAI,IAAI,YAAY,OAAO,EAAE;AACjC,gBAAM,IAAI,CAAC,eAAe,EAAE,CAAC;AAC7B,gBACM,IAAI,IAAI,CAAC,WAAW,EAAE;AAC5B;AACY,oBAAJ,IAAI,CAAC,cAAc;AAC3B,yBAAW,IAAI,CACH,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,OAAO,KAAK,MAAM,CAAC,EACzC,IAAI,CAAC,CAAC,CAAC;AAClB;AACQ,oBAAG,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CACtC;AACX,yBAAW,SAAS,CAAC;AACrB,wBAAY,IAAI,EAAE,MAAM,IAAI,CAAC,WAAY,CAAC,MAAM,EAAE;AAClD;AACY,wBAAA,QAAQ,EAAE,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;AACtD,qBAAW,CAAC,CAAC;AACb,iBAAO;AAAC,qBAAK;AACb,oBAAQ,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACnC,iBAAO;AACP,aAAK;AAAC,iBAAK;AACX,gBAAM,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AACjC,gBACM,IAAI,IAAI,CAAC,WAAW,EAAE;AAC5B,oBAAQ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;AAClC,iBAAO;AACP,aAAK;AACL,SAAG;AACH;AAEK;AACM;AAEA;AAAY,QAAb,SAAS;AAAK,YACpB,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;AACjF,YAAI,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;AACnC,YAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC7B,YAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;AAC9B,YAAI,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,CAAC;AAC1D,SAAG;AACH;AAEK,QAAK,iBAAiB;AAAK,YAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AAChC,gBAAM,IAAI,KAAK,GAAG,CAAC,CAAC;AACpB,gBAAM,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;AAC5C,gBACM,OAAO,UAAU,EAAE;AACzB,oBAAQ,KAAK,EAAE,CAAC;AAChB,oBAAQ,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;AAC3C,iBAAO;AACP,gBACM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AACpC,aAAK;AACL,SAAG;AACH;AAEK,QAAK,aAAa;AACvB;AACQ;AACQ;AACQ,YAApB,IAAI,IAAI,CAAC,YAAY,EAAE;AAC3B,gBAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;AAC3B;AACY;AAEV,oBADM,IAAI,CAAC,KAAK,EAAE,CAAC;AACrB,iBAAO;AAAC,qBAAK,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE;AAC1C,oBAAQ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AACnC,iBAAO;AACP,aAAK;AACL,YACI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC1B,SAAG;AACH;AAEK,QAAK,cAAc,CAAC,MAAe;AAAI,YACxC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;AAC5B,YAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AACrE,YACI,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;AAChC,gBAAM,IAAI,CAAC,iBAAiB,CAAC,YAAY,GAAG,MAAM,CAAC;AACnD,aAAK;AACL,SAAG;AACH;AAEK;AACM;AAEA;AAAY,QAAb,UAAU;AACpB,YAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;AACpB,gBAAM,wBAAwB,EAAE,CAAC;AACjC,aAAK;AACL,SAAG;AACH;AAEK;AACM;AAEA;AAAY,QAAb,cAAc;AAAK,YACzB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AAC3B,gBAAM,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC9C,gBAAM,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,gBAAqD,CAAC,CAAC;AAC/F,gBAAM,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AACtD;AAES;AACU;AACU,gBAAvB,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC,SAAS,EAAE,CAAC;AACnD,aAAK;AACL,YACI,OAAO,IAAI,CAAC,WAAW,CAAC;AAC5B,SAAG;AACH;AAEK;AACM;AAEA;AAAY,QAAb,iBAAiB;AAAK,YAC5B,OAAO,IAAI,aAAa,CAAC;AAC7B,gBAAM,gBAAgB,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;AAChD,qBAAW,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC;AAC7C,qBAAW,kBAAkB,EAAE;AAC/B,qBAAW,qBAAqB,CAAC,sCAAsC,CAAC;AACxE,gBAAM,aAAa,EAAE,IAAI,CAAC,IAAI,CAAC,aAAa,IAAI,kCAAkC;AAClF,gBAAM,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE;AAC5C,gBAAM,SAAS,EAAE,IAAI,CAAC,IAAI;AAC1B,aAAK,CAAC,CAAC;AACP,SAAG;AACH;AAEK;AACM;AACM;AAEA;AAAY,QAAnB,qBAAqB,CAAC,QAA2C;AAAI,YAC3E,IAAI,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE;AACtC,gBAAM,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC,MAAM;AAC/C,oBAAQ,MAAM,IAAI,GAAkB,MAAM,CAAC,cAAc,CAAC,QAAQ,KAAK,OAAO,GAAG,OAAO,GAAG,QAAQ,CAAC;AACpG,oBAAQ,MAAM,IAAI,GAAkB,MAAM,CAAC,cAAc,CAAC,QAAQ,KAAK,KAAK,GAAG,OAAO,GAAG,OAAO,CAAC;AACjG,oBACQ,IAAI,CAAC,IAAI,CAAC,kBAAmB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAClD,iBAAO,CAAC,CAAC;AACT,aAAK;AACL,SAAG;AACH;AAEK;AACM;AACM;AAEA;AAAY,QAAnB,YAAY,CAAC,gBAAmD;AAC1E,YAAI,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,GAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,QAAQ,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;AAC/E,YACI,IAAI,CAAC,QAAQ,EAAE,gBAAgB,CAAC,GAC5B,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,OAAO,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;AAChF,YACI,IAAI,CAAC,OAAO,EAAE,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAC;AAClE,YAAI,IAAI,CAAC,QAAQ,EAAE,gBAAgB,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;AAClE,YAAI,IAAI,OAAO,GAAG,CAAC,CAAC;AACpB,YACI,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;AAChC;AACU;AACU,gBAAd,gBAAgB,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK,QAAQ,GAAG,OAAO,GAAG,KAAK,CAAC;AACtF,gBAAM,eAAe,GAAG,QAAQ,GAAG,OAAO,KAAK,KAAK,GAAG,OAAO,GAAG,KAAK,CAAC;AACvE,gBAAM,OAAO,GAAG,QAAQ,KAAK,QAAQ,GAAG,sBAAsB,GAAG,CAAC,sBAAsB,CAAC;AACzF,aAAK;AAAC,iBAAK,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,EAAE;AAC1C,gBAAM,OAAO,GAAG,QAAQ,KAAK,KAAK,GAAG,QAAQ,GAAG,KAAK,CAAC;AACtD,gBAAM,eAAe,GAAG,gBAAgB,KAAK,KAAK,GAAG,QAAQ,GAAG,KAAK,CAAC;AACtE,aAAK;AACL,YACI,gBAAgB,CAAC,aAAa,CAAC;AACnC,gBAAM,EAAC,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAC;AACrD,gBAAM,EAAC,OAAO,EAAE,eAAe,EAAE,OAAO,EAAE,QAAQ,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAC;AACxF,gBAAM;AACN,oBAAQ,OAAO;AACf,oBAAQ,OAAO,EAAE,eAAe;AAChC,oBAAQ,QAAQ;AAChB,oBAAQ,QAAQ,EAAE,gBAAgB;AAClC,oBAAQ,OAAO,EAAE,CAAC,OAAO;AACzB,iBAAO;AACP,gBAAM;AACN,oBAAQ,OAAO,EAAE,eAAe;AAChC,oBAAQ,OAAO,EAAE,eAAe;AAChC,oBAAQ,QAAQ,EAAE,gBAAgB;AAClC,oBAAQ,QAAQ,EAAE,gBAAgB;AAClC,oBAAQ,OAAO,EAAE,CAAC,OAAO;AACzB,iBAAO;AACP,aAAK,CAAC,CAAC;AACP,SAAG;AACH;AAEK,QAAK,mBAAmB;AAC7B,YAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAY,CAAC,aAAa,EAAE,CAAC;AACvD,YAAI,MAAM,WAAW,GAAG,IAAI,CAAC,WAAY,CAAC,WAAW,EAAE,CAAC;AACxD,YAAI,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,GAAGA,EAAY,EAAE,CAAC;AACpF,YAAI,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAC/D,MAAM,CAAC,MAAM,IAAI,MAAM,KAAK,IAAI,CAAC,iBAAiB,CAAC,EACnD,MAAM,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,CAC7B,GAAGA,EAAY,EAAE,CAAC;AACvB,YACI,OAAO,KAAK,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;AAC5D,SAAG;AACH;AAEK,QAAH,gBAAgB,CAAC,KAAiB;AAAI,YACpC,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC,EAAE;AACjD;AACU;AACU,gBAAd,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC;AAC3D;AAES;AACU;AACU,gBAAvB,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;AAClC,oBAAQ,KAAK,CAAC,cAAc,EAAE,CAAC;AAC/B,iBAAO;AACP,aAAK;AACL,SAAG;AACH;AAEK,QAAH,cAAc,CAAC,KAAoB;AAAI,YACrC,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAClC,YACI,IAAI,IAAI,CAAC,eAAe,EAAE,KAClB,CAAC,OAAO,KAAK,WAAW,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK;AAC1D,iBAAa,OAAO,KAAK,UAAU,IAAI,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,EAAE;AAC7D,gBAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AACtB,aAAK;AACL,SAAG;AACH;AAEK,QAAH,YAAY,CAAC,KAAiB;AAAI,YAChC,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;AAChC;AACU,gBAAJ,KAAK,CAAC,eAAe,EAAE,CAAC;AAC9B,gBAAM,IAAI,CAAC,QAAQ,EAAE,CAAC;AACtB,aAAK;AAAC,iBAAK;AACX,gBAAM,IAAI,CAAC,UAAU,EAAE,CAAC;AACxB,aAAK;AACL,SAAG;AACH;AAEK,QAAK,YAAY;AACtB;AACQ,YAAJ,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,EAAE;AACjC,gBAAM,OAAO;AACb,aAAK;AACL,YACI,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;AACzD;AACU;AACU;AAEH,iBADV,IAAI,CACH,MAAM,CAAC,MAAM,IAAI,MAAM,KAAK,IAAI,CAAC,iBAAiB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EACvE,KAAK,CAAC,CAAC,EAAE,aAAa,CAAC,CACxB;AACP,iBAAO,SAAS,CAAC;AACjB,gBAAQ,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC;AACjC;AAEO;AACQ;AACQ,gBAAf,IAAI,IAAI,CAAC,IAAI,YAAY,OAAO,IAAI,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;AACpE;AACU;AACU,oBAAV,IAAI,CAAC,IAAI,CAAC,cAAc;AAClC,yBAAa,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,aAAa,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC3F,yBAAa,SAAS,CAAC,MAAM,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AAC9C,iBAAS;AAAC,qBAAK;AACf,oBAAU,IAAI,CAAC,QAAQ,EAAE,CAAC;AAC1B,iBAAS;AACT,aAAO,CAAC,CAAC;AACT,SAAG;AACH;AAEK,QAAK,UAAU;AAAK;AACiD;AAE1E;AACQ,YAAJ,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;AAC7E,gBAAM,IAAI,CAAC,OAAO,GAAG,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACvF,aAAK;AACL,YACI,OAAO,IAAI,CAAC,OAAO,CAAC;AACxB,SAAG;AACH;kDArfC,SAAS,SAAC,sBACT,QAAQ,EAAE,6CAA6C,sBACvD,IAAI,EAAE,0BACJ,OAAO,EAAE,kBAAkB,0BAC3B,eAAe,EAAE,MAAM,0BACvB,sBAAsB,EAAE,kBAAkB,0BAC1C,sBAAsB,EAAE,gCAAgC,0BACxD,aAAa;AAAE,0BAA0B,0BACzC,WAAW,EAAE,wBAAwB,0BACrC,SAAS,EAAE,sBAAsB,uBAClC,sBACD,QAAQ,EAAE,gBAAgB,kBAC3B;;;;qZACQ;AAAC;AAA4C,gBApEpD,OAAO;AACP,gBASA,UAAU;AACV,gBAQA,gBAAgB;AAChB,gDAwIa,MAAM,SAAC,wBAAwB;AAAS,gBApI/C,OAAO,uBAqIA,QAAQ;AAAO,gBAnItB,WAAW,uBAoIJ,QAAQ,YAAI,IAAI;AAAO,gBAnKnB,cAAc,uBAoKlB,QAAQ;AAAO,gBArKtB,YAAY;AAAG;AAAO;AAAsC,+CAiGjE,KAAK,SAAC,sBAAsB;AAC1B,uBAMF,KAAK,SAAC,mBAAmB;AACvB,2BAuBF,KAAK,SAAC,oBAAoB;AAAO,+BAOjC,KAAK,SAAC,4BAA4B;AAAO,6BAGzC,MAAM;AAAK,6BAQX,MAAM;AAAK,6BAGX,MAAM;AAAK,8BAQX,MAAM;AAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oBAAM;AAAC,IAsZpB,qBAAC;AACA;AAAM;AC5jBP;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AAC0C,IAD1C,MASa,wBAAwB;AAAG;4DATvC,QAAQ,SAAC;MACR,OAAO,EAAE,CAAC,cAAc,EAAE,cAAc,EAAE,eAAe,CAAC,sBAC1D,YAAY,EAAE,0BACZ,cAAc,0BACd,cAAc,uBACf,sBACD,SAAS,EAAE,CAAC;4BAAyC,CAAC,kBACvD;;;;;;;;;;;0BACQ;AAAC,IAC6B,+BAAC;AAExC,KAFwC;AACxC;AAGiB,IAFjB,MAYa,aAAa;AAAG;iDAZ5B,QAAQ,SAAC;iBACR,OAAO,EAAE,0BACP,YAAY,0BACZ,eAAe,0BACf,eAAe,0BACf,aAAa;aACb;WAAwB;KACzB,sBACD;KAAO,EAAE,CAAC;AAAmB,EAAE,eAAe,EAAE,QAAQ,EAAE;EAAW,EAAE,wBAAwB,CAAC,sBAChG,YAAY,EAAE,CAAC,QAAQ,EAAE;QAAW,CAAC,sBACrC,SAAS,EAAE,CAAC,yCAAyC,CAAC,kBACvD;;;;;;;;;;;;;;;;;;0BACQ;AAAC,IAAkB,oBAAC;AAC5B;AAAM;AC9CP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;ACPA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;ACPA;AACA;AACA,GAAG;AACH;AACA;AAGuW","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport{\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  query,\n  group,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * @docs-private\n */\nexport const matMenuAnimations: {\n  readonly transformMenu: AnimationTriggerMetadata;\n  readonly fadeInItems: AnimationTriggerMetadata;\n} = {\n  /**\n   * This animation controls the menu panel's entry and exit from the page.\n   *\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\n   *\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\n   * delay to display the ripple.\n   */\n  transformMenu: trigger('transformMenu', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(0.8)'\n    })),\n    transition('void => enter', group([\n      query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n        opacity: 1\n      }))),\n      animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({transform: 'scale(1)'})),\n    ])),\n    transition('* => void', animate('100ms 25ms linear', style({opacity: 0})))\n  ]),\n\n\n  /**\n   * This animation fades in the background color and content of the menu panel\n   * after its containing element is scaled in.\n   */\n  fadeInItems: trigger('fadeInItems', [\n    // TODO(crisbeto): this is inside the `transformMenu`\n    // now. Remove next time we do breaking changes.\n    state('showing', style({opacity: 1})),\n    transition('void => *', [\n      style({opacity: 0}),\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n    ])\n  ])\n};\n\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nexport const fadeInItems = matMenuAnimations.fadeInItems;\n\n/**\n * @deprecated\n * @breaking-change 8.0.0\n * @docs-private\n */\nexport const transformMenu = matMenuAnimations.transformMenu;\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DomPortalOutlet, TemplatePortal} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  ApplicationRef,\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  Directive,\n  Inject,\n  Injector,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\n@Directive({\n  selector: 'ng-template[matMenuContent]'\n})\nexport class MatMenuContent implements OnDestroy {\n  private _portal: TemplatePortal<any>;\n  private _outlet: DomPortalOutlet;\n\n  /** Emits when the menu content has been attached. */\n  _attached = new Subject<void>();\n\n  constructor(\n    private _template: TemplateRef<any>,\n    private _componentFactoryResolver: ComponentFactoryResolver,\n    private _appRef: ApplicationRef,\n    private _injector: Injector,\n    private _viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private _document: any,\n    private _changeDetectorRef?: ChangeDetectorRef) {}\n\n  /**\n   * Attaches the content with a particular context.\n   * @docs-private\n   */\n  attach(context: any = {}) {\n    if (!this._portal) {\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n    }\n\n    this.detach();\n\n    if (!this._outlet) {\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'),\n          this._componentFactoryResolver, this._appRef, this._injector);\n    }\n\n    const element: HTMLElement = this._template.elementRef.nativeElement;\n\n    // Because we support opening the same menu from different triggers (which in turn have their\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n    // risk it staying attached to a pane that's no longer in the DOM.\n    element.parentNode!.insertBefore(this._outlet.outletElement, element);\n\n    // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n    // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n    // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n    // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n    // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n    // @breaking-change 9.0.0 Make change detector ref required\n    if (this._changeDetectorRef) {\n      this._changeDetectorRef.markForCheck();\n    }\n\n    this._portal.attach(this._outlet, context);\n    this._attached.next();\n  }\n\n  /**\n   * Detaches the content.\n   * @docs-private\n   */\n  detach() {\n    if (this._portal.isAttached) {\n      this._portal.detach();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._outlet) {\n      this._outlet.dispose();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * @docs-private\n */\nexport function throwMatMenuMissingError() {\n  throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * @docs-private\n */\nexport function throwMatMenuInvalidPositionX() {\n  throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * @docs-private\n */\nexport function throwMatMenuInvalidPositionY() {\n  throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {EventEmitter, TemplateRef, InjectionToken} from '@angular/core';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {Direction} from '@angular/cdk/bidi';\nimport {FocusOrigin} from '@angular/cdk/a11y';\nimport {MatMenuContent} from './menu-content';\n\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * @docs-private\n */\nexport const MAT_MENU_PANEL = new InjectionToken<MatMenuPanel>('MAT_MENU_PANEL');\n\n/**\n * Interface for a custom menu panel that can be used with `matMenuTriggerFor`.\n * @docs-private\n */\nexport interface MatMenuPanel<T = any> {\n  xPosition: MenuPositionX;\n  yPosition: MenuPositionY;\n  overlapTrigger: boolean;\n  templateRef: TemplateRef<any>;\n  close: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\n  parentMenu?: MatMenuPanel | undefined;\n  direction?: Direction;\n  focusFirstItem: (origin?: FocusOrigin) => void;\n  resetActiveItem: () => void;\n  setPositionClasses?: (x: MenuPositionX, y: MenuPositionY) => void;\n  setElevation?(depth: number): void;\n  lazyContent?: MatMenuContent;\n  backdropClass?: string;\n  hasBackdrop?: boolean;\n  readonly panelId?: string;\n\n  /**\n   * @deprecated To be removed.\n   * @breaking-change 8.0.0\n   */\n  addItem?: (item: T) => void;\n\n  /**\n   * @deprecated To be removed.\n   * @breaking-change 8.0.0\n   */\n  removeItem?: (item: T) => void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewEncapsulation,\n  Inject,\n  Optional,\n  Input,\n  HostListener,\n  AfterViewInit,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  mixinDisabled,\n  mixinDisableRipple,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {DOCUMENT} from '@angular/common';\nimport {MAT_MENU_PANEL, MatMenuPanel} from './menu-panel';\n\n// Boilerplate for applying mixins to MatMenuItem.\n/** @docs-private */\nclass MatMenuItemBase {}\nconst _MatMenuItemMixinBase: CanDisableRippleCtor & CanDisableCtor & typeof MatMenuItemBase =\n    mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\n@Component({\n  selector: '[mat-menu-item]',\n  exportAs: 'matMenuItem',\n  inputs: ['disabled', 'disableRipple'],\n  host: {\n    '[attr.role]': 'role',\n    '[class.mat-menu-item]': 'true',\n    '[class.mat-menu-item-highlighted]': '_highlighted',\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n    '[attr.tabindex]': '_getTabIndex()',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.disabled]': 'disabled || null',\n    'class': 'mat-focus-indicator',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  templateUrl: 'menu-item.html',\n})\nexport class MatMenuItem extends _MatMenuItemMixinBase\n    implements FocusableOption, CanDisable, CanDisableRipple, AfterViewInit, OnDestroy {\n\n  /** ARIA role for the menu item. */\n  @Input() role: 'menuitem' | 'menuitemradio' | 'menuitemcheckbox' = 'menuitem';\n\n  private _document: Document;\n\n  /** Stream that emits when the menu item is hovered. */\n  readonly _hovered: Subject<MatMenuItem> = new Subject<MatMenuItem>();\n\n  /** Stream that emits when the menu item is focused. */\n  readonly _focused = new Subject<MatMenuItem>();\n\n  /** Whether the menu item is highlighted. */\n  _highlighted: boolean = false;\n\n  /** Whether the menu item acts as a trigger for a sub-menu. */\n  _triggersSubmenu: boolean = false;\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    @Inject(DOCUMENT) document?: any,\n    private _focusMonitor?: FocusMonitor,\n    @Inject(MAT_MENU_PANEL) @Optional() public _parentMenu?: MatMenuPanel<MatMenuItem>) {\n\n    // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n    super();\n\n    if (_parentMenu && _parentMenu.addItem) {\n      _parentMenu.addItem(this);\n    }\n\n    this._document = document;\n  }\n\n  /** Focuses the menu item. */\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions): void {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n    } else {\n      this._getHostElement().focus(options);\n    }\n\n    this._focused.next(this);\n  }\n\n  ngAfterViewInit() {\n    if (this._focusMonitor) {\n      // Start monitoring the element so it gets the appropriate focused classes. We want\n      // to show the focus style for menu items only when the focus was not caused by a\n      // mouse or touch interaction.\n      this._focusMonitor.monitor(this._elementRef, false);\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._focusMonitor) {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n\n    if (this._parentMenu && this._parentMenu.removeItem) {\n      this._parentMenu.removeItem(this);\n    }\n\n    this._hovered.complete();\n    this._focused.complete();\n  }\n\n  /** Used to set the `tabindex`. */\n  _getTabIndex(): string {\n    return this.disabled ? '-1' : '0';\n  }\n\n  /** Returns the host DOM element. */\n  _getHostElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  /** Prevents the default element actions if it is disabled. */\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click', ['$event'])\n  _checkDisabled(event: Event): void {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /** Emits to the hover stream. */\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('mouseenter')\n  _handleMouseEnter() {\n    this._hovered.next(this);\n  }\n\n  /** Gets the label to be used when determining whether the option should be focused. */\n  getLabel(): string {\n    const element: HTMLElement = this._elementRef.nativeElement;\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n    let output = '';\n\n    if (element.childNodes) {\n      const length = element.childNodes.length;\n\n      // Go through all the top-level text nodes and extract their text.\n      // We skip anything that's not a text node to prevent the text from\n      // being thrown off by something like an icon.\n      for (let i = 0; i < length; i++) {\n        if (element.childNodes[i].nodeType === textNodeType) {\n          output += element.childNodes[i].textContent;\n        }\n      }\n    }\n\n    return output.trim();\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\nimport {Direction} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  ESCAPE,\n  LEFT_ARROW,\n  RIGHT_ARROW,\n  DOWN_ARROW,\n  UP_ARROW,\n  HOME,\n  END,\n  hasModifierKey,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  OnInit,\n} from '@angular/core';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {startWith, switchMap, take} from 'rxjs/operators';\nimport {matMenuAnimations} from './menu-animations';\nimport {MatMenuContent} from './menu-content';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\nimport {throwMatMenuInvalidPositionX, throwMatMenuInvalidPositionY} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MAT_MENU_PANEL, MatMenuPanel} from './menu-panel';\nimport {AnimationEvent} from '@angular/animations';\n\n/** Default `mat-menu` options that can be overridden. */\nexport interface MatMenuDefaultOptions {\n  /** The x-axis position of the menu. */\n  xPosition: MenuPositionX;\n\n  /** The y-axis position of the menu. */\n  yPosition: MenuPositionY;\n\n  /** Whether the menu should overlap the menu trigger. */\n  overlapTrigger: boolean;\n\n  /** Class to be applied to the menu's backdrop. */\n  backdropClass: string;\n\n  /** Whether the menu has a backdrop. */\n  hasBackdrop?: boolean;\n}\n\n/** Injection token to be used to override the default options for `mat-menu`. */\nexport const MAT_MENU_DEFAULT_OPTIONS =\n    new InjectionToken<MatMenuDefaultOptions>('mat-menu-default-options', {\n      providedIn: 'root',\n      factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MAT_MENU_DEFAULT_OPTIONS_FACTORY(): MatMenuDefaultOptions {\n  return {\n    overlapTrigger: false,\n    xPosition: 'after',\n    yPosition: 'below',\n    backdropClass: 'cdk-overlay-transparent-backdrop',\n  };\n}\n/**\n * Start elevation for the menu panel.\n * @docs-private\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n\nlet menuPanelUid = 0;\n\n/** Base class with all of the `MatMenu` functionality. */\n@Directive()\n// tslint:disable-next-line:class-name\nexport class _MatMenuBase implements AfterContentInit, MatMenuPanel<MatMenuItem>, OnInit,\n  OnDestroy {\n  private _keyManager: FocusKeyManager<MatMenuItem>;\n  private _xPosition: MenuPositionX = this._defaultOptions.xPosition;\n  private _yPosition: MenuPositionY = this._defaultOptions.yPosition;\n  private _previousElevation: string;\n\n  /** All items inside the menu. Includes items nested inside another menu. */\n  @ContentChildren(MatMenuItem, {descendants: true}) _allItems: QueryList<MatMenuItem>;\n\n  /** Only the direct descendant menu items. */\n  private _directDescendantItems = new QueryList<MatMenuItem>();\n\n  /** Subscription to tab events on the menu panel */\n  private _tabSubscription = Subscription.EMPTY;\n\n  /** Config object to be passed into the menu's ngClass */\n  _classList: {[key: string]: boolean} = {};\n\n  /** Current state of the panel animation. */\n  _panelAnimationState: 'void' | 'enter' = 'void';\n\n  /** Emits whenever an animation on the menu completes. */\n  _animationDone = new Subject<AnimationEvent>();\n\n  /** Whether the menu is animating. */\n  _isAnimating: boolean;\n\n  /** Parent menu of the current menu panel. */\n  parentMenu: MatMenuPanel | undefined;\n\n  /** Layout direction of the menu. */\n  direction: Direction;\n\n  /** Class to be added to the backdrop element. */\n  @Input() backdropClass: string = this._defaultOptions.backdropClass;\n\n  /** aria-label for the menu panel. */\n  @Input('aria-label') ariaLabel: string;\n\n  /** aria-labelledby for the menu panel. */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** aria-describedby for the menu panel. */\n  @Input('aria-describedby') ariaDescribedby: string;\n\n  /** Position of the menu in the X axis. */\n  @Input()\n  get xPosition(): MenuPositionX { return this._xPosition; }\n  set xPosition(value: MenuPositionX) {\n    if (value !== 'before' && value !== 'after') {\n      throwMatMenuInvalidPositionX();\n    }\n    this._xPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** Position of the menu in the Y axis. */\n  @Input()\n  get yPosition(): MenuPositionY { return this._yPosition; }\n  set yPosition(value: MenuPositionY) {\n    if (value !== 'above' && value !== 'below') {\n      throwMatMenuInvalidPositionY();\n    }\n    this._yPosition = value;\n    this.setPositionClasses();\n  }\n\n  /** @docs-private */\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\n\n  /**\n   * List of the items inside of a menu.\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  @ContentChildren(MatMenuItem, {descendants: false}) items: QueryList<MatMenuItem>;\n\n  /**\n   * Menu content that will be rendered lazily.\n   * @docs-private\n   */\n  @ContentChild(MatMenuContent) lazyContent: MatMenuContent;\n\n  /** Whether the menu should overlap its trigger. */\n  @Input()\n  get overlapTrigger(): boolean { return this._overlapTrigger; }\n  set overlapTrigger(value: boolean) {\n    this._overlapTrigger = coerceBooleanProperty(value);\n  }\n  private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\n\n  /** Whether the menu has a backdrop. */\n  @Input()\n  get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\n  set hasBackdrop(value: boolean | undefined) {\n    this._hasBackdrop = coerceBooleanProperty(value);\n  }\n  private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @param classes list of class names\n   */\n  @Input('class')\n  set panelClass(classes: string) {\n    const previousPanelClass = this._previousPanelClass;\n\n    if (previousPanelClass && previousPanelClass.length) {\n      previousPanelClass.split(' ').forEach((className: string) => {\n        this._classList[className] = false;\n      });\n    }\n\n    this._previousPanelClass = classes;\n\n    if (classes && classes.length) {\n      classes.split(' ').forEach((className: string) => {\n        this._classList[className] = true;\n      });\n\n      this._elementRef.nativeElement.className = '';\n    }\n  }\n  private _previousPanelClass: string;\n\n  /**\n   * This method takes classes set on the host mat-menu element and applies them on the\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\n   * to style the containing menu from outside the component.\n   * @deprecated Use `panelClass` instead.\n   * @breaking-change 8.0.0\n   */\n  @Input()\n  get classList(): string { return this.panelClass; }\n  set classList(classes: string) { this.panelClass = classes; }\n\n  /** Event emitted when the menu is closed. */\n  @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\n      new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\n\n  /**\n   * Event emitted when the menu is closed.\n   * @deprecated Switch to `closed` instead\n   * @breaking-change 8.0.0\n   */\n  @Output() close: EventEmitter<void | 'click' | 'keydown' | 'tab'> = this.closed;\n\n  readonly panelId = `mat-menu-panel-${menuPanelUid++}`;\n\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(MAT_MENU_DEFAULT_OPTIONS) private _defaultOptions: MatMenuDefaultOptions) { }\n\n  ngOnInit() {\n    this.setPositionClasses();\n  }\n\n  ngAfterContentInit() {\n    this._updateDirectDescendants();\n    this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\n\n    // If a user manually (programatically) focuses a menu item, we need to reflect that focus\n    // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n    // is internal and we know that it gets completed on destroy.\n    this._directDescendantItems.changes.pipe(\n      startWith(this._directDescendantItems),\n      switchMap(items => merge<MatMenuItem>(...items.map((item: MatMenuItem) => item._focused)))\n    ).subscribe(focusedItem => this._keyManager.updateActiveItem(focusedItem));\n  }\n\n  ngOnDestroy() {\n    this._directDescendantItems.destroy();\n    this._tabSubscription.unsubscribe();\n    this.closed.complete();\n  }\n\n  /** Stream that emits whenever the hovered menu item changes. */\n  _hovered(): Observable<MatMenuItem> {\n    // Coerce the `changes` property because Angular types it as `Observable<any>`\n    const itemChanges = this._directDescendantItems.changes as Observable<QueryList<MatMenuItem>>;\n    return itemChanges.pipe(\n      startWith(this._directDescendantItems),\n      switchMap(items => merge(...items.map((item: MatMenuItem) => item._hovered)))\n    ) as Observable<MatMenuItem>;\n  }\n\n  /*\n   * Registers a menu item with the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n  addItem(_item: MatMenuItem) {}\n\n  /**\n   * Removes an item from the menu.\n   * @docs-private\n   * @deprecated No longer being used. To be removed.\n   * @breaking-change 9.0.0\n   */\n  removeItem(_item: MatMenuItem) {}\n\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\n  _handleKeydown(event: KeyboardEvent) {\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    switch (keyCode) {\n      case ESCAPE:\n        if (!hasModifierKey(event)) {\n          event.preventDefault();\n          this.closed.emit('keydown');\n        }\n      break;\n      case LEFT_ARROW:\n        if (this.parentMenu && this.direction === 'ltr') {\n          this.closed.emit('keydown');\n        }\n      break;\n      case RIGHT_ARROW:\n        if (this.parentMenu && this.direction === 'rtl') {\n          this.closed.emit('keydown');\n        }\n      break;\n      case HOME:\n      case END:\n        if (!hasModifierKey(event)) {\n          keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n          event.preventDefault();\n        }\n      break;\n      default:\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n          manager.setFocusOrigin('keyboard');\n        }\n\n        manager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Focus the first item in the menu.\n   * @param origin Action from which the focus originated. Used to set the correct styling.\n   */\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n    if (this.lazyContent) {\n      this._ngZone.onStable.asObservable()\n        .pipe(take(1))\n        .subscribe(() => this._focusFirstItem(origin));\n    } else {\n      this._focusFirstItem(origin);\n    }\n  }\n\n  /**\n   * Actual implementation that focuses the first item. Needs to be separated\n   * out so we don't repeat the same logic in the public `focusFirstItem` method.\n   */\n  private _focusFirstItem(origin: FocusOrigin) {\n    const manager = this._keyManager;\n\n    manager.setFocusOrigin(origin).setFirstItemActive();\n\n    // If there's no active item at this point, it means that all the items are disabled.\n    // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n    // give _some_ feedback to screen readers.\n    if (!manager.activeItem && this._directDescendantItems.length) {\n      let element = this._directDescendantItems.first._getHostElement().parentElement;\n\n      // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n      // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n      // because the panel is inside an `ng-template`. We work around it by starting from one of\n      // the items and walking up the DOM.\n      while (element) {\n        if (element.getAttribute('role') === 'menu') {\n          element.focus();\n          break;\n        } else {\n          element = element.parentElement;\n        }\n      }\n    }\n  }\n\n  /**\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\n   * the user to start from the first option when pressing the down arrow.\n   */\n  resetActiveItem() {\n    this._keyManager.setActiveItem(-1);\n  }\n\n  /**\n   * Sets the menu panel elevation.\n   * @param depth Number of parent menus that come before the menu.\n   */\n  setElevation(depth: number): void {\n    // The elevation starts at the base and increases by one for each level.\n    // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n    const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n    const newElevation = `mat-elevation-z${elevation}`;\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\n\n    if (!customElevation || customElevation === this._previousElevation) {\n      if (this._previousElevation) {\n        this._classList[this._previousElevation] = false;\n      }\n\n      this._classList[newElevation] = true;\n      this._previousElevation = newElevation;\n    }\n  }\n\n  /**\n   * Adds classes to the menu panel based on its position. Can be used by\n   * consumers to add specific styling based on the position.\n   * @param posX Position of the menu along the x axis.\n   * @param posY Position of the menu along the y axis.\n   * @docs-private\n   */\n  setPositionClasses(posX: MenuPositionX = this.xPosition, posY: MenuPositionY = this.yPosition) {\n    const classes = this._classList;\n    classes['mat-menu-before'] = posX === 'before';\n    classes['mat-menu-after'] = posX === 'after';\n    classes['mat-menu-above'] = posY === 'above';\n    classes['mat-menu-below'] = posY === 'below';\n  }\n\n  /** Starts the enter animation. */\n  _startAnimation() {\n    // @breaking-change 8.0.0 Combine with _resetAnimation.\n    this._panelAnimationState = 'enter';\n  }\n\n  /** Resets the panel animation to its initial state. */\n  _resetAnimation() {\n    // @breaking-change 8.0.0 Combine with _startAnimation.\n    this._panelAnimationState = 'void';\n  }\n\n  /** Callback that is invoked when the panel animation completes. */\n  _onAnimationDone(event: AnimationEvent) {\n    this._animationDone.next(event);\n    this._isAnimating = false;\n  }\n\n  _onAnimationStart(event: AnimationEvent) {\n    this._isAnimating = true;\n\n    // Scroll the content element to the top as soon as the animation starts. This is necessary,\n    // because we move focus to the first item while it's still being animated, which can throw\n    // the browser off when it determines the scroll position. Alternatively we can move focus\n    // when the animation is done, however moving focus asynchronously will interrupt screen\n    // readers which are in the process of reading out the menu already. We take the `element`\n    // from the `event` since we can't use a `ViewChild` to access the pane.\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n      event.element.scrollTop = 0;\n    }\n  }\n\n  /**\n   * Sets up a stream that will keep track of any newly-added menu items and will update the list\n   * of direct descendants. We collect the descendants this way, because `_allItems` can include\n   * items that are part of child menus, and using a custom way of registering items is unreliable\n   * when it comes to maintaining the item order.\n   */\n  private _updateDirectDescendants() {\n    this._allItems.changes\n      .pipe(startWith(this._allItems))\n      .subscribe((items: QueryList<MatMenuItem>) => {\n        this._directDescendantItems.reset(items.filter(item => item._parentMenu === this));\n        this._directDescendantItems.notifyOnChanges();\n      });\n  }\n\n  static ngAcceptInputType_overlapTrigger: BooleanInput;\n  static ngAcceptInputType_hasBackdrop: BooleanInput;\n}\n\n/** @docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs. */\n@Directive()\nexport class MatMenu extends _MatMenuBase {}\n\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n\n/** @docs-public MatMenu */\n@Component({\n  selector: 'mat-menu',\n  templateUrl: 'menu.html',\n  styleUrls: ['menu.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matMenu',\n  animations: [\n    matMenuAnimations.transformMenu,\n    matMenuAnimations.fadeInItems\n  ],\n  providers: [\n    {provide: MAT_MENU_PANEL, useExisting: MatMenu},\n    {provide: MatMenu, useExisting: _MatMenu}\n  ]\n})\n// tslint:disable-next-line:class-name\nexport class _MatMenu extends MatMenu {\n\n  constructor(elementRef: ElementRef<HTMLElement>, ngZone: NgZone,\n      @Inject(MAT_MENU_DEFAULT_OPTIONS) defaultOptions: MatMenuDefaultOptions) {\n    super(elementRef, ngZone, defaultOptions);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusMonitor, FocusOrigin, isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\nimport {\n  FlexibleConnectedPositionStrategy,\n  HorizontalConnectionPos,\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  VerticalConnectionPos,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport {normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {asapScheduler, merge, of as observableOf, Subscription} from 'rxjs';\nimport {delay, filter, take, takeUntil} from 'rxjs/operators';\nimport {MatMenu} from './menu';\nimport {throwMatMenuMissingError} from './menu-errors';\nimport {MatMenuItem} from './menu-item';\nimport {MatMenuPanel} from './menu-panel';\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\n\n/** Injection token that determines the scroll handling while the menu is open. */\nexport const MAT_MENU_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-menu-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** @docs-private */\nexport const MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_MENU_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n\n/** Default top padding of the menu panel. */\nexport const MENU_PANEL_TOP_PADDING = 8;\n\n/** Options for binding a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({passive: true});\n\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n\n/** Directive applied to an element that should trigger a `mat-menu`. */\n@Directive({\n  selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n  host: {\n    'class': 'mat-menu-trigger',\n    'aria-haspopup': 'true',\n    '[attr.aria-expanded]': 'menuOpen || null',\n    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n    '(mousedown)': '_handleMousedown($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(click)': '_handleClick($event)',\n  },\n  exportAs: 'matMenuTrigger'\n})\nexport class MatMenuTrigger implements AfterContentInit, OnDestroy {\n  private _portal: TemplatePortal;\n  private _overlayRef: OverlayRef | null = null;\n  private _menuOpen: boolean = false;\n  private _closingActionsSubscription = Subscription.EMPTY;\n  private _hoverSubscription = Subscription.EMPTY;\n  private _menuCloseSubscription = Subscription.EMPTY;\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /**\n   * Handles touch start events on the trigger.\n   * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n   */\n  private _handleTouchStart = () => this._openedBy = 'touch';\n\n  // Tracking input type is necessary so it's possible to only auto-focus\n  // the first item of the list when the menu is opened via the keyboard\n  _openedBy: 'mouse' | 'touch' | null = null;\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0\n   */\n  @Input('mat-menu-trigger-for')\n  get _deprecatedMatMenuTriggerFor(): MatMenuPanel { return this.menu; }\n  set _deprecatedMatMenuTriggerFor(v: MatMenuPanel) {\n    this.menu = v;\n  }\n\n  /** References the menu instance that the trigger is associated with. */\n  @Input('matMenuTriggerFor')\n  get menu() { return this._menu; }\n  set menu(menu: MatMenuPanel) {\n    if (menu === this._menu) {\n      return;\n    }\n\n    this._menu = menu;\n    this._menuCloseSubscription.unsubscribe();\n\n    if (menu) {\n      this._menuCloseSubscription = menu.close.asObservable().subscribe(reason => {\n        this._destroyMenu();\n\n        // If a click closed the menu, we should close the entire chain of nested menus.\n        if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n          this._parentMenu.closed.emit(reason);\n        }\n      });\n    }\n  }\n  private _menu: MatMenuPanel;\n\n  /** Data to be passed along to any lazily-rendered content. */\n  @Input('matMenuTriggerData') menuData: any;\n\n  /**\n   * Whether focus should be restored when the menu is closed.\n   * Note that disabling this option can have accessibility implications\n   * and it's up to you to manage focus, if you decide to turn it off.\n   */\n  @Input('matMenuTriggerRestoreFocus') restoreFocus: boolean = true;\n\n  /** Event emitted when the associated menu is opened. */\n  @Output() readonly menuOpened: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Event emitted when the associated menu is opened.\n   * @deprecated Switch to `menuOpened` instead\n   * @breaking-change 8.0.0\n   */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onMenuOpen: EventEmitter<void> = this.menuOpened;\n\n  /** Event emitted when the associated menu is closed. */\n  @Output() readonly menuClosed: EventEmitter<void> = new EventEmitter<void>();\n\n  /**\n   * Event emitted when the associated menu is closed.\n   * @deprecated Switch to `menuClosed` instead\n   * @breaking-change 8.0.0\n   */\n  // tslint:disable-next-line:no-output-on-prefix\n  @Output() readonly onMenuClose: EventEmitter<void> = this.menuClosed;\n\n  constructor(private _overlay: Overlay,\n              private _element: ElementRef<HTMLElement>,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_MENU_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _parentMenu: MatMenu,\n              @Optional() @Self() private _menuItemInstance: MatMenuItem,\n              @Optional() private _dir: Directionality,\n              // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\n              // @breaking-change 8.0.0\n              private _focusMonitor?: FocusMonitor) {\n\n    _element.nativeElement.addEventListener('touchstart', this._handleTouchStart,\n        passiveEventListenerOptions);\n\n    if (_menuItemInstance) {\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngAfterContentInit() {\n    this._checkMenu();\n    this._handleHover();\n  }\n\n  ngOnDestroy() {\n    if (this._overlayRef) {\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n\n    this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart,\n        passiveEventListenerOptions);\n\n    this._menuCloseSubscription.unsubscribe();\n    this._closingActionsSubscription.unsubscribe();\n    this._hoverSubscription.unsubscribe();\n  }\n\n  /** Whether the menu is open. */\n  get menuOpen(): boolean {\n    return this._menuOpen;\n  }\n\n  /** The text direction of the containing app. */\n  get dir(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the menu triggers a sub-menu or a top-level one. */\n  triggersSubmenu(): boolean {\n    return !!(this._menuItemInstance && this._parentMenu);\n  }\n\n  /** Toggles the menu between the open and closed states. */\n  toggleMenu(): void {\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\n  }\n\n  /** Opens the menu. */\n  openMenu(): void {\n    if (this._menuOpen) {\n      return;\n    }\n\n    this._checkMenu();\n\n    const overlayRef = this._createOverlay();\n    const overlayConfig = overlayRef.getConfig();\n\n    this._setPosition(overlayConfig.positionStrategy as FlexibleConnectedPositionStrategy);\n    overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n        this.menu.hasBackdrop;\n    overlayRef.attach(this._getPortal());\n\n    if (this.menu.lazyContent) {\n      this.menu.lazyContent.attach(this.menuData);\n    }\n\n    this._closingActionsSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\n    this._initMenu();\n\n    if (this.menu instanceof MatMenu) {\n      this.menu._startAnimation();\n    }\n  }\n\n  /** Closes the menu. */\n  closeMenu(): void {\n    this.menu.close.emit();\n  }\n\n  /**\n   * Focuses the menu trigger.\n   * @param origin Source of the menu trigger's focus.\n   */\n  focus(origin: FocusOrigin = 'program', options?: FocusOptions) {\n    if (this._focusMonitor) {\n      this._focusMonitor.focusVia(this._element, origin, options);\n    } else {\n      this._element.nativeElement.focus(options);\n    }\n  }\n\n  /** Closes the menu and does the necessary cleanup. */\n  private _destroyMenu() {\n    if (!this._overlayRef || !this.menuOpen) {\n      return;\n    }\n\n    const menu = this.menu;\n    this._closingActionsSubscription.unsubscribe();\n    this._overlayRef.detach();\n    this._restoreFocus();\n\n    if (menu instanceof MatMenu) {\n      menu._resetAnimation();\n\n      if (menu.lazyContent) {\n        // Wait for the exit animation to finish before detaching the content.\n        menu._animationDone\n          .pipe(\n            filter(event => event.toState === 'void'),\n            take(1),\n            // Interrupt if the content got re-attached.\n            takeUntil(menu.lazyContent._attached)\n          )\n          .subscribe({\n            next: () => menu.lazyContent!.detach(),\n            // No matter whether the content got re-attached, reset the menu.\n            complete: () => this._setIsMenuOpen(false)\n          });\n      } else {\n        this._setIsMenuOpen(false);\n      }\n    } else {\n      this._setIsMenuOpen(false);\n\n      if (menu.lazyContent) {\n        menu.lazyContent.detach();\n      }\n    }\n  }\n\n  /**\n   * This method sets the menu state to open and focuses the first item if\n   * the menu was opened via the keyboard.\n   */\n  private _initMenu(): void {\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n    this.menu.direction = this.dir;\n    this._setMenuElevation();\n    this._setIsMenuOpen(true);\n    this.menu.focusFirstItem(this._openedBy || 'program');\n  }\n\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\n  private _setMenuElevation(): void {\n    if (this.menu.setElevation) {\n      let depth = 0;\n      let parentMenu = this.menu.parentMenu;\n\n      while (parentMenu) {\n        depth++;\n        parentMenu = parentMenu.parentMenu;\n      }\n\n      this.menu.setElevation(depth);\n    }\n  }\n\n  /** Restores focus to the element that was focused before the menu was open. */\n  private _restoreFocus() {\n    // We should reset focus if the user is navigating using a keyboard or\n    // if we have a top-level trigger which might cause focus to be lost\n    // when clicking on the backdrop.\n    if (this.restoreFocus) {\n      if (!this._openedBy) {\n        // Note that the focus style will show up both for `program` and\n        // `keyboard` so we don't have to specify which one it is.\n        this.focus();\n      } else if (!this.triggersSubmenu()) {\n        this.focus(this._openedBy);\n      }\n    }\n\n    this._openedBy = null;\n  }\n\n  // set state rather than toggle to support triggers sharing a menu\n  private _setIsMenuOpen(isOpen: boolean): void {\n    this._menuOpen = isOpen;\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n\n    if (this.triggersSubmenu()) {\n      this._menuItemInstance._highlighted = isOpen;\n    }\n  }\n\n  /**\n   * This method checks that a valid instance of MatMenu has been passed into\n   * matMenuTriggerFor. If not, an exception is thrown.\n   */\n  private _checkMenu() {\n    if (!this.menu) {\n      throwMatMenuMissingError();\n    }\n  }\n\n  /**\n   * This method creates the overlay from the provided menu's template and saves its\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\n   */\n  private _createOverlay(): OverlayRef {\n    if (!this._overlayRef) {\n      const config = this._getOverlayConfig();\n      this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\n      this._overlayRef = this._overlay.create(config);\n\n      // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n      // Ideally we'd also have our keyboard event logic in here, however doing so will\n      // break anybody that may have implemented the `MatMenuPanel` themselves.\n      this._overlayRef.keydownEvents().subscribe();\n    }\n\n    return this._overlayRef;\n  }\n\n  /**\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\n   * @returns OverlayConfig\n   */\n  private _getOverlayConfig(): OverlayConfig {\n    return new OverlayConfig({\n      positionStrategy: this._overlay.position()\n          .flexibleConnectedTo(this._element)\n          .withLockedPosition()\n          .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this._scrollStrategy(),\n      direction: this._dir\n    });\n  }\n\n  /**\n   * Listens to changes in the position of the overlay and sets the correct classes\n   * on the menu based on the new position. This ensures the animation origin is always\n   * correct, even if a fallback position is used for the overlay.\n   */\n  private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\n    if (this.menu.setPositionClasses) {\n      position.positionChanges.subscribe(change => {\n        const posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n        const posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n\n        this.menu.setPositionClasses!(posX, posY);\n      });\n    }\n  }\n\n  /**\n   * Sets the appropriate positions on a position strategy\n   * so the overlay connects with the trigger correctly.\n   * @param positionStrategy Strategy whose position to update.\n   */\n  private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n    let offsetY = 0;\n\n    if (this.triggersSubmenu()) {\n      // When the menu is a sub-menu, it should always align itself\n      // to the edges of the trigger, instead of overlapping it.\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n    } else if (!this.menu.overlapTrigger) {\n      originY = overlayY === 'top' ? 'bottom' : 'top';\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n    }\n\n    positionStrategy.withPositions([\n      {originX, originY, overlayX, overlayY, offsetY},\n      {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\n      {\n        originX,\n        originY: originFallbackY,\n        overlayX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      },\n      {\n        originX: originFallbackX,\n        originY: originFallbackY,\n        overlayX: overlayFallbackX,\n        overlayY: overlayFallbackY,\n        offsetY: -offsetY\n      }\n    ]);\n  }\n\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\n  private _menuClosingActions() {\n    const backdrop = this._overlayRef!.backdropClick();\n    const detachments = this._overlayRef!.detachments();\n    const parentClose = this._parentMenu ? this._parentMenu.closed : observableOf();\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(\n      filter(active => active !== this._menuItemInstance),\n      filter(() => this._menuOpen)\n    ) : observableOf();\n\n    return merge(backdrop, parentClose, hover, detachments);\n  }\n\n  /** Handles mouse presses on the trigger. */\n  _handleMousedown(event: MouseEvent): void {\n    if (!isFakeMousedownFromScreenReader(event)) {\n      // Since right or middle button clicks won't trigger the `click` event,\n      // we shouldn't consider the menu as opened by mouse in those cases.\n      this._openedBy = event.button === 0 ? 'mouse' : null;\n\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n      // we should prevent focus from moving onto it via click to avoid the\n      // highlight from lingering on the menu item.\n      if (this.triggersSubmenu()) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  /** Handles key presses on the trigger. */\n  _handleKeydown(event: KeyboardEvent): void {\n    const keyCode = event.keyCode;\n\n    if (this.triggersSubmenu() && (\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n      this.openMenu();\n    }\n  }\n\n  /** Handles click events on the trigger. */\n  _handleClick(event: MouseEvent): void {\n    if (this.triggersSubmenu()) {\n      // Stop event propagation to avoid closing the parent menu.\n      event.stopPropagation();\n      this.openMenu();\n    } else {\n      this.toggleMenu();\n    }\n  }\n\n  /** Handles the cases where the user hovers over the trigger. */\n  private _handleHover() {\n    // Subscribe to changes in the hovered item in order to toggle the panel.\n    if (!this.triggersSubmenu()) {\n      return;\n    }\n\n    this._hoverSubscription = this._parentMenu._hovered()\n      // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n      // with different data and triggers), we have to delay it by a tick to ensure that\n      // it won't be closed immediately after it is opened.\n      .pipe(\n        filter(active => active === this._menuItemInstance && !active.disabled),\n        delay(0, asapScheduler)\n      )\n      .subscribe(() => {\n        this._openedBy = 'mouse';\n\n        // If the same menu is used between multiple triggers, it might still be animating\n        // while the new trigger tries to re-open it. Wait for the animation to finish\n        // before doing so. Also interrupt if the user moves to another item.\n        if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n          // We need the `delay(0)` here in order to avoid\n          // 'changed after checked' errors in some cases. See #12194.\n          this.menu._animationDone\n            .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n            .subscribe(() => this.openMenu());\n        } else {\n          this.openMenu();\n        }\n      });\n  }\n\n  /** Gets the portal that should be attached to the overlay. */\n  private _getPortal(): TemplatePortal {\n    // Note that we can avoid this check by keeping the portal on the menu panel.\n    // While it would be cleaner, we'd have to introduce another required method on\n    // `MatMenuPanel`, making it harder to consume.\n    if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n    }\n\n    return this._portal;\n  }\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {_MatMenu} from './menu';\nimport {MatMenuContent} from './menu-content';\nimport {MatMenuItem} from './menu-item';\nimport {MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER, MatMenuTrigger} from './menu-trigger';\n\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n@NgModule({\n  exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n  declarations: [\n    MatMenuTrigger,\n    MatMenuContent,\n  ],\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\n// tslint:disable-next-line:class-name\nexport class _MatMenuDirectivesModule {}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    MatRippleModule,\n    OverlayModule,\n    _MatMenuDirectivesModule,\n  ],\n  exports: [CdkScrollableModule, MatCommonModule, _MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n  declarations: [_MatMenu, MatMenuItem],\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n})\nexport class MatMenuModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type MenuPositionX = 'before' | 'after';\n\nexport type MenuPositionY = 'above' | 'below';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {\n  MatMenu,\n  MatMenuDefaultOptions,\n  MAT_MENU_DEFAULT_OPTIONS,\n  _MatMenu,\n  _MatMenuBase,\n} from './menu';\nexport {MatMenuItem} from './menu-item';\nexport {MatMenuTrigger, MAT_MENU_SCROLL_STRATEGY} from './menu-trigger';\nexport {MatMenuPanel, MAT_MENU_PANEL} from './menu-panel';\nexport * from './menu-module';\nexport * from './menu-animations';\nexport * from './menu-content';\nexport * from './menu-positions';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MAT_MENU_DEFAULT_OPTIONS_FACTORY as Éµangular_material_src_material_menu_menu_a} from './menu';\nexport {MAT_MENU_SCROLL_STRATEGY_FACTORY as Éµangular_material_src_material_menu_menu_b,MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as Éµangular_material_src_material_menu_menu_c} from './menu-trigger';"]}