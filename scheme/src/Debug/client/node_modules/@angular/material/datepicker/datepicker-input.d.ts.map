{"version":3,"file":"datepicker-input.d.ts","sources":["datepicker-input.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ElementRef } from '@angular/core';\nimport { ValidatorFn } from '@angular/forms';\nimport { DateAdapter, MatDateFormats, ThemePalette } from '@angular/material/core';\nimport { MatFormField } from '@angular/material/form-field';\nimport { MatDatepicker } from './datepicker';\nimport { MatDatepickerInputBase, DateFilterFn } from './datepicker-input-base';\nimport { MatDatepickerControl } from './datepicker-base';\n/** @docs-private */\nexport declare const MAT_DATEPICKER_VALUE_ACCESSOR: any;\n/** @docs-private */\nexport declare const MAT_DATEPICKER_VALIDATORS: any;\n/** Directive used to connect an input to a MatDatepicker. */\nexport declare class MatDatepickerInput<D> extends MatDatepickerInputBase<D | null, D> implements MatDatepickerControl<D | null> {\n    private _formField;\n    /** The datepicker that this input is associated with. */\n    set matDatepicker(datepicker: MatDatepicker<D>);\n    _datepicker: MatDatepicker<D>;\n    /** The minimum valid date. */\n    get min(): D | null;\n    set min(value: D | null);\n    private _min;\n    /** The maximum valid date. */\n    get max(): D | null;\n    set max(value: D | null);\n    private _max;\n    /** Function that can be used to filter out dates within the datepicker. */\n    get dateFilter(): DateFilterFn<D | null>;\n    set dateFilter(value: DateFilterFn<D | null>);\n    private _dateFilter;\n    /** The combined form control validator for this input. */\n    protected _validator: ValidatorFn | null;\n    constructor(elementRef: ElementRef<HTMLInputElement>, dateAdapter: DateAdapter<D>, dateFormats: MatDateFormats, _formField: MatFormField);\n    /**\n     * Gets the element that the datepicker popup should be connected to.\n     * @return The element to connect the popup to.\n     */\n    getConnectedOverlayOrigin(): ElementRef;\n    /** Returns the palette used by the input's form field, if any. */\n    getThemePalette(): ThemePalette;\n    /** Gets the value at which the calendar should start. */\n    getStartValue(): D | null;\n    /**\n     * @deprecated\n     * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n     */\n    getPopupConnectionElementRef(): ElementRef;\n    /** Opens the associated datepicker. */\n    protected _openPopup(): void;\n    protected _getValueFromModel(modelValue: D | null): D | null;\n    protected _assignValueToModel(value: D | null): void;\n    /** Gets the input's minimum date. */\n    _getMinDate(): D | null;\n    /** Gets the input's maximum date. */\n    _getMaxDate(): D | null;\n    /** Gets the input's date filtering function. */\n    protected _getDateFilter(): DateFilterFn<D | null>;\n    protected _outsideValueChanged: undefined;\n    static ngAcceptInputType_value: any;\n}\n"]}