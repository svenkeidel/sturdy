{"version":3,"file":"datepicker-toggle.d.ts","sources":["datepicker-toggle.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { BooleanInput } from '@angular/cdk/coercion';\nimport { AfterContentInit, ChangeDetectorRef, OnChanges, OnDestroy, SimpleChanges } from '@angular/core';\nimport { MatButton } from '@angular/material/button';\nimport { MatDatepickerIntl } from './datepicker-intl';\nimport { MatDatepickerBase, MatDatepickerControl } from './datepicker-base';\n/** Can be used to override the icon of a `matDatepickerToggle`. */\nexport declare class MatDatepickerToggleIcon {\n}\nexport declare class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n    _intl: MatDatepickerIntl;\n    private _changeDetectorRef;\n    private _stateChanges;\n    /** Datepicker instance that the button will toggle. */\n    datepicker: MatDatepickerBase<MatDatepickerControl<any>, D>;\n    /** Tabindex for the toggle. */\n    tabIndex: number | null;\n    /** Whether the toggle button is disabled. */\n    get disabled(): boolean;\n    set disabled(value: boolean);\n    private _disabled;\n    /** Whether ripples on the toggle should be disabled. */\n    disableRipple: boolean;\n    /** Custom icon set by the consumer. */\n    _customIcon: MatDatepickerToggleIcon;\n    /** Underlying button element. */\n    _button: MatButton;\n    constructor(_intl: MatDatepickerIntl, _changeDetectorRef: ChangeDetectorRef, defaultTabIndex: string);\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    ngAfterContentInit(): void;\n    _open(event: Event): void;\n    private _watchStateChanges;\n    static ngAcceptInputType_disabled: BooleanInput;\n}\n"]}