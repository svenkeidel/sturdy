{"version":3,"sources":["src/material/material-card.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","card","core","platformBrowser","animations","this","core$1","MatCardContent","decorators","type","Directive","args","selector","host","class","MatCardTitle","MatCardSubtitle","MatCardActions","align","exportAs","[class.mat-card-actions-align-end]","propDecorators","Input","MatCardFooter","MatCardImage","MatCardSmImage","MatCardMdImage","MatCardLgImage","MatCardXlImage","MatCardAvatar","MatCard","_animationMode","Component","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","[class._mat-animation-noopable]","styles","ctorParameters","String","Optional","Inject","ANIMATION_MODULE_TYPE","MatCardHeader","MatCardTitleGroup","MatCardModule","NgModule","imports","MatCommonModule","declarations","Object","defineProperty","value"],"mappings":"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","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-browser/animations'), require('@angular/material/core')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/card', ['exports', '@angular/core', '@angular/platform-browser/animations', '@angular/material/core'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.card = {}), global.ng.core, global.ng.platformBrowser.animations, global.ng.material.core));\n}(this, (function (exports, core, animations, core$1) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Content of a card, needed as it's used as a selector in the API.\n     * @docs-private\n     */\n    var MatCardContent = /** @class */ (function () {\n        function MatCardContent() {\n        }\n        MatCardContent.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n                        host: { 'class': 'mat-card-content' }\n                    },] }\n        ];\n        return MatCardContent;\n    }());\n    /**\n     * Title of a card, needed as it's used as a selector in the API.\n     * @docs-private\n     */\n    var MatCardTitle = /** @class */ (function () {\n        function MatCardTitle() {\n        }\n        MatCardTitle.decorators = [\n            { type: core.Directive, args: [{\n                        selector: \"mat-card-title, [mat-card-title], [matCardTitle]\",\n                        host: {\n                            'class': 'mat-card-title'\n                        }\n                    },] }\n        ];\n        return MatCardTitle;\n    }());\n    /**\n     * Sub-title of a card, needed as it's used as a selector in the API.\n     * @docs-private\n     */\n    var MatCardSubtitle = /** @class */ (function () {\n        function MatCardSubtitle() {\n        }\n        MatCardSubtitle.decorators = [\n            { type: core.Directive, args: [{\n                        selector: \"mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]\",\n                        host: {\n                            'class': 'mat-card-subtitle'\n                        }\n                    },] }\n        ];\n        return MatCardSubtitle;\n    }());\n    /**\n     * Action section of a card, needed as it's used as a selector in the API.\n     * @docs-private\n     */\n    var MatCardActions = /** @class */ (function () {\n        function MatCardActions() {\n            /** Position of the actions inside the card. */\n            this.align = 'start';\n        }\n        MatCardActions.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'mat-card-actions',\n                        exportAs: 'matCardActions',\n                        host: {\n                            'class': 'mat-card-actions',\n                            '[class.mat-card-actions-align-end]': 'align === \"end\"',\n                        }\n                    },] }\n        ];\n        MatCardActions.propDecorators = {\n            align: [{ type: core.Input }]\n        };\n        return MatCardActions;\n    }());\n    /**\n     * Footer of a card, needed as it's used as a selector in the API.\n     * @docs-private\n     */\n    var MatCardFooter = /** @class */ (function () {\n        function MatCardFooter() {\n        }\n        MatCardFooter.decorators = [\n            { type: core.Directive, args: [{\n                        selector: 'mat-card-footer',\n                        host: { 'class': 'mat-card-footer' }\n                    },] }\n        ];\n        return MatCardFooter;\n    }());\n    /**\n     * Image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardImage = /** @class */ (function () {\n        function MatCardImage() {\n        }\n        MatCardImage.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-image], [matCardImage]',\n                        host: { 'class': 'mat-card-image' }\n                    },] }\n        ];\n        return MatCardImage;\n    }());\n    /**\n     * Image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardSmImage = /** @class */ (function () {\n        function MatCardSmImage() {\n        }\n        MatCardSmImage.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-sm-image], [matCardImageSmall]',\n                        host: { 'class': 'mat-card-sm-image' }\n                    },] }\n        ];\n        return MatCardSmImage;\n    }());\n    /**\n     * Image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardMdImage = /** @class */ (function () {\n        function MatCardMdImage() {\n        }\n        MatCardMdImage.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-md-image], [matCardImageMedium]',\n                        host: { 'class': 'mat-card-md-image' }\n                    },] }\n        ];\n        return MatCardMdImage;\n    }());\n    /**\n     * Image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardLgImage = /** @class */ (function () {\n        function MatCardLgImage() {\n        }\n        MatCardLgImage.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-lg-image], [matCardImageLarge]',\n                        host: { 'class': 'mat-card-lg-image' }\n                    },] }\n        ];\n        return MatCardLgImage;\n    }());\n    /**\n     * Large image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardXlImage = /** @class */ (function () {\n        function MatCardXlImage() {\n        }\n        MatCardXlImage.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-xl-image], [matCardImageXLarge]',\n                        host: { 'class': 'mat-card-xl-image' }\n                    },] }\n        ];\n        return MatCardXlImage;\n    }());\n    /**\n     * Avatar image used in a card, needed to add the mat- CSS styling.\n     * @docs-private\n     */\n    var MatCardAvatar = /** @class */ (function () {\n        function MatCardAvatar() {\n        }\n        MatCardAvatar.decorators = [\n            { type: core.Directive, args: [{\n                        selector: '[mat-card-avatar], [matCardAvatar]',\n                        host: { 'class': 'mat-card-avatar' }\n                    },] }\n        ];\n        return MatCardAvatar;\n    }());\n    /**\n     * A basic content container component that adds the styles of a Material design card.\n     *\n     * While this component can be used alone, it also provides a number\n     * of preset styles for common card sections, including:\n     * - mat-card-title\n     * - mat-card-subtitle\n     * - mat-card-content\n     * - mat-card-actions\n     * - mat-card-footer\n     */\n    var MatCard = /** @class */ (function () {\n        // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n        function MatCard(_animationMode) {\n            this._animationMode = _animationMode;\n        }\n        MatCard.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-card',\n                        exportAs: 'matCard',\n                        template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-card-footer\\\"></ng-content>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        host: {\n                            'class': 'mat-card mat-focus-indicator',\n                            '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        },\n                        styles: [\".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\\n\"]\n                    },] }\n        ];\n        MatCard.ctorParameters = function () { return [\n            { type: String, decorators: [{ type: core.Optional }, { type: core.Inject, args: [animations.ANIMATION_MODULE_TYPE,] }] }\n        ]; };\n        return MatCard;\n    }());\n    /**\n     * Component intended to be used within the `<mat-card>` component. It adds styles for a\n     * preset header section (i.e. a title, subtitle, and avatar layout).\n     * @docs-private\n     */\n    var MatCardHeader = /** @class */ (function () {\n        function MatCardHeader() {\n        }\n        MatCardHeader.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-card-header',\n                        template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        host: { 'class': 'mat-card-header' }\n                    },] }\n        ];\n        return MatCardHeader;\n    }());\n    /**\n     * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n     * layout that groups an image with a title section.\n     * @docs-private\n     */\n    var MatCardTitleGroup = /** @class */ (function () {\n        function MatCardTitleGroup() {\n        }\n        MatCardTitleGroup.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-card-title-group',\n                        template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"img\\\"></ng-content>\\n<ng-content></ng-content>\\n\",\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        host: { 'class': 'mat-card-title-group' }\n                    },] }\n        ];\n        return MatCardTitleGroup;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatCardModule = /** @class */ (function () {\n        function MatCardModule() {\n        }\n        MatCardModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [core$1.MatCommonModule],\n                        exports: [\n                            MatCard,\n                            MatCardHeader,\n                            MatCardTitleGroup,\n                            MatCardContent,\n                            MatCardTitle,\n                            MatCardSubtitle,\n                            MatCardActions,\n                            MatCardFooter,\n                            MatCardSmImage,\n                            MatCardMdImage,\n                            MatCardLgImage,\n                            MatCardImage,\n                            MatCardXlImage,\n                            MatCardAvatar,\n                            core$1.MatCommonModule,\n                        ],\n                        declarations: [\n                            MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n                            MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n                            MatCardXlImage, MatCardAvatar,\n                        ],\n                    },] }\n        ];\n        return MatCardModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MatCard = MatCard;\n    exports.MatCardActions = MatCardActions;\n    exports.MatCardAvatar = MatCardAvatar;\n    exports.MatCardContent = MatCardContent;\n    exports.MatCardFooter = MatCardFooter;\n    exports.MatCardHeader = MatCardHeader;\n    exports.MatCardImage = MatCardImage;\n    exports.MatCardLgImage = MatCardLgImage;\n    exports.MatCardMdImage = MatCardMdImage;\n    exports.MatCardModule = MatCardModule;\n    exports.MatCardSmImage = MatCardSmImage;\n    exports.MatCardSubtitle = MatCardSubtitle;\n    exports.MatCardTitle = MatCardTitle;\n    exports.MatCardTitleGroup = MatCardTitleGroup;\n    exports.MatCardXlImage = MatCardXlImage;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-card.umd.js.map\n"]}