{"version":3,"sources":["src/material/material-divider.umd.js"],"names":["global","factory","exports","module","require","define","amd","self","ng","material","divider","core","cdk","coercion","this","core$1","MatDivider","_vertical","_inset","Object","defineProperty","prototype","get","set","value","coerceBooleanProperty","enumerable","configurable","decorators","type","Component","args","selector","host","role","[attr.aria-orientation]","[class.mat-divider-vertical]","[class.mat-divider-horizontal]","[class.mat-divider-inset]","class","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","styles","propDecorators","vertical","Input","inset","MatDividerModule","NgModule","imports","MatCommonModule","declarations"],"mappings":"CAAC,SAAUA,EAAQC,GACI,iBAAZC,SAA0C,oBAAXC,OAAyBF,EAAQC,QAASE,QAAQ,iBAAkBA,QAAQ,yBAA0BA,QAAQ,2BAClI,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,4BAA6B,CAAC,UAAW,gBAAiB,wBAAyB,0BAA2BJ,GACxIA,IAAzBD,EAASA,GAAUO,MAAsBC,GAAKR,EAAOQ,IAAM,GAAIR,EAAOQ,GAAGC,SAAWT,EAAOQ,GAAGC,UAAY,GAAIT,EAAOQ,GAAGC,SAASC,QAAU,IAAKV,EAAOQ,GAAGG,KAAMX,EAAOQ,GAAGI,IAAIC,SAAUb,EAAOQ,GAAGC,SAASE,MAHhN,CAIEG,MAAM,SAAWZ,EAASS,EAAME,EAAUE,GAAU;;;;;;;OASlD,IAAIC,EAA4B,WAC5B,SAASA,IACLF,KAAKG,WAAY,EACjBH,KAAKI,QAAS,EAqClB,OAnCAC,OAAOC,eAAeJ,EAAWK,UAAW,WAAY,CAEpDC,IAAK,WAAc,OAAOR,KAAKG,WAC/BM,IAAK,SAAUC,GAASV,KAAKG,UAAYJ,EAASY,sBAAsBD,IACxEE,YAAY,EACZC,cAAc,IAElBR,OAAOC,eAAeJ,EAAWK,UAAW,QAAS,CAEjDC,IAAK,WAAc,OAAOR,KAAKI,QAC/BK,IAAK,SAAUC,GAASV,KAAKI,OAASL,EAASY,sBAAsBD,IACrEE,YAAY,EACZC,cAAc,IAElBX,EAAWY,WAAa,CACpB,CAAEC,KAAMlB,EAAKmB,UAAWC,KAAM,CAAC,CACnBC,SAAU,cACVC,KAAM,CACFC,KAAQ,YACRC,0BAA2B,uCAC3BC,+BAAgC,WAChCC,iCAAkC,YAClCC,4BAA6B,QAC7BC,MAAS,eAEbC,SAAU,GACVC,cAAe9B,EAAK+B,kBAAkBC,KACtCC,gBAAiBjC,EAAKkC,wBAAwBC,OAC9CC,OAAQ,CAAC,qTAGzB/B,EAAWgC,eAAiB,CACxBC,SAAU,CAAC,CAAEpB,KAAMlB,EAAKuC,QACxBC,MAAO,CAAC,CAAEtB,KAAMlB,EAAKuC,SAElBlC,EAxCoB,GAkD3BoC,EAAkC,WAClC,SAASA,KAST,OAPAA,EAAiBxB,WAAa,CAC1B,CAAEC,KAAMlB,EAAK0C,SAAUtB,KAAM,CAAC,CAClBuB,QAAS,CAACvC,EAAOwC,iBACjBrD,QAAS,CAACc,EAAYD,EAAOwC,iBAC7BC,aAAc,CAACxC,OAGxBoC,EAV0B;;;;;;;;;;;;;;;AAyBrClD,EAAQc,WAAaA,EACrBd,EAAQkD,iBAAmBA,EAE3BjC,OAAOC,eAAelB,EAAS,aAAc,CAAEsB,OAAO","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/cdk/coercion'), require('@angular/material/core')) :\n    typeof define === 'function' && define.amd ? define('@angular/material/divider', ['exports', '@angular/core', '@angular/cdk/coercion', '@angular/material/core'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.material = global.ng.material || {}, global.ng.material.divider = {}), global.ng.core, global.ng.cdk.coercion, global.ng.material.core));\n}(this, (function (exports, core, coercion, core$1) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatDivider = /** @class */ (function () {\n        function MatDivider() {\n            this._vertical = false;\n            this._inset = false;\n        }\n        Object.defineProperty(MatDivider.prototype, \"vertical\", {\n            /** Whether the divider is vertically aligned. */\n            get: function () { return this._vertical; },\n            set: function (value) { this._vertical = coercion.coerceBooleanProperty(value); },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(MatDivider.prototype, \"inset\", {\n            /** Whether the divider is an inset divider. */\n            get: function () { return this._inset; },\n            set: function (value) { this._inset = coercion.coerceBooleanProperty(value); },\n            enumerable: false,\n            configurable: true\n        });\n        MatDivider.decorators = [\n            { type: core.Component, args: [{\n                        selector: 'mat-divider',\n                        host: {\n                            'role': 'separator',\n                            '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                            '[class.mat-divider-vertical]': 'vertical',\n                            '[class.mat-divider-horizontal]': '!vertical',\n                            '[class.mat-divider-inset]': 'inset',\n                            'class': 'mat-divider'\n                        },\n                        template: '',\n                        encapsulation: core.ViewEncapsulation.None,\n                        changeDetection: core.ChangeDetectionStrategy.OnPush,\n                        styles: [\".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\\n\"]\n                    },] }\n        ];\n        MatDivider.propDecorators = {\n            vertical: [{ type: core.Input }],\n            inset: [{ type: core.Input }]\n        };\n        return MatDivider;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var MatDividerModule = /** @class */ (function () {\n        function MatDividerModule() {\n        }\n        MatDividerModule.decorators = [\n            { type: core.NgModule, args: [{\n                        imports: [core$1.MatCommonModule],\n                        exports: [MatDivider, core$1.MatCommonModule],\n                        declarations: [MatDivider],\n                    },] }\n        ];\n        return MatDividerModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google LLC All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MatDivider = MatDivider;\n    exports.MatDividerModule = MatDividerModule;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=material-divider.umd.js.map\n"]}