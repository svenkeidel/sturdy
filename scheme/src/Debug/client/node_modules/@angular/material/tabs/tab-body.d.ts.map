{"version":3,"file":"tab-body.d.ts","sources":["tab-body.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ChangeDetectorRef, EventEmitter, OnDestroy, OnInit, ElementRef, ComponentFactoryResolver, ViewContainerRef } from '@angular/core';\nimport { AnimationEvent } from '@angular/animations';\nimport { TemplatePortal, CdkPortalOutlet, PortalHostDirective } from '@angular/cdk/portal';\nimport { Directionality, Direction } from '@angular/cdk/bidi';\nimport { Subject } from 'rxjs';\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport declare type MatTabBodyPositionState = 'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport declare type MatTabBodyOriginState = 'left' | 'right';\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nexport declare class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n    private _host;\n    /** Subscription to events for when the tab body begins centering. */\n    private _centeringSub;\n    /** Subscription to events for when the tab body finishes leaving from center position. */\n    private _leavingSub;\n    constructor(componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, _host: MatTabBody, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document?: any);\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit(): void;\n    /** Clean up centering subscription. */\n    ngOnDestroy(): void;\n}\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\nexport declare abstract class _MatTabBodyBase implements OnInit, OnDestroy {\n    private _elementRef;\n    private _dir;\n    /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n    private _positionIndex;\n    /** Subscription to the directionality change observable. */\n    private _dirChangeSubscription;\n    /** Tab body position state. Used by the animation trigger for the current state. */\n    _position: MatTabBodyPositionState;\n    /** Emits when an animation on the tab is complete. */\n    _translateTabComplete: Subject<AnimationEvent>;\n    /** Event emitted when the tab begins to animate towards the center as the active tab. */\n    readonly _onCentering: EventEmitter<number>;\n    /** Event emitted before the centering of the tab begins. */\n    readonly _beforeCentering: EventEmitter<boolean>;\n    /** Event emitted before the centering of the tab begins. */\n    readonly _afterLeavingCenter: EventEmitter<void>;\n    /** Event emitted when the tab completes its animation towards the center. */\n    readonly _onCentered: EventEmitter<void>;\n    /** The portal host inside of this container into which the tab body content will be loaded. */\n    abstract _portalHost: PortalHostDirective;\n    /** The tab body content to display. */\n    _content: TemplatePortal;\n    /** Position that will be used when the tab is immediately becoming visible after creation. */\n    origin: number | null;\n    /** Duration for the tab's animation. */\n    animationDuration: string;\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position: number);\n    constructor(_elementRef: ElementRef<HTMLElement>, _dir: Directionality, changeDetectorRef: ChangeDetectorRef);\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    _onTranslateTabStarted(event: AnimationEvent): void;\n    /** The text direction of the containing app. */\n    _getLayoutDirection(): Direction;\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position: MatTabBodyPositionState | string): boolean;\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    private _computePositionAnimationState;\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    private _computePositionFromOrigin;\n}\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nexport declare class MatTabBody extends _MatTabBodyBase {\n    _portalHost: PortalHostDirective;\n    constructor(elementRef: ElementRef<HTMLElement>, dir: Directionality, changeDetectorRef: ChangeDetectorRef);\n}\n"]}