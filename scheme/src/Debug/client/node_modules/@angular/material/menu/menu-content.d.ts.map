{"version":3,"file":"menu-content.d.ts","sources":["menu-content.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { ApplicationRef, ChangeDetectorRef, ComponentFactoryResolver, Injector, OnDestroy, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subject } from 'rxjs';\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nexport declare class MatMenuContent implements OnDestroy {\n    private _template;\n    private _componentFactoryResolver;\n    private _appRef;\n    private _injector;\n    private _viewContainerRef;\n    private _document;\n    private _changeDetectorRef?;\n    private _portal;\n    private _outlet;\n    /** Emits when the menu content has been attached. */\n    _attached: Subject<void>;\n    constructor(_template: TemplateRef<any>, _componentFactoryResolver: ComponentFactoryResolver, _appRef: ApplicationRef, _injector: Injector, _viewContainerRef: ViewContainerRef, _document: any, _changeDetectorRef?: ChangeDetectorRef | undefined);\n    /**\n     * Attaches the content with a particular context.\n     * @docs-private\n     */\n    attach(context?: any): void;\n    /**\n     * Detaches the content.\n     * @docs-private\n     */\n    detach(): void;\n    ngOnDestroy(): void;\n}\n"]}