{"version":3,"file":"swimlane-ngx-graph.js","sources":["ng://@swimlane/ngx-graph/lib/utils/id.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/dagre.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/dagreCluster.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/dagreNodesOnly.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/d3ForceDirected.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/colaForceDirected.ts","ng://@swimlane/ngx-graph/lib/graph/layouts/layout.service.ts","ng://@swimlane/ngx-graph/lib/enums/panning.enum.ts","ng://@swimlane/ngx-graph/lib/graph/graph.component.ts","ng://@swimlane/ngx-graph/lib/graph/mouse-wheel.directive.ts","ng://@swimlane/ngx-graph/lib/graph/graph.module.ts","ng://@swimlane/ngx-graph/lib/ngx-graph.module.ts","ng://@swimlane/ngx-graph/public_api.ts","ng://@swimlane/ngx-graph/swimlane-ngx-graph.ts"],"sourcesContent":["const cache = {};\n\n/**\n * Generates a short id.\n *\n */\nexport function id(): string {\n  let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n\n  newId = `a${newId}`;\n\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n\n  return id();\n}\n","import { Layout } from '../../models/layout.model';\nimport { Graph } from '../../models/graph.model';\nimport { id } from '../../utils/id';\nimport * as dagre from 'dagre';\nimport { Edge } from '../../models/edge.model';\n\nexport enum Orientation {\n  LEFT_TO_RIGHT = 'LR',\n  RIGHT_TO_LEFT = 'RL',\n  TOP_TO_BOTTOM = 'TB',\n  BOTTOM_TO_TOM = 'BT'\n}\nexport enum Alignment {\n  CENTER = 'C',\n  UP_LEFT = 'UL',\n  UP_RIGHT = 'UR',\n  DOWN_LEFT = 'DL',\n  DOWN_RIGHT = 'DR'\n}\n\nexport interface DagreSettings {\n  orientation?: Orientation;\n  marginX?: number;\n  marginY?: number;\n  edgePadding?: number;\n  rankPadding?: number;\n  nodePadding?: number;\n  align?: Alignment;\n  acyclicer?: 'greedy' | undefined;\n  ranker?: 'network-simplex' | 'tight-tree' | 'longest-path';\n  multigraph?: boolean;\n  compound?: boolean;\n}\n\nexport class DagreLayout implements Layout {\n  defaultSettings: DagreSettings = {\n    orientation: Orientation.LEFT_TO_RIGHT,\n    marginX: 20,\n    marginY: 20,\n    edgePadding: 100,\n    rankPadding: 100,\n    nodePadding: 50,\n    multigraph: true,\n    compound: true\n  };\n  settings: DagreSettings = {};\n\n  dagreGraph: any;\n  dagreNodes: any;\n  dagreEdges: any;\n\n  run(graph: Graph): Graph {\n    this.createDagreGraph(graph);\n    dagre.layout(this.dagreGraph);\n\n    graph.edgeLabels = this.dagreGraph._edgeLabels;\n\n    for (const dagreNodeId in this.dagreGraph._nodes) {\n      const dagreNode = this.dagreGraph._nodes[dagreNodeId];\n      const node = graph.nodes.find(n => n.id === dagreNode.id);\n      node.position = {\n        x: dagreNode.x,\n        y: dagreNode.y\n      };\n      node.dimension = {\n        width: dagreNode.width,\n        height: dagreNode.height\n      };\n    }\n\n    return graph;\n  }\n\n  updateEdge(graph: Graph, edge: Edge): Graph {\n    const sourceNode = graph.nodes.find(n => n.id === edge.source);\n    const targetNode = graph.nodes.find(n => n.id === edge.target);\n\n    // determine new arrow position\n    const dir = sourceNode.position.y <= targetNode.position.y ? -1 : 1;\n    const startingPoint = {\n      x: sourceNode.position.x,\n      y: sourceNode.position.y - dir * (sourceNode.dimension.height / 2)\n    };\n    const endingPoint = {\n      x: targetNode.position.x,\n      y: targetNode.position.y + dir * (targetNode.dimension.height / 2)\n    };\n\n    // generate new points\n    edge.points = [startingPoint, endingPoint];\n    return graph;\n  }\n\n  createDagreGraph(graph: Graph): any {\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\n    this.dagreGraph = new dagre.graphlib.Graph({ compound: settings.compound, multigraph: settings.multigraph });\n\n    this.dagreGraph.setGraph({\n      rankdir: settings.orientation,\n      marginx: settings.marginX,\n      marginy: settings.marginY,\n      edgesep: settings.edgePadding,\n      ranksep: settings.rankPadding,\n      nodesep: settings.nodePadding,\n      align: settings.align,\n      acyclicer: settings.acyclicer,\n      ranker: settings.ranker,\n      multigraph: settings.multigraph,\n      compound: settings.compound\n    });\n\n    // Default to assigning a new object as a label for each new edge.\n    this.dagreGraph.setDefaultEdgeLabel(() => {\n      return {\n        /* empty */\n      };\n    });\n\n    this.dagreNodes = graph.nodes.map(n => {\n      const node: any = Object.assign({}, n);\n      node.width = n.dimension.width;\n      node.height = n.dimension.height;\n      node.x = n.position.x;\n      node.y = n.position.y;\n      return node;\n    });\n\n    this.dagreEdges = graph.edges.map(l => {\n      const newLink: any = Object.assign({}, l);\n      if (!newLink.id) {\n        newLink.id = id();\n      }\n      return newLink;\n    });\n\n    for (const node of this.dagreNodes) {\n      if (!node.width) {\n        node.width = 20;\n      }\n      if (!node.height) {\n        node.height = 30;\n      }\n\n      // update dagre\n      this.dagreGraph.setNode(node.id, node);\n    }\n\n    // update dagre\n    for (const edge of this.dagreEdges) {\n      if (settings.multigraph) {\n        this.dagreGraph.setEdge(edge.source, edge.target, edge, edge.id);\n      } else {\n        this.dagreGraph.setEdge(edge.source, edge.target);\n      }\n    }\n\n    return this.dagreGraph;\n  }\n}\n","import { Layout } from '../../models/layout.model';\nimport { Graph } from '../../models/graph.model';\nimport { id } from '../../utils/id';\nimport * as dagre from 'dagre';\nimport { Edge } from '../../models/edge.model';\nimport { Node, ClusterNode } from '../../models/node.model';\nimport { DagreSettings, Orientation } from './dagre';\n\nexport class DagreClusterLayout implements Layout {\n  defaultSettings: DagreSettings = {\n    orientation: Orientation.LEFT_TO_RIGHT,\n    marginX: 20,\n    marginY: 20,\n    edgePadding: 100,\n    rankPadding: 100,\n    nodePadding: 50,\n    multigraph: true,\n    compound: true\n  };\n  settings: DagreSettings = {};\n\n  dagreGraph: any;\n  dagreNodes: Node[];\n  dagreClusters: ClusterNode[];\n  dagreEdges: any;\n\n  run(graph: Graph): Graph {\n    this.createDagreGraph(graph);\n    dagre.layout(this.dagreGraph);\n\n    graph.edgeLabels = this.dagreGraph._edgeLabels;\n\n    const dagreToOutput = node => {\n      const dagreNode = this.dagreGraph._nodes[node.id];\n      return {\n        ...node,\n        position: {\n          x: dagreNode.x,\n          y: dagreNode.y\n        },\n        dimension: {\n          width: dagreNode.width,\n          height: dagreNode.height\n        }\n      };\n    };\n    graph.clusters = (graph.clusters || []).map(dagreToOutput);\n    graph.nodes = graph.nodes.map(dagreToOutput);\n\n    return graph;\n  }\n\n  updateEdge(graph: Graph, edge: Edge): Graph {\n    const sourceNode = graph.nodes.find(n => n.id === edge.source);\n    const targetNode = graph.nodes.find(n => n.id === edge.target);\n\n    // determine new arrow position\n    const dir = sourceNode.position.y <= targetNode.position.y ? -1 : 1;\n    const startingPoint = {\n      x: sourceNode.position.x,\n      y: sourceNode.position.y - dir * (sourceNode.dimension.height / 2)\n    };\n    const endingPoint = {\n      x: targetNode.position.x,\n      y: targetNode.position.y + dir * (targetNode.dimension.height / 2)\n    };\n\n    // generate new points\n    edge.points = [startingPoint, endingPoint];\n    return graph;\n  }\n\n  createDagreGraph(graph: Graph): any {\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\n    this.dagreGraph = new dagre.graphlib.Graph({ compound: settings.compound, multigraph: settings.multigraph });\n    this.dagreGraph.setGraph({\n      rankdir: settings.orientation,\n      marginx: settings.marginX,\n      marginy: settings.marginY,\n      edgesep: settings.edgePadding,\n      ranksep: settings.rankPadding,\n      nodesep: settings.nodePadding,\n      align: settings.align,\n      acyclicer: settings.acyclicer,\n      ranker: settings.ranker,\n      multigraph: settings.multigraph,\n      compound: settings.compound\n    });\n\n    // Default to assigning a new object as a label for each new edge.\n    this.dagreGraph.setDefaultEdgeLabel(() => {\n      return {\n        /* empty */\n      };\n    });\n\n    this.dagreNodes = graph.nodes.map((n: Node) => {\n      const node: any = Object.assign({}, n);\n      node.width = n.dimension.width;\n      node.height = n.dimension.height;\n      node.x = n.position.x;\n      node.y = n.position.y;\n      return node;\n    });\n\n    this.dagreClusters = graph.clusters || [];\n\n    this.dagreEdges = graph.edges.map(l => {\n      const newLink: any = Object.assign({}, l);\n      if (!newLink.id) {\n        newLink.id = id();\n      }\n      return newLink;\n    });\n\n    for (const node of this.dagreNodes) {\n      this.dagreGraph.setNode(node.id, node);\n    }\n\n    for (const cluster of this.dagreClusters) {\n      this.dagreGraph.setNode(cluster.id, cluster);\n      cluster.childNodeIds.forEach(childNodeId => {\n        this.dagreGraph.setParent(childNodeId, cluster.id);\n      });\n    }\n\n    // update dagre\n    for (const edge of this.dagreEdges) {\n      if (settings.multigraph) {\n        this.dagreGraph.setEdge(edge.source, edge.target, edge, edge.id);\n      } else {\n        this.dagreGraph.setEdge(edge.source, edge.target);\n      }\n    }\n\n    return this.dagreGraph;\n  }\n}\n","import { Layout } from '../../models/layout.model';\nimport { Graph } from '../../models/graph.model';\nimport { id } from '../../utils/id';\nimport * as dagre from 'dagre';\nimport { Edge } from '../../models/edge.model';\nimport { DagreSettings, Orientation } from './dagre';\n\nexport interface DagreNodesOnlySettings extends DagreSettings {\n  curveDistance?: number;\n}\n\nconst DEFAULT_EDGE_NAME = '\\x00';\nconst GRAPH_NODE = '\\x00';\nconst EDGE_KEY_DELIM = '\\x01';\n\nexport class DagreNodesOnlyLayout implements Layout {\n  defaultSettings: DagreNodesOnlySettings = {\n    orientation: Orientation.LEFT_TO_RIGHT,\n    marginX: 20,\n    marginY: 20,\n    edgePadding: 100,\n    rankPadding: 100,\n    nodePadding: 50,\n    curveDistance: 20,\n    multigraph: true,\n    compound: true\n  };\n  settings: DagreNodesOnlySettings = {};\n\n  dagreGraph: any;\n  dagreNodes: any;\n  dagreEdges: any;\n\n  run(graph: Graph): Graph {\n    this.createDagreGraph(graph);\n    dagre.layout(this.dagreGraph);\n\n    graph.edgeLabels = this.dagreGraph._edgeLabels;\n\n    for (const dagreNodeId in this.dagreGraph._nodes) {\n      const dagreNode = this.dagreGraph._nodes[dagreNodeId];\n      const node = graph.nodes.find(n => n.id === dagreNode.id);\n      node.position = {\n        x: dagreNode.x,\n        y: dagreNode.y\n      };\n      node.dimension = {\n        width: dagreNode.width,\n        height: dagreNode.height\n      };\n    }\n    for (const edge of graph.edges) {\n      this.updateEdge(graph, edge);\n    }\n\n    return graph;\n  }\n\n  updateEdge(graph: Graph, edge: Edge): Graph {\n    const sourceNode = graph.nodes.find(n => n.id === edge.source);\n    const targetNode = graph.nodes.find(n => n.id === edge.target);\n    const rankAxis: 'x' | 'y' = this.settings.orientation === 'BT' || this.settings.orientation === 'TB' ? 'y' : 'x';\n    const orderAxis: 'x' | 'y' = rankAxis === 'y' ? 'x' : 'y';\n    const rankDimension = rankAxis === 'y' ? 'height' : 'width';\n    // determine new arrow position\n    const dir = sourceNode.position[rankAxis] <= targetNode.position[rankAxis] ? -1 : 1;\n    const startingPoint = {\n      [orderAxis]: sourceNode.position[orderAxis],\n      [rankAxis]: sourceNode.position[rankAxis] - dir * (sourceNode.dimension[rankDimension] / 2)\n    };\n    const endingPoint = {\n      [orderAxis]: targetNode.position[orderAxis],\n      [rankAxis]: targetNode.position[rankAxis] + dir * (targetNode.dimension[rankDimension] / 2)\n    };\n\n    const curveDistance = this.settings.curveDistance || this.defaultSettings.curveDistance;\n    // generate new points\n    edge.points = [\n      startingPoint,\n      {\n        [orderAxis]: startingPoint[orderAxis],\n        [rankAxis]: startingPoint[rankAxis] - dir * curveDistance\n      },\n      {\n        [orderAxis]: endingPoint[orderAxis],\n        [rankAxis]: endingPoint[rankAxis] + dir * curveDistance\n      },\n      endingPoint\n    ];\n    const edgeLabelId = `${edge.source}${EDGE_KEY_DELIM}${edge.target}${EDGE_KEY_DELIM}${DEFAULT_EDGE_NAME}`;\n    const matchingEdgeLabel = graph.edgeLabels[edgeLabelId];\n    if (matchingEdgeLabel) {\n      matchingEdgeLabel.points = edge.points;\n    }\n    return graph;\n  }\n\n  createDagreGraph(graph: Graph): any {\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\n    this.dagreGraph = new dagre.graphlib.Graph({ compound: settings.compound, multigraph: settings.multigraph });\n    this.dagreGraph.setGraph({\n      rankdir: settings.orientation,\n      marginx: settings.marginX,\n      marginy: settings.marginY,\n      edgesep: settings.edgePadding,\n      ranksep: settings.rankPadding,\n      nodesep: settings.nodePadding,\n      align: settings.align,\n      acyclicer: settings.acyclicer,\n      ranker: settings.ranker,\n      multigraph: settings.multigraph,\n      compound: settings.compound\n    });\n\n    // Default to assigning a new object as a label for each new edge.\n    this.dagreGraph.setDefaultEdgeLabel(() => {\n      return {\n        /* empty */\n      };\n    });\n\n    this.dagreNodes = graph.nodes.map(n => {\n      const node: any = Object.assign({}, n);\n      node.width = n.dimension.width;\n      node.height = n.dimension.height;\n      node.x = n.position.x;\n      node.y = n.position.y;\n      return node;\n    });\n\n    this.dagreEdges = graph.edges.map(l => {\n      const newLink: any = Object.assign({}, l);\n      if (!newLink.id) {\n        newLink.id = id();\n      }\n      return newLink;\n    });\n\n    for (const node of this.dagreNodes) {\n      if (!node.width) {\n        node.width = 20;\n      }\n      if (!node.height) {\n        node.height = 30;\n      }\n\n      // update dagre\n      this.dagreGraph.setNode(node.id, node);\n    }\n\n    // update dagre\n    for (const edge of this.dagreEdges) {\n      if (settings.multigraph) {\n        this.dagreGraph.setEdge(edge.source, edge.target, edge, edge.id);\n      } else {\n        this.dagreGraph.setEdge(edge.source, edge.target);\n      }\n    }\n\n    return this.dagreGraph;\n  }\n}\n","import { Layout } from '../../models/layout.model';\nimport { Graph } from '../../models/graph.model';\nimport { Node } from '../../models/node.model';\nimport { id } from '../../utils/id';\nimport { forceCollide, forceLink, forceManyBody, forceSimulation } from 'd3-force';\nimport { Edge } from '../../models/edge.model';\nimport { Observable, Subject } from 'rxjs';\nimport { NodePosition } from '../../models';\n\nexport interface D3ForceDirectedSettings {\n  force?: any;\n  forceLink?: any;\n}\nexport interface D3Node {\n  id?: string;\n  x: number;\n  y: number;\n  width?: number;\n  height?: number;\n  fx?: number;\n  fy?: number;\n}\nexport interface D3Edge {\n  source: string | D3Node;\n  target: string | D3Node;\n  midPoint: NodePosition;\n}\nexport interface D3Graph {\n  nodes: D3Node[];\n  edges: D3Edge[];\n}\nexport interface MergedNode extends D3Node, Node {\n  id: string;\n}\n\nexport function toD3Node(maybeNode: string | D3Node): D3Node {\n  if (typeof maybeNode === 'string') {\n    return {\n      id: maybeNode,\n      x: 0,\n      y: 0\n    };\n  }\n  return maybeNode;\n}\n\nexport class D3ForceDirectedLayout implements Layout {\n  defaultSettings: D3ForceDirectedSettings = {\n    force: forceSimulation<any>().force('charge', forceManyBody().strength(-150)).force('collide', forceCollide(5)),\n    forceLink: forceLink<any, any>()\n      .id(node => node.id)\n      .distance(() => 100)\n  };\n  settings: D3ForceDirectedSettings = {};\n\n  inputGraph: Graph;\n  outputGraph: Graph;\n  d3Graph: D3Graph;\n  outputGraph$: Subject<Graph> = new Subject();\n\n  draggingStart: { x: number; y: number };\n\n  run(graph: Graph): Observable<Graph> {\n    this.inputGraph = graph;\n    this.d3Graph = {\n      nodes: [...this.inputGraph.nodes.map(n => ({ ...n }))] as any,\n      edges: [...this.inputGraph.edges.map(e => ({ ...e }))] as any\n    };\n    this.outputGraph = {\n      nodes: [],\n      edges: [],\n      edgeLabels: []\n    };\n    this.outputGraph$.next(this.outputGraph);\n    this.settings = Object.assign({}, this.defaultSettings, this.settings);\n    if (this.settings.force) {\n      this.settings.force\n        .nodes(this.d3Graph.nodes)\n        .force('link', this.settings.forceLink.links(this.d3Graph.edges))\n        .alpha(0.5)\n        .restart()\n        .on('tick', () => {\n          this.outputGraph$.next(this.d3GraphToOutputGraph(this.d3Graph));\n        });\n    }\n\n    return this.outputGraph$.asObservable();\n  }\n\n  updateEdge(graph: Graph, edge: Edge): Observable<Graph> {\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\n    if (settings.force) {\n      settings.force\n        .nodes(this.d3Graph.nodes)\n        .force('link', settings.forceLink.links(this.d3Graph.edges))\n        .alpha(0.5)\n        .restart()\n        .on('tick', () => {\n          this.outputGraph$.next(this.d3GraphToOutputGraph(this.d3Graph));\n        });\n    }\n\n    return this.outputGraph$.asObservable();\n  }\n\n  d3GraphToOutputGraph(d3Graph: D3Graph): Graph {\n    this.outputGraph.nodes = this.d3Graph.nodes.map((node: MergedNode) => ({\n      ...node,\n      id: node.id || id(),\n      position: {\n        x: node.x,\n        y: node.y\n      },\n      dimension: {\n        width: (node.dimension && node.dimension.width) || 20,\n        height: (node.dimension && node.dimension.height) || 20\n      },\n      transform: `translate(${node.x - ((node.dimension && node.dimension.width) || 20) / 2 || 0}, ${\n        node.y - ((node.dimension && node.dimension.height) || 20) / 2 || 0\n      })`\n    }));\n\n    this.outputGraph.edges = this.d3Graph.edges.map(edge => ({\n      ...edge,\n      source: toD3Node(edge.source).id,\n      target: toD3Node(edge.target).id,\n      points: [\n        {\n          x: toD3Node(edge.source).x,\n          y: toD3Node(edge.source).y\n        },\n        {\n          x: toD3Node(edge.target).x,\n          y: toD3Node(edge.target).y\n        }\n      ]\n    }));\n\n    this.outputGraph.edgeLabels = this.outputGraph.edges;\n    return this.outputGraph;\n  }\n\n  onDragStart(draggingNode: Node, $event: MouseEvent): void {\n    this.settings.force.alphaTarget(0.3).restart();\n    const node = this.d3Graph.nodes.find(d3Node => d3Node.id === draggingNode.id);\n    if (!node) {\n      return;\n    }\n    this.draggingStart = { x: $event.x - node.x, y: $event.y - node.y };\n    node.fx = $event.x - this.draggingStart.x;\n    node.fy = $event.y - this.draggingStart.y;\n  }\n\n  onDrag(draggingNode: Node, $event: MouseEvent): void {\n    if (!draggingNode) {\n      return;\n    }\n    const node = this.d3Graph.nodes.find(d3Node => d3Node.id === draggingNode.id);\n    if (!node) {\n      return;\n    }\n    node.fx = $event.x - this.draggingStart.x;\n    node.fy = $event.y - this.draggingStart.y;\n  }\n\n  onDragEnd(draggingNode: Node, $event: MouseEvent): void {\n    if (!draggingNode) {\n      return;\n    }\n    const node = this.d3Graph.nodes.find(d3Node => d3Node.id === draggingNode.id);\n    if (!node) {\n      return;\n    }\n\n    this.settings.force.alphaTarget(0);\n    node.fx = undefined;\n    node.fy = undefined;\n  }\n}\n","import { Layout } from '../../models/layout.model';\nimport { Graph } from '../../models/graph.model';\nimport { Node, ClusterNode } from '../../models/node.model';\nimport { id } from '../../utils/id';\nimport { d3adaptor, ID3StyleLayoutAdaptor, Layout as ColaLayout, Group, InputNode, Link, Rectangle } from 'webcola';\nimport * as d3Dispatch from 'd3-dispatch';\nimport * as d3Force from 'd3-force';\nimport * as d3Timer from 'd3-timer';\nimport { Edge } from '../../models/edge.model';\nimport { Observable, Subject } from 'rxjs';\nimport { ViewDimensions } from '@swimlane/ngx-charts';\n\nexport interface ColaForceDirectedSettings {\n  force?: ColaLayout & ID3StyleLayoutAdaptor;\n  forceModifierFn?: (force: ColaLayout & ID3StyleLayoutAdaptor) => ColaLayout & ID3StyleLayoutAdaptor;\n  onTickListener?: (internalGraph: ColaGraph) => void;\n  viewDimensions?: ViewDimensions;\n}\nexport interface ColaGraph {\n  groups: Group[];\n  nodes: InputNode[];\n  links: Array<Link<number>>;\n}\nexport function toNode(nodes: InputNode[], nodeRef: InputNode | number): InputNode {\n  if (typeof nodeRef === 'number') {\n    return nodes[nodeRef];\n  }\n  return nodeRef;\n}\n\nexport class ColaForceDirectedLayout implements Layout {\n  defaultSettings: ColaForceDirectedSettings = {\n    force: d3adaptor({\n      ...d3Dispatch,\n      ...d3Force,\n      ...d3Timer\n    })\n      .linkDistance(150)\n      .avoidOverlaps(true),\n    viewDimensions: {\n      width: 600,\n      height: 600,\n      xOffset: 0\n    }\n  };\n  settings: ColaForceDirectedSettings = {};\n\n  inputGraph: Graph;\n  outputGraph: Graph;\n  internalGraph: ColaGraph & { groupLinks?: Edge[] };\n  outputGraph$: Subject<Graph> = new Subject();\n\n  draggingStart: { x: number; y: number };\n\n  run(graph: Graph): Observable<Graph> {\n    this.inputGraph = graph;\n    if (!this.inputGraph.clusters) {\n      this.inputGraph.clusters = [];\n    }\n    this.internalGraph = {\n      nodes: [\n        ...this.inputGraph.nodes.map(n => ({\n          ...n,\n          width: n.dimension ? n.dimension.width : 20,\n          height: n.dimension ? n.dimension.height : 20\n        }))\n      ] as any,\n      groups: [\n        ...this.inputGraph.clusters.map(\n          (cluster): Group => ({\n            padding: 5,\n            groups: cluster.childNodeIds\n              .map(nodeId => <any>this.inputGraph.clusters.findIndex(node => node.id === nodeId))\n              .filter(x => x >= 0),\n            leaves: cluster.childNodeIds\n              .map(nodeId => <any>this.inputGraph.nodes.findIndex(node => node.id === nodeId))\n              .filter(x => x >= 0)\n          })\n        )\n      ],\n      links: [\n        ...this.inputGraph.edges\n          .map(e => {\n            const sourceNodeIndex = this.inputGraph.nodes.findIndex(node => e.source === node.id);\n            const targetNodeIndex = this.inputGraph.nodes.findIndex(node => e.target === node.id);\n            if (sourceNodeIndex === -1 || targetNodeIndex === -1) {\n              return undefined;\n            }\n            return {\n              ...e,\n              source: sourceNodeIndex,\n              target: targetNodeIndex\n            };\n          })\n          .filter(x => !!x)\n      ] as any,\n      groupLinks: [\n        ...this.inputGraph.edges\n          .map(e => {\n            const sourceNodeIndex = this.inputGraph.nodes.findIndex(node => e.source === node.id);\n            const targetNodeIndex = this.inputGraph.nodes.findIndex(node => e.target === node.id);\n            if (sourceNodeIndex >= 0 && targetNodeIndex >= 0) {\n              return undefined;\n            }\n            return e;\n          })\n          .filter(x => !!x)\n      ]\n    };\n    this.outputGraph = {\n      nodes: [],\n      clusters: [],\n      edges: [],\n      edgeLabels: []\n    };\n    this.outputGraph$.next(this.outputGraph);\n    this.settings = Object.assign({}, this.defaultSettings, this.settings);\n    if (this.settings.force) {\n      this.settings.force = this.settings.force\n        .nodes(this.internalGraph.nodes)\n        .groups(this.internalGraph.groups)\n        .links(this.internalGraph.links)\n        .alpha(0.5)\n        .on('tick', () => {\n          if (this.settings.onTickListener) {\n            this.settings.onTickListener(this.internalGraph);\n          }\n          this.outputGraph$.next(this.internalGraphToOutputGraph(this.internalGraph));\n        });\n      if (this.settings.viewDimensions) {\n        this.settings.force = this.settings.force.size([\n          this.settings.viewDimensions.width,\n          this.settings.viewDimensions.height\n        ]);\n      }\n      if (this.settings.forceModifierFn) {\n        this.settings.force = this.settings.forceModifierFn(this.settings.force);\n      }\n      this.settings.force.start();\n    }\n\n    return this.outputGraph$.asObservable();\n  }\n\n  updateEdge(graph: Graph, edge: Edge): Observable<Graph> {\n    const settings = Object.assign({}, this.defaultSettings, this.settings);\n    if (settings.force) {\n      settings.force.start();\n    }\n\n    return this.outputGraph$.asObservable();\n  }\n\n  internalGraphToOutputGraph(internalGraph: any): Graph {\n    this.outputGraph.nodes = internalGraph.nodes.map(node => ({\n      ...node,\n      id: node.id || id(),\n      position: {\n        x: node.x,\n        y: node.y\n      },\n      dimension: {\n        width: (node.dimension && node.dimension.width) || 20,\n        height: (node.dimension && node.dimension.height) || 20\n      },\n      transform: `translate(${node.x - ((node.dimension && node.dimension.width) || 20) / 2 || 0}, ${\n        node.y - ((node.dimension && node.dimension.height) || 20) / 2 || 0\n      })`\n    }));\n\n    this.outputGraph.edges = internalGraph.links\n      .map(edge => {\n        const source: any = toNode(internalGraph.nodes, edge.source);\n        const target: any = toNode(internalGraph.nodes, edge.target);\n        return {\n          ...edge,\n          source: source.id,\n          target: target.id,\n          points: [\n            (source.bounds as Rectangle).rayIntersection(target.bounds.cx(), target.bounds.cy()),\n            (target.bounds as Rectangle).rayIntersection(source.bounds.cx(), source.bounds.cy())\n          ]\n        };\n      })\n      .concat(\n        internalGraph.groupLinks.map(groupLink => {\n          const sourceNode = internalGraph.nodes.find(foundNode => (foundNode as any).id === groupLink.source);\n          const targetNode = internalGraph.nodes.find(foundNode => (foundNode as any).id === groupLink.target);\n          const source =\n            sourceNode || internalGraph.groups.find(foundGroup => (foundGroup as any).id === groupLink.source);\n          const target =\n            targetNode || internalGraph.groups.find(foundGroup => (foundGroup as any).id === groupLink.target);\n          return {\n            ...groupLink,\n            source: source.id,\n            target: target.id,\n            points: [\n              (source.bounds as Rectangle).rayIntersection(target.bounds.cx(), target.bounds.cy()),\n              (target.bounds as Rectangle).rayIntersection(source.bounds.cx(), source.bounds.cy())\n            ]\n          };\n        })\n      );\n\n    this.outputGraph.clusters = internalGraph.groups.map(\n      (group, index): ClusterNode => {\n        const inputGroup = this.inputGraph.clusters[index];\n        return {\n          ...inputGroup,\n          dimension: {\n            width: group.bounds ? group.bounds.width() : 20,\n            height: group.bounds ? group.bounds.height() : 20\n          },\n          position: {\n            x: group.bounds ? group.bounds.x + group.bounds.width() / 2 : 0,\n            y: group.bounds ? group.bounds.y + group.bounds.height() / 2 : 0\n          }\n        };\n      }\n    );\n    this.outputGraph.edgeLabels = this.outputGraph.edges;\n    return this.outputGraph;\n  }\n\n  onDragStart(draggingNode: Node, $event: MouseEvent): void {\n    const nodeIndex = this.outputGraph.nodes.findIndex(foundNode => foundNode.id === draggingNode.id);\n    const node = this.internalGraph.nodes[nodeIndex];\n    if (!node) {\n      return;\n    }\n    this.draggingStart = { x: node.x - $event.x, y: node.y - $event.y };\n    node.fixed = 1;\n    this.settings.force.start();\n  }\n\n  onDrag(draggingNode: Node, $event: MouseEvent): void {\n    if (!draggingNode) {\n      return;\n    }\n    const nodeIndex = this.outputGraph.nodes.findIndex(foundNode => foundNode.id === draggingNode.id);\n    const node = this.internalGraph.nodes[nodeIndex];\n    if (!node) {\n      return;\n    }\n    node.x = this.draggingStart.x + $event.x;\n    node.y = this.draggingStart.y + $event.y;\n  }\n\n  onDragEnd(draggingNode: Node, $event: MouseEvent): void {\n    if (!draggingNode) {\n      return;\n    }\n    const nodeIndex = this.outputGraph.nodes.findIndex(foundNode => foundNode.id === draggingNode.id);\n    const node = this.internalGraph.nodes[nodeIndex];\n    if (!node) {\n      return;\n    }\n\n    node.fixed = 0;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Layout } from '../../models/layout.model';\nimport { DagreLayout } from './dagre';\nimport { DagreClusterLayout } from './dagreCluster';\nimport { DagreNodesOnlyLayout } from './dagreNodesOnly';\nimport { D3ForceDirectedLayout } from './d3ForceDirected';\nimport { ColaForceDirectedLayout } from './colaForceDirected';\n\nconst layouts = {\n  dagre: DagreLayout,\n  dagreCluster: DagreClusterLayout,\n  dagreNodesOnly: DagreNodesOnlyLayout,\n  d3ForceDirected: D3ForceDirectedLayout,\n  colaForceDirected: ColaForceDirectedLayout\n};\n\n@Injectable()\nexport class LayoutService {\n  getLayout(name: string): Layout {\n    if (layouts[name]) {\n      return new layouts[name]();\n    } else {\n      throw new Error(`Unknown layout type '${name}'`);\n    }\n  }\n}\n","export enum PanningAxis {\n  Both = 'both',\n  Horizontal = 'horizontal',\n  Vertical = 'vertical'\n}\n","// rename transition due to conflict with d3 transition\nimport { animate, style, transition as ngTransition, trigger } from '@angular/animations';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation,\n  NgZone,\n  ChangeDetectorRef,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\nimport {\n  BaseChartComponent,\n  ChartComponent,\n  ColorHelper,\n  ViewDimensions,\n  calculateViewDimensions\n} from '@swimlane/ngx-charts';\nimport { select } from 'd3-selection';\nimport * as shape from 'd3-shape';\nimport * as ease from 'd3-ease';\nimport 'd3-transition';\nimport { Observable, Subscription, of } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { identity, scale, smoothMatrix, toSVG, transform, translate } from 'transformation-matrix';\nimport { Layout } from '../models/layout.model';\nimport { LayoutService } from './layouts/layout.service';\nimport { Edge } from '../models/edge.model';\nimport { Node, ClusterNode } from '../models/node.model';\nimport { Graph } from '../models/graph.model';\nimport { id } from '../utils/id';\nimport { PanningAxis } from '../enums/panning.enum';\n\n/**\n * Matrix\n */\nexport interface Matrix {\n  a: number;\n  b: number;\n  c: number;\n  d: number;\n  e: number;\n  f: number;\n}\n\n@Component({\n  selector: 'ngx-graph',\n  styleUrls: ['./graph.component.scss'],\n  templateUrl: 'graph.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GraphComponent extends BaseChartComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit {\n  @Input() legend: boolean = false;\n  @Input() nodes: Node[] = [];\n  @Input() clusters: ClusterNode[] = [];\n  @Input() links: Edge[] = [];\n  @Input() activeEntries: any[] = [];\n  @Input() curve: any;\n  @Input() draggingEnabled = true;\n  @Input() nodeHeight: number;\n  @Input() nodeMaxHeight: number;\n  @Input() nodeMinHeight: number;\n  @Input() nodeWidth: number;\n  @Input() nodeMinWidth: number;\n  @Input() nodeMaxWidth: number;\n  @Input() panningEnabled: boolean = true;\n  @Input() panningAxis: PanningAxis = PanningAxis.Both;\n  @Input() enableZoom = true;\n  @Input() zoomSpeed = 0.1;\n  @Input() minZoomLevel = 0.1;\n  @Input() maxZoomLevel = 4.0;\n  @Input() autoZoom = false;\n  @Input() panOnZoom = true;\n  @Input() animate? = false;\n  @Input() autoCenter = false;\n  @Input() update$: Observable<any>;\n  @Input() center$: Observable<any>;\n  @Input() zoomToFit$: Observable<any>;\n  @Input() panToNode$: Observable<any>;\n  @Input() layout: string | Layout;\n  @Input() layoutSettings: any;\n  @Input() enableTrackpadSupport = false;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n  @Output() zoomChange: EventEmitter<number> = new EventEmitter();\n  @Output() clickHandler: EventEmitter<MouseEvent> = new EventEmitter();\n\n  @ContentChild('linkTemplate') linkTemplate: TemplateRef<any>;\n  @ContentChild('nodeTemplate') nodeTemplate: TemplateRef<any>;\n  @ContentChild('clusterTemplate') clusterTemplate: TemplateRef<any>;\n  @ContentChild('defsTemplate') defsTemplate: TemplateRef<any>;\n\n  @ViewChild(ChartComponent, { read: ElementRef, static: true }) chart: ElementRef;\n  @ViewChildren('nodeElement') nodeElements: QueryList<ElementRef>;\n  @ViewChildren('linkElement') linkElements: QueryList<ElementRef>;\n\n  private isMouseMoveCalled: boolean = false;\n\n  graphSubscription: Subscription = new Subscription();\n  subscriptions: Subscription[] = [];\n  colors: ColorHelper;\n  dims: ViewDimensions;\n  margin = [0, 0, 0, 0];\n  results = [];\n  seriesDomain: any;\n  transform: string;\n  legendOptions: any;\n  isPanning = false;\n  isDragging = false;\n  draggingNode: Node;\n  initialized = false;\n  graph: Graph;\n  graphDims: any = { width: 0, height: 0 };\n  _oldLinks: Edge[] = [];\n  oldNodes: Set<string> = new Set();\n  oldClusters: Set<string> = new Set();\n  transformationMatrix: Matrix = identity();\n  _touchLastX = null;\n  _touchLastY = null;\n\n  constructor(\n    private el: ElementRef,\n    public zone: NgZone,\n    public cd: ChangeDetectorRef,\n    private layoutService: LayoutService\n  ) {\n    super(el, zone, cd);\n  }\n\n  @Input()\n  groupResultsBy: (node: any) => string = node => node.label;\n\n  /**\n   * Get the current zoom level\n   */\n  get zoomLevel() {\n    return this.transformationMatrix.a;\n  }\n\n  /**\n   * Set the current zoom level\n   */\n  @Input('zoomLevel')\n  set zoomLevel(level) {\n    this.zoomTo(Number(level));\n  }\n\n  /**\n   * Get the current `x` position of the graph\n   */\n  get panOffsetX() {\n    return this.transformationMatrix.e;\n  }\n\n  /**\n   * Set the current `x` position of the graph\n   */\n  @Input('panOffsetX')\n  set panOffsetX(x) {\n    this.panTo(Number(x), null);\n  }\n\n  /**\n   * Get the current `y` position of the graph\n   */\n  get panOffsetY() {\n    return this.transformationMatrix.f;\n  }\n\n  /**\n   * Set the current `y` position of the graph\n   */\n  @Input('panOffsetY')\n  set panOffsetY(y) {\n    this.panTo(null, Number(y));\n  }\n\n  /**\n   * Angular lifecycle event\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  ngOnInit(): void {\n    if (this.update$) {\n      this.subscriptions.push(\n        this.update$.subscribe(() => {\n          this.update();\n        })\n      );\n    }\n\n    if (this.center$) {\n      this.subscriptions.push(\n        this.center$.subscribe(() => {\n          this.center();\n        })\n      );\n    }\n    if (this.zoomToFit$) {\n      this.subscriptions.push(\n        this.zoomToFit$.subscribe(() => {\n          this.zoomToFit();\n        })\n      );\n    }\n\n    if (this.panToNode$) {\n      this.subscriptions.push(\n        this.panToNode$.subscribe((nodeId: string) => {\n          this.panToNodeId(nodeId);\n        })\n      );\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { layout, layoutSettings, nodes, clusters, links } = changes;\n    this.setLayout(this.layout);\n    if (layoutSettings) {\n      this.setLayoutSettings(this.layoutSettings);\n    }\n    this.update();\n  }\n\n  setLayout(layout: string | Layout): void {\n    this.initialized = false;\n    if (!layout) {\n      layout = 'dagre';\n    }\n    if (typeof layout === 'string') {\n      this.layout = this.layoutService.getLayout(layout);\n      this.setLayoutSettings(this.layoutSettings);\n    }\n  }\n\n  setLayoutSettings(settings: any): void {\n    if (this.layout && typeof this.layout !== 'string') {\n      this.layout.settings = settings;\n      this.update();\n    }\n  }\n\n  /**\n   * Angular lifecycle event\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    for (const sub of this.subscriptions) {\n      sub.unsubscribe();\n    }\n    this.subscriptions = null;\n  }\n\n  /**\n   * Angular lifecycle event\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    setTimeout(() => this.update());\n  }\n\n  /**\n   * Base class update implementation for the dag graph\n   *\n   * @memberOf GraphComponent\n   */\n  update(): void {\n    super.update();\n    if (!this.curve) {\n      this.curve = shape.curveBundle.beta(1);\n    }\n\n    this.zone.run(() => {\n      this.dims = calculateViewDimensions({\n        width: this.width,\n        height: this.height,\n        margins: this.margin,\n        showLegend: this.legend\n      });\n\n      this.seriesDomain = this.getSeriesDomain();\n      this.setColors();\n      this.legendOptions = this.getLegendOptions();\n\n      this.createGraph();\n      this.updateTransform();\n      this.initialized = true;\n    });\n  }\n\n  /**\n   * Creates the dagre graph engine\n   *\n   * @memberOf GraphComponent\n   */\n  createGraph(): void {\n    this.graphSubscription.unsubscribe();\n    this.graphSubscription = new Subscription();\n    const initializeNode = (n: Node) => {\n      if (!n.meta) {\n        n.meta = {};\n      }\n      if (!n.id) {\n        n.id = id();\n      }\n      if (!n.dimension) {\n        n.dimension = {\n          width: this.nodeWidth ? this.nodeWidth : 30,\n          height: this.nodeHeight ? this.nodeHeight : 30\n        };\n\n        n.meta.forceDimensions = false;\n      } else {\n        n.meta.forceDimensions = n.meta.forceDimensions === undefined ? true : n.meta.forceDimensions;\n      }\n      n.position = {\n        x: 0,\n        y: 0\n      };\n      n.data = n.data ? n.data : {};\n      return n;\n    };\n\n    this.graph = {\n      nodes: this.nodes.length > 0 ? [...this.nodes].map(initializeNode) : [],\n      clusters: this.clusters && this.clusters.length > 0 ? [...this.clusters].map(initializeNode) : [],\n      edges:\n        this.links.length > 0\n          ? [...this.links].map(e => {\n              if (!e.id) {\n                e.id = id();\n              }\n              return e;\n            })\n          : []\n    };\n\n    requestAnimationFrame(() => this.draw());\n  }\n\n  /**\n   * Draws the graph using dagre layouts\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  draw(): void {\n    if (!this.layout || typeof this.layout === 'string') {\n      return;\n    }\n    // Calc view dims for the nodes\n    this.applyNodeDimensions();\n\n    // Recalc the layout\n    const result = this.layout.run(this.graph);\n    const result$ = result instanceof Observable ? result : of(result);\n    this.graphSubscription.add(\n      result$.subscribe(graph => {\n        this.graph = graph;\n        this.tick();\n      })\n    );\n\n    if (this.graph.nodes.length === 0) {\n      return;\n    }\n\n    result$.pipe(first()).subscribe(() => this.applyNodeDimensions());\n  }\n\n  tick() {\n    // Transposes view options to the node\n    const oldNodes: Set<string> = new Set();\n\n    this.graph.nodes.map(n => {\n      n.transform = `translate(${n.position.x - n.dimension.width / 2 || 0}, ${\n        n.position.y - n.dimension.height / 2 || 0\n      })`;\n      if (!n.data) {\n        n.data = {};\n      }\n      n.data.color = this.colors.getColor(this.groupResultsBy(n));\n      oldNodes.add(n.id);\n    });\n\n    const oldClusters: Set<string> = new Set();\n\n    (this.graph.clusters || []).map(n => {\n      n.transform = `translate(${n.position.x - n.dimension.width / 2 || 0}, ${\n        n.position.y - n.dimension.height / 2 || 0\n      })`;\n      if (!n.data) {\n        n.data = {};\n      }\n      n.data.color = this.colors.getColor(this.groupResultsBy(n));\n      oldClusters.add(n.id);\n    });\n\n    // Prevent animations on new nodes\n    setTimeout(() => {\n      this.oldNodes = oldNodes;\n      this.oldClusters = oldClusters;\n    }, 500);\n\n    // Update the labels to the new positions\n    const newLinks = [];\n    for (const edgeLabelId in this.graph.edgeLabels) {\n      const edgeLabel = this.graph.edgeLabels[edgeLabelId];\n\n      const normKey = edgeLabelId.replace(/[^\\w-]*/g, '');\n\n      const isMultigraph =\n        this.layout && typeof this.layout !== 'string' && this.layout.settings && this.layout.settings.multigraph;\n\n      let oldLink = isMultigraph\n        ? this._oldLinks.find(ol => `${ol.source}${ol.target}${ol.id}` === normKey)\n        : this._oldLinks.find(ol => `${ol.source}${ol.target}` === normKey);\n\n      const linkFromGraph = isMultigraph\n        ? this.graph.edges.find(nl => `${nl.source}${nl.target}${nl.id}` === normKey)\n        : this.graph.edges.find(nl => `${nl.source}${nl.target}` === normKey);\n\n      if (!oldLink) {\n        oldLink = linkFromGraph || edgeLabel;\n      } else if (\n        oldLink.data &&\n        linkFromGraph &&\n        linkFromGraph.data &&\n        JSON.stringify(oldLink.data) !== JSON.stringify(linkFromGraph.data)\n      ) {\n        // Compare old link to new link and replace if not equal\n        oldLink.data = linkFromGraph.data;\n      }\n\n      oldLink.oldLine = oldLink.line;\n\n      const points = edgeLabel.points;\n      const line = this.generateLine(points);\n\n      const newLink = Object.assign({}, oldLink);\n      newLink.line = line;\n      newLink.points = points;\n\n      this.updateMidpointOnEdge(newLink, points);\n\n      const textPos = points[Math.floor(points.length / 2)];\n      if (textPos) {\n        newLink.textTransform = `translate(${textPos.x || 0},${textPos.y || 0})`;\n      }\n\n      newLink.textAngle = 0;\n      if (!newLink.oldLine) {\n        newLink.oldLine = newLink.line;\n      }\n\n      this.calcDominantBaseline(newLink);\n      newLinks.push(newLink);\n    }\n\n    this.graph.edges = newLinks;\n\n    // Map the old links for animations\n    if (this.graph.edges) {\n      this._oldLinks = this.graph.edges.map(l => {\n        const newL = Object.assign({}, l);\n        newL.oldLine = l.line;\n        return newL;\n      });\n    }\n\n    // Calculate the height/width total, but only if we have any nodes\n    if (this.graph.nodes && this.graph.nodes.length) {\n      this.graphDims.width = Math.max(...this.graph.nodes.map(n => n.position.x + n.dimension.width));\n      this.graphDims.height = Math.max(...this.graph.nodes.map(n => n.position.y + n.dimension.height));\n    }\n\n    if (this.autoZoom) {\n      this.zoomToFit();\n    }\n\n    if (this.autoCenter) {\n      // Auto-center when rendering\n      this.center();\n    }\n\n    requestAnimationFrame(() => this.redrawLines());\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Measures the node element and applies the dimensions\n   *\n   * @memberOf GraphComponent\n   */\n  applyNodeDimensions(): void {\n    if (this.nodeElements && this.nodeElements.length) {\n      this.nodeElements.map(elem => {\n        const nativeElement = elem.nativeElement;\n        const node = this.graph.nodes.find(n => n.id === nativeElement.id);\n        if (!node) {\n          return;\n        }\n\n        // calculate the height\n        let dims;\n        try {\n          dims = nativeElement.getBBox();\n        } catch (ex) {\n          // Skip drawing if element is not displayed - Firefox would throw an error here\n          return;\n        }\n        if (this.nodeHeight) {\n          node.dimension.height =\n            node.dimension.height && node.meta.forceDimensions ? node.dimension.height : this.nodeHeight;\n        } else {\n          node.dimension.height =\n            node.dimension.height && node.meta.forceDimensions ? node.dimension.height : dims.height;\n        }\n\n        if (this.nodeMaxHeight) {\n          node.dimension.height = Math.max(node.dimension.height, this.nodeMaxHeight);\n        }\n        if (this.nodeMinHeight) {\n          node.dimension.height = Math.min(node.dimension.height, this.nodeMinHeight);\n        }\n\n        if (this.nodeWidth) {\n          node.dimension.width =\n            node.dimension.width && node.meta.forceDimensions ? node.dimension.width : this.nodeWidth;\n        } else {\n          // calculate the width\n          if (nativeElement.getElementsByTagName('text').length) {\n            let maxTextDims;\n            try {\n              for (const textElem of nativeElement.getElementsByTagName('text')) {\n                const currentBBox = textElem.getBBox();\n                if (!maxTextDims) {\n                  maxTextDims = currentBBox;\n                } else {\n                  if (currentBBox.width > maxTextDims.width) {\n                    maxTextDims.width = currentBBox.width;\n                  }\n                  if (currentBBox.height > maxTextDims.height) {\n                    maxTextDims.height = currentBBox.height;\n                  }\n                }\n              }\n            } catch (ex) {\n              // Skip drawing if element is not displayed - Firefox would throw an error here\n              return;\n            }\n            node.dimension.width =\n              node.dimension.width && node.meta.forceDimensions ? node.dimension.width : maxTextDims.width + 20;\n          } else {\n            node.dimension.width =\n              node.dimension.width && node.meta.forceDimensions ? node.dimension.width : dims.width;\n          }\n        }\n\n        if (this.nodeMaxWidth) {\n          node.dimension.width = Math.max(node.dimension.width, this.nodeMaxWidth);\n        }\n        if (this.nodeMinWidth) {\n          node.dimension.width = Math.min(node.dimension.width, this.nodeMinWidth);\n        }\n      });\n    }\n  }\n\n  /**\n   * Redraws the lines when dragged or viewport updated\n   *\n   * @memberOf GraphComponent\n   */\n  redrawLines(_animate = this.animate): void {\n    this.linkElements.map(linkEl => {\n      const edge = this.graph.edges.find(lin => lin.id === linkEl.nativeElement.id);\n\n      if (edge) {\n        const linkSelection = select(linkEl.nativeElement).select('.line');\n        linkSelection\n          .attr('d', edge.oldLine)\n          .transition()\n          .ease(ease.easeSinInOut)\n          .duration(_animate ? 500 : 0)\n          .attr('d', edge.line);\n\n        const textPathSelection = select(this.chartElement.nativeElement).select(`#${edge.id}`);\n        textPathSelection\n          .attr('d', edge.oldTextPath)\n          .transition()\n          .ease(ease.easeSinInOut)\n          .duration(_animate ? 500 : 0)\n          .attr('d', edge.textPath);\n\n        this.updateMidpointOnEdge(edge, edge.points);\n      }\n    });\n  }\n\n  /**\n   * Calculate the text directions / flipping\n   *\n   * @memberOf GraphComponent\n   */\n  calcDominantBaseline(link): void {\n    const firstPoint = link.points[0];\n    const lastPoint = link.points[link.points.length - 1];\n    link.oldTextPath = link.textPath;\n\n    if (lastPoint.x < firstPoint.x) {\n      link.dominantBaseline = 'text-before-edge';\n\n      // reverse text path for when its flipped upside down\n      link.textPath = this.generateLine([...link.points].reverse());\n    } else {\n      link.dominantBaseline = 'text-after-edge';\n      link.textPath = link.line;\n    }\n  }\n\n  /**\n   * Generate the new line path\n   *\n   * @memberOf GraphComponent\n   */\n  generateLine(points: any): any {\n    const lineFunction = shape\n      .line<any>()\n      .x(d => d.x)\n      .y(d => d.y)\n      .curve(this.curve);\n    return lineFunction(points);\n  }\n\n  /**\n   * Zoom was invoked from event\n   *\n   * @memberOf GraphComponent\n   */\n  onZoom($event: WheelEvent, direction): void {\n    if (this.enableTrackpadSupport && !$event.ctrlKey) {\n      this.pan($event.deltaX * -1, $event.deltaY * -1);\n      return;\n    }\n\n    const zoomFactor = 1 + (direction === 'in' ? this.zoomSpeed : -this.zoomSpeed);\n\n    // Check that zooming wouldn't put us out of bounds\n    const newZoomLevel = this.zoomLevel * zoomFactor;\n    if (newZoomLevel <= this.minZoomLevel || newZoomLevel >= this.maxZoomLevel) {\n      return;\n    }\n\n    // Check if zooming is enabled or not\n    if (!this.enableZoom) {\n      return;\n    }\n\n    if (this.panOnZoom === true && $event) {\n      // Absolute mouse X/Y on the screen\n      const mouseX = $event.clientX;\n      const mouseY = $event.clientY;\n\n      // Transform the mouse X/Y into a SVG X/Y\n      const svg = this.chart.nativeElement.querySelector('svg');\n      const svgGroup = svg.querySelector('g.chart');\n\n      const point = svg.createSVGPoint();\n      point.x = mouseX;\n      point.y = mouseY;\n      const svgPoint = point.matrixTransform(svgGroup.getScreenCTM().inverse());\n\n      // Panzoom\n      this.pan(svgPoint.x, svgPoint.y, true);\n      this.zoom(zoomFactor);\n      this.pan(-svgPoint.x, -svgPoint.y, true);\n    } else {\n      this.zoom(zoomFactor);\n    }\n  }\n\n  /**\n   * Pan by x/y\n   *\n   * @param x\n   * @param y\n   */\n  pan(x: number, y: number, ignoreZoomLevel: boolean = false): void {\n    const zoomLevel = ignoreZoomLevel ? 1 : this.zoomLevel;\n    this.transformationMatrix = transform(this.transformationMatrix, translate(x / zoomLevel, y / zoomLevel));\n\n    this.updateTransform();\n  }\n\n  /**\n   * Pan to a fixed x/y\n   *\n   */\n  panTo(x: number, y: number): void {\n    if (x === null || x === undefined || isNaN(x) || y === null || y === undefined || isNaN(y)) {\n      return;\n    }\n\n    const panX = -this.panOffsetX - x * this.zoomLevel + this.dims.width / 2;\n    const panY = -this.panOffsetY - y * this.zoomLevel + this.dims.height / 2;\n\n    this.transformationMatrix = transform(\n      this.transformationMatrix,\n      translate(panX / this.zoomLevel, panY / this.zoomLevel)\n    );\n\n    this.updateTransform();\n  }\n\n  /**\n   * Zoom by a factor\n   *\n   */\n  zoom(factor: number): void {\n    this.transformationMatrix = transform(this.transformationMatrix, scale(factor, factor));\n    this.zoomChange.emit(this.zoomLevel);\n    this.updateTransform();\n  }\n\n  /**\n   * Zoom to a fixed level\n   *\n   */\n  zoomTo(level: number): void {\n    this.transformationMatrix.a = isNaN(level) ? this.transformationMatrix.a : Number(level);\n    this.transformationMatrix.d = isNaN(level) ? this.transformationMatrix.d : Number(level);\n    this.zoomChange.emit(this.zoomLevel);\n    this.updateTransform();\n    this.update();\n  }\n\n  /**\n   * Pan was invoked from event\n   *\n   * @memberOf GraphComponent\n   */\n  onPan(event: MouseEvent): void {\n    this.pan(event.movementX, event.movementY);\n  }\n\n  /**\n   * Drag was invoked from an event\n   *\n   * @memberOf GraphComponent\n   */\n  onDrag(event: MouseEvent): void {\n    if (!this.draggingEnabled) {\n      return;\n    }\n    const node = this.draggingNode;\n    if (this.layout && typeof this.layout !== 'string' && this.layout.onDrag) {\n      this.layout.onDrag(node, event);\n    }\n\n    node.position.x += event.movementX / this.zoomLevel;\n    node.position.y += event.movementY / this.zoomLevel;\n\n    // move the node\n    const x = node.position.x - node.dimension.width / 2;\n    const y = node.position.y - node.dimension.height / 2;\n    node.transform = `translate(${x}, ${y})`;\n\n    for (const link of this.graph.edges) {\n      if (\n        link.target === node.id ||\n        link.source === node.id ||\n        (link.target as any).id === node.id ||\n        (link.source as any).id === node.id\n      ) {\n        if (this.layout && typeof this.layout !== 'string') {\n          const result = this.layout.updateEdge(this.graph, link);\n          const result$ = result instanceof Observable ? result : of(result);\n          this.graphSubscription.add(\n            result$.subscribe(graph => {\n              this.graph = graph;\n              this.redrawEdge(link);\n            })\n          );\n        }\n      }\n    }\n\n    this.redrawLines(false);\n  }\n\n  redrawEdge(edge: Edge) {\n    const line = this.generateLine(edge.points);\n    this.calcDominantBaseline(edge);\n    edge.oldLine = edge.line;\n    edge.line = line;\n  }\n\n  /**\n   * Update the entire view for the new pan position\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  updateTransform(): void {\n    this.transform = toSVG(smoothMatrix(this.transformationMatrix, 100));\n  }\n\n  /**\n   * Node was clicked\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  onClick(event: any): void {\n    this.select.emit(event);\n  }\n\n  /**\n   * Node was focused\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  onActivate(event): void {\n    if (this.activeEntries.indexOf(event) > -1) {\n      return;\n    }\n    this.activeEntries = [event, ...this.activeEntries];\n    this.activate.emit({ value: event, entries: this.activeEntries });\n  }\n\n  /**\n   * Node was defocused\n   *\n   * @memberOf GraphComponent\n   */\n  onDeactivate(event): void {\n    const idx = this.activeEntries.indexOf(event);\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: event, entries: this.activeEntries });\n  }\n\n  /**\n   * Get the domain series for the nodes\n   *\n   * @memberOf GraphComponent\n   */\n  getSeriesDomain(): any[] {\n    return this.nodes\n      .map(d => this.groupResultsBy(d))\n      .reduce((nodes: string[], node): any[] => (nodes.indexOf(node) !== -1 ? nodes : nodes.concat([node])), [])\n      .sort();\n  }\n\n  /**\n   * Tracking for the link\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  trackLinkBy(index: number, link: Edge): any {\n    return link.id;\n  }\n\n  /**\n   * Tracking for the node\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  trackNodeBy(index: number, node: Node): any {\n    return node.id;\n  }\n\n  /**\n   * Sets the colors the nodes\n   *\n   *\n   * @memberOf GraphComponent\n   */\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.seriesDomain, this.customColors);\n  }\n\n  /**\n   * Gets the legend options\n   *\n   * @memberOf GraphComponent\n   */\n  getLegendOptions(): any {\n    return {\n      scaleType: 'ordinal',\n      domain: this.seriesDomain,\n      colors: this.colors\n    };\n  }\n\n  /**\n   * On mouse move event, used for panning and dragging.\n   *\n   * @memberOf GraphComponent\n   */\n  @HostListener('document:mousemove', ['$event'])\n  onMouseMove($event: MouseEvent): void {\n    this.isMouseMoveCalled = true;\n    if (this.isPanning && this.panningEnabled) {\n      this.checkEnum(this.panningAxis, $event);\n    } else if (this.isDragging && this.draggingEnabled) {\n      this.onDrag($event);\n    }\n  }\n\n  @HostListener('document:mousedown', ['$event'])\n  onMouseDown(event: MouseEvent): void {\n    this.isMouseMoveCalled = false;\n  }\n\n  @HostListener('document:click', ['$event'])\n  graphClick(event: MouseEvent): void {\n    if (!this.isMouseMoveCalled) this.clickHandler.emit(event);\n  }\n\n  /**\n   * On touch start event to enable panning.\n   *\n   * @memberOf GraphComponent\n   */\n  onTouchStart(event: any): void {\n    this._touchLastX = event.changedTouches[0].clientX;\n    this._touchLastY = event.changedTouches[0].clientY;\n\n    this.isPanning = true;\n  }\n\n  /**\n   * On touch move event, used for panning.\n   *\n   */\n  @HostListener('document:touchmove', ['$event'])\n  onTouchMove($event: any): void {\n    if (this.isPanning && this.panningEnabled) {\n      const clientX = $event.changedTouches[0].clientX;\n      const clientY = $event.changedTouches[0].clientY;\n      const movementX = clientX - this._touchLastX;\n      const movementY = clientY - this._touchLastY;\n      this._touchLastX = clientX;\n      this._touchLastY = clientY;\n\n      this.pan(movementX, movementY);\n    }\n  }\n\n  /**\n   * On touch end event to disable panning.\n   *\n   * @memberOf GraphComponent\n   */\n  onTouchEnd(event: any) {\n    this.isPanning = false;\n  }\n\n  /**\n   * On mouse up event to disable panning/dragging.\n   *\n   * @memberOf GraphComponent\n   */\n  @HostListener('document:mouseup', ['$event'])\n  onMouseUp(event: MouseEvent): void {\n    this.isDragging = false;\n    this.isPanning = false;\n    if (this.layout && typeof this.layout !== 'string' && this.layout.onDragEnd) {\n      this.layout.onDragEnd(this.draggingNode, event);\n    }\n  }\n\n  /**\n   * On node mouse down to kick off dragging\n   *\n   * @memberOf GraphComponent\n   */\n  onNodeMouseDown(event: MouseEvent, node: any): void {\n    if (!this.draggingEnabled) {\n      return;\n    }\n    this.isDragging = true;\n    this.draggingNode = node;\n\n    if (this.layout && typeof this.layout !== 'string' && this.layout.onDragStart) {\n      this.layout.onDragStart(node, event);\n    }\n  }\n\n  /**\n   * Center the graph in the viewport\n   */\n  center(): void {\n    this.panTo(this.graphDims.width / 2, this.graphDims.height / 2);\n  }\n\n  /**\n   * Zooms to fit the entier graph\n   */\n  zoomToFit(): void {\n    const heightZoom = this.dims.height / this.graphDims.height;\n    const widthZoom = this.dims.width / this.graphDims.width;\n    let zoomLevel = Math.min(heightZoom, widthZoom, 1);\n\n    if (zoomLevel < this.minZoomLevel) {\n      zoomLevel = this.minZoomLevel;\n    }\n\n    if (zoomLevel > this.maxZoomLevel) {\n      zoomLevel = this.maxZoomLevel;\n    }\n\n    if (zoomLevel !== this.zoomLevel) {\n      this.zoomLevel = zoomLevel;\n      this.updateTransform();\n      this.zoomChange.emit(this.zoomLevel);\n    }\n  }\n\n  /**\n   * Pans to the node\n   * @param nodeId\n   */\n  panToNodeId(nodeId: string): void {\n    const node = this.graph.nodes.find(n => n.id === nodeId);\n    if (!node) {\n      return;\n    }\n\n    this.panTo(node.position.x, node.position.y);\n  }\n\n  private checkEnum(key: string, event: MouseEvent) {\n    switch (key) {\n      case PanningAxis.Horizontal:\n        this.pan(event.movementX, 0);\n        break;\n      case PanningAxis.Vertical:\n        this.pan(0, event.movementY);\n        break;\n      default:\n        this.onPan(event);\n        break;\n    }\n  }\n\n  private updateMidpointOnEdge(edge: Edge, points: any): void {\n    if (!edge || !points) {\n      return;\n    }\n\n    if (points.length % 2 === 1) {\n      edge.midPoint = points[Math.floor(points.length / 2)];\n    } else {\n      const _first = points[points.length / 2];\n      const _second = points[points.length / 2 - 1];\n      edge.midPoint = {\n        x: (_first.x + _second.x) / 2,\n        y: (_first.y + _second.y) / 2\n      };\n    }\n  }\n}\n","import { Directive, Output, HostListener, EventEmitter } from '@angular/core';\n\n/**\n * Mousewheel directive\n * https://github.com/SodhanaLibrary/angular2-examples/blob/master/app/mouseWheelDirective/mousewheel.directive.ts\n *\n * @export\n */\n// tslint:disable-next-line: directive-selector\n@Directive({ selector: '[mouseWheel]' })\nexport class MouseWheelDirective {\n  @Output()\n  mouseWheelUp = new EventEmitter();\n  @Output()\n  mouseWheelDown = new EventEmitter();\n\n  @HostListener('mousewheel', ['$event'])\n  onMouseWheelChrome(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('DOMMouseScroll', ['$event'])\n  onMouseWheelFirefox(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('wheel', ['$event'])\n  onWheel(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  @HostListener('onmousewheel', ['$event'])\n  onMouseWheelIE(event: any): void {\n    this.mouseWheelFunc(event);\n  }\n\n  mouseWheelFunc(event: any): void {\n    if (window.event) {\n      event = window.event;\n    }\n\n    const delta: number = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail || event.deltaY || event.deltaX));\n    // Firefox don't have native support for wheel event, as a result delta values are reverse\n    const isWheelMouseUp: boolean = event.wheelDelta ? delta > 0 : delta < 0;\n    const isWheelMouseDown: boolean = event.wheelDelta ? delta < 0 : delta > 0;\n    if (isWheelMouseUp) {\n      this.mouseWheelUp.emit(event);\n    } else if (isWheelMouseDown) {\n      this.mouseWheelDown.emit(event);\n    }\n\n    // for IE\n    event.returnValue = false;\n\n    // for Chrome and Firefox\n    if (event.preventDefault) {\n      event.preventDefault();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { GraphComponent } from './graph.component';\nimport { ChartCommonModule } from '@swimlane/ngx-charts';\nimport { MouseWheelDirective } from './mouse-wheel.directive';\nimport { LayoutService } from './layouts/layout.service';\nexport { GraphComponent };\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [GraphComponent, MouseWheelDirective],\n  exports: [GraphComponent, MouseWheelDirective],\n  providers: [LayoutService]\n})\nexport class GraphModule {}\n","import { NgModule } from '@angular/core';\nimport { GraphModule } from './graph/graph.module';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\n@NgModule({\n  imports: [NgxChartsModule],\n  exports: [GraphModule]\n})\nexport class NgxGraphModule {}\n","/*\n * Public API Surface of ngx-graph\n */\n\nexport * from './lib/ngx-graph.module';\n\nexport * from './lib/models/edge.model';\nexport * from './lib/models/graph.model';\nexport * from './lib/models/layout.model';\nexport * from './lib/models/node.model';\n\nexport * from './lib/graph/graph.component';\nexport * from './lib/graph/graph.module';\n\nexport * from './lib/graph/mouse-wheel.directive';\nexport * from './lib/graph/layouts/colaForceDirected';\nexport * from './lib/graph/layouts/customLayouts';\nexport * from './lib/graph/layouts/d3ForceDirected';\nexport * from './lib/graph/layouts/dagre';\nexport * from './lib/graph/layouts/dagreCluster';\nexport * from './lib/graph/layouts/dagreNodesOnly';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {LayoutService as ɵa} from './lib/graph/layouts/layout.service';"],"names":["dagre.layout","dagre.graphlib","shape.curveBundle","ease.easeSinInOut","shape\n            .line"],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAM,KAAK,GAAG,EAAE,CAAC;AAEjB;;;;SAIgB,EAAE;IAChB,IAAI,KAAK,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAEvF,KAAK,GAAG,MAAI,KAAO,CAAC;;IAGpB,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;QACjB,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;QACpB,OAAO,KAAK,CAAC;KACd;IAED,OAAO,EAAE,EAAE,CAAC;AACd;;ICZY;AAAZ,WAAY,WAAW;IACrB,mCAAoB,CAAA;IACpB,mCAAoB,CAAA;IACpB,mCAAoB,CAAA;IACpB,mCAAoB,CAAA;AACtB,CAAC,EALW,WAAW,KAAX,WAAW,QAKtB;IACW;AAAZ,WAAY,SAAS;IACnB,yBAAY,CAAA;IACZ,2BAAc,CAAA;IACd,4BAAe,CAAA;IACf,6BAAgB,CAAA;IAChB,8BAAiB,CAAA;AACnB,CAAC,EANW,SAAS,KAAT,SAAS,QAMpB;;IAgBD;QACE,oBAAe,GAAkB;YAC/B,WAAW,EAAE,WAAW,CAAC,aAAa;YACtC,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,GAAG;YAChB,WAAW,EAAE,GAAG;YAChB,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,IAAI;SACf,CAAC;QACF,aAAQ,GAAkB,EAAE,CAAC;KAiH9B;IA3GC,yBAAG,GAAH,UAAI,KAAY;QACd,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7BA,MAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE9B,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;gCAEpC,WAAW;YACpB,IAAM,SAAS,GAAG,OAAK,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACtD,IAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,GAAA,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,GAAG;gBACd,CAAC,EAAE,SAAS,CAAC,CAAC;gBACd,CAAC,EAAE,SAAS,CAAC,CAAC;aACf,CAAC;YACF,IAAI,CAAC,SAAS,GAAG;gBACf,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,MAAM,EAAE,SAAS,CAAC,MAAM;aACzB,CAAC;;;QAVJ,KAAK,IAAM,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM;oBAArC,WAAW;SAWrB;QAED,OAAO,KAAK,CAAC;KACd;IAED,gCAAU,GAAV,UAAW,KAAY,EAAE,IAAU;QACjC,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,GAAA,CAAC,CAAC;QAC/D,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,GAAA,CAAC,CAAC;;QAG/D,IAAM,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACpE,IAAM,aAAa,GAAG;YACpB,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;YACxB,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;SACnE,CAAC;QACF,IAAM,WAAW,GAAG;YAClB,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;YACxB,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;SACnE,CAAC;;QAGF,IAAI,CAAC,MAAM,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAC3C,OAAO,KAAK,CAAC;KACd;IAED,sCAAgB,GAAhB,UAAiB,KAAY;;QAC3B,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxE,IAAI,CAAC,UAAU,GAAG,IAAIC,QAAc,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QAE7G,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACvB,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,SAAS,EAAE,QAAQ,CAAC,SAAS;YAC7B,MAAM,EAAE,QAAQ,CAAC,MAAM;YACvB,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;SAC5B,CAAC,CAAC;;QAGH,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC;YAClC,OAAO;;aAEN,CAAC;SACH,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC;YACjC,IAAM,IAAI,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;YAC/B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACb,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC;YACjC,IAAM,OAAO,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;gBACf,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;aACnB;YACD,OAAO,OAAO,CAAC;SAChB,CAAC,CAAC;;YAEH,KAAmB,IAAA,KAAA,SAAA,IAAI,CAAC,UAAU,CAAA,gBAAA,4BAAE;gBAA/B,IAAM,IAAI,WAAA;gBACb,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;iBACjB;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;iBAClB;;gBAGD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;aACxC;;;;;;;;;;;YAGD,KAAmB,IAAA,KAAA,SAAA,IAAI,CAAC,UAAU,CAAA,gBAAA,4BAAE;gBAA/B,IAAM,IAAI,WAAA;gBACb,IAAI,QAAQ,CAAC,UAAU,EAAE;oBACvB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;iBAClE;qBAAM;oBACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;iBACnD;aACF;;;;;;;;;QAED,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IACH,kBAAC;AAAD,CAAC;;;ICtJD;QACE,oBAAe,GAAkB;YAC/B,WAAW,EAAE,WAAW,CAAC,aAAa;YACtC,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,GAAG;YAChB,WAAW,EAAE,GAAG;YAChB,WAAW,EAAE,EAAE;YACf,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,IAAI;SACf,CAAC;QACF,aAAQ,GAAkB,EAAE,CAAC;KAsH9B;IA/GC,gCAAG,GAAH,UAAI,KAAY;QAAhB,iBAwBC;QAvBC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7BD,MAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE9B,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;QAE/C,IAAM,aAAa,GAAG,UAAA,IAAI;YACxB,IAAM,SAAS,GAAG,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClD,6BACK,IAAI,KACP,QAAQ,EAAE;oBACR,CAAC,EAAE,SAAS,CAAC,CAAC;oBACd,CAAC,EAAE,SAAS,CAAC,CAAC;iBACf,EACD,SAAS,EAAE;oBACT,KAAK,EAAE,SAAS,CAAC,KAAK;oBACtB,MAAM,EAAE,SAAS,CAAC,MAAM;iBACzB,IACD;SACH,CAAC;QACF,KAAK,CAAC,QAAQ,GAAG,CAAC,KAAK,CAAC,QAAQ,IAAI,EAAE,EAAE,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3D,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAE7C,OAAO,KAAK,CAAC;KACd;IAED,uCAAU,GAAV,UAAW,KAAY,EAAE,IAAU;QACjC,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,GAAA,CAAC,CAAC;QAC/D,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,GAAA,CAAC,CAAC;;QAG/D,IAAM,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACpE,IAAM,aAAa,GAAG;YACpB,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;YACxB,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;SACnE,CAAC;QACF,IAAM,WAAW,GAAG;YAClB,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;YACxB,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;SACnE,CAAC;;QAGF,IAAI,CAAC,MAAM,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;QAC3C,OAAO,KAAK,CAAC;KACd;IAED,6CAAgB,GAAhB,UAAiB,KAAY;;QAA7B,iBAgEC;QA/DC,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxE,IAAI,CAAC,UAAU,GAAG,IAAIC,QAAc,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QAC7G,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACvB,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,SAAS,EAAE,QAAQ,CAAC,SAAS;YAC7B,MAAM,EAAE,QAAQ,CAAC,MAAM;YACvB,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;SAC5B,CAAC,CAAC;;QAGH,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC;YAClC,OAAO;;aAEN,CAAC;SACH,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,CAAO;YACxC,IAAM,IAAI,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;YAC/B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACb,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,QAAQ,IAAI,EAAE,CAAC;QAE1C,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC;YACjC,IAAM,OAAO,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;gBACf,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;aACnB;YACD,OAAO,OAAO,CAAC;SAChB,CAAC,CAAC;;YAEH,KAAmB,IAAA,KAAA,SAAA,IAAI,CAAC,UAAU,CAAA,gBAAA,4BAAE;gBAA/B,IAAM,IAAI,WAAA;gBACb,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;aACxC;;;;;;;;;gCAEU,OAAO;YAChB,OAAK,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YAC7C,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,UAAA,WAAW;gBACtC,KAAI,CAAC,UAAU,CAAC,SAAS,CAAC,WAAW,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC;aACpD,CAAC,CAAC;;;;YAJL,KAAsB,IAAA,KAAA,SAAA,IAAI,CAAC,aAAa,CAAA,gBAAA;gBAAnC,IAAM,OAAO,WAAA;wBAAP,OAAO;aAKjB;;;;;;;;;;;YAGD,KAAmB,IAAA,KAAA,SAAA,IAAI,CAAC,UAAU,CAAA,gBAAA,4BAAE;gBAA/B,IAAM,IAAI,WAAA;gBACb,IAAI,QAAQ,CAAC,UAAU,EAAE;oBACvB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;iBAClE;qBAAM;oBACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;iBACnD;aACF;;;;;;;;;QAED,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IACH,yBAAC;AAAD,CAAC;;AC9HD,IAAM,iBAAiB,GAAG,MAAM,CAAC;AACjC,IAAM,UAAU,GAAG,MAAM,CAAC;AAC1B,IAAM,cAAc,GAAG,MAAM,CAAC;;IAE9B;QACE,oBAAe,GAA2B;YACxC,WAAW,EAAE,WAAW,CAAC,aAAa;YACtC,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,GAAG;YAChB,WAAW,EAAE,GAAG;YAChB,WAAW,EAAE,EAAE;YACf,aAAa,EAAE,EAAE;YACjB,UAAU,EAAE,IAAI;YAChB,QAAQ,EAAE,IAAI;SACf,CAAC;QACF,aAAQ,GAA2B,EAAE,CAAC;KAsIvC;IAhIC,kCAAG,GAAH,UAAI,KAAY;;QACd,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7BD,MAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE9B,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC;gCAEpC,WAAW;YACpB,IAAM,SAAS,GAAG,OAAK,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACtD,IAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,SAAS,CAAC,EAAE,GAAA,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,GAAG;gBACd,CAAC,EAAE,SAAS,CAAC,CAAC;gBACd,CAAC,EAAE,SAAS,CAAC,CAAC;aACf,CAAC;YACF,IAAI,CAAC,SAAS,GAAG;gBACf,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,MAAM,EAAE,SAAS,CAAC,MAAM;aACzB,CAAC;;;QAVJ,KAAK,IAAM,WAAW,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM;oBAArC,WAAW;SAWrB;;YACD,KAAmB,IAAA,KAAA,SAAA,KAAK,CAAC,KAAK,CAAA,gBAAA,4BAAE;gBAA3B,IAAM,IAAI,WAAA;gBACb,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;aAC9B;;;;;;;;;QAED,OAAO,KAAK,CAAC;KACd;IAED,yCAAU,GAAV,UAAW,KAAY,EAAE,IAAU;;QACjC,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,GAAA,CAAC,CAAC;QAC/D,IAAM,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,MAAM,GAAA,CAAC,CAAC;QAC/D,IAAM,QAAQ,GAAc,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC;QACjH,IAAM,SAAS,GAAc,QAAQ,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;QAC1D,IAAM,aAAa,GAAG,QAAQ,KAAK,GAAG,GAAG,QAAQ,GAAG,OAAO,CAAC;;QAE5D,IAAM,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QACpF,IAAM,aAAa;YACjB,GAAC,SAAS,IAAG,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC;YAC3C,GAAC,QAAQ,IAAG,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;eAC5F,CAAC;QACF,IAAM,WAAW;YACf,GAAC,SAAS,IAAG,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC;YAC3C,GAAC,QAAQ,IAAG,UAAU,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;eAC5F,CAAC;QAEF,IAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,IAAI,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC;;QAExF,IAAI,CAAC,MAAM,GAAG;YACZ,aAAa;;gBAEX,GAAC,SAAS,IAAG,aAAa,CAAC,SAAS,CAAC;gBACrC,GAAC,QAAQ,IAAG,aAAa,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,aAAa;;;gBAGzD,GAAC,SAAS,IAAG,WAAW,CAAC,SAAS,CAAC;gBACnC,GAAC,QAAQ,IAAG,WAAW,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,aAAa;;YAEzD,WAAW;SACZ,CAAC;QACF,IAAM,WAAW,GAAG,KAAG,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,IAAI,CAAC,MAAM,GAAG,cAAc,GAAG,iBAAmB,CAAC;QACzG,IAAM,iBAAiB,GAAG,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACxD,IAAI,iBAAiB,EAAE;YACrB,iBAAiB,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;SACxC;QACD,OAAO,KAAK,CAAC;KACd;IAED,+CAAgB,GAAhB,UAAiB,KAAY;;QAC3B,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxE,IAAI,CAAC,UAAU,GAAG,IAAIC,QAAc,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,UAAU,EAAE,QAAQ,CAAC,UAAU,EAAE,CAAC,CAAC;QAC7G,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;YACvB,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,QAAQ,CAAC,OAAO;YACzB,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,OAAO,EAAE,QAAQ,CAAC,WAAW;YAC7B,KAAK,EAAE,QAAQ,CAAC,KAAK;YACrB,SAAS,EAAE,QAAQ,CAAC,SAAS;YAC7B,MAAM,EAAE,QAAQ,CAAC,MAAM;YACvB,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,QAAQ,EAAE,QAAQ,CAAC,QAAQ;SAC5B,CAAC,CAAC;;QAGH,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC;YAClC,OAAO;;aAEN,CAAC;SACH,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC;YACjC,IAAM,IAAI,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YACvC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;YAC/B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC;YACjC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC;SACb,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC;YACjC,IAAM,OAAO,GAAQ,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,EAAE,EAAE;gBACf,OAAO,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;aACnB;YACD,OAAO,OAAO,CAAC;SAChB,CAAC,CAAC;;YAEH,KAAmB,IAAA,KAAA,SAAA,IAAI,CAAC,UAAU,CAAA,gBAAA,4BAAE;gBAA/B,IAAM,IAAI,WAAA;gBACb,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;oBACf,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;iBACjB;gBACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;oBAChB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;iBAClB;;gBAGD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;aACxC;;;;;;;;;;;YAGD,KAAmB,IAAA,KAAA,SAAA,IAAI,CAAC,UAAU,CAAA,gBAAA,4BAAE;gBAA/B,IAAM,IAAI,WAAA;gBACb,IAAI,QAAQ,CAAC,UAAU,EAAE;oBACvB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;iBAClE;qBAAM;oBACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;iBACnD;aACF;;;;;;;;;QAED,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IACH,2BAAC;AAAD,CAAC;;SC9He,QAAQ,CAAC,SAA0B;IACjD,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;QACjC,OAAO;YACL,EAAE,EAAE,SAAS;YACb,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;SACL,CAAC;KACH;IACD,OAAO,SAAS,CAAC;AACnB,CAAC;;IAED;QACE,oBAAe,GAA4B;YACzC,KAAK,EAAE,eAAe,EAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,aAAa,EAAE,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;YAC/G,SAAS,EAAE,SAAS,EAAY;iBAC7B,EAAE,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,EAAE,GAAA,CAAC;iBACnB,QAAQ,CAAC,cAAM,OAAA,GAAG,GAAA,CAAC;SACvB,CAAC;QACF,aAAQ,GAA4B,EAAE,CAAC;QAKvC,iBAAY,GAAmB,IAAI,OAAO,EAAE,CAAC;KAwH9C;IApHC,mCAAG,GAAH,UAAI,KAAY;QAAhB,iBAyBC;QAxBC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,OAAO,GAAG;YACb,KAAK,EAAE,SAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,qBAAM,CAAC,KAAG,CAAC,CAAQ;YAC7D,KAAK,EAAE,SAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,qBAAM,CAAC,KAAG,CAAC,CAAQ;SAC9D,CAAC;QACF,IAAI,CAAC,WAAW,GAAG;YACjB,KAAK,EAAE,EAAE;YACT,KAAK,EAAE,EAAE;YACT,UAAU,EAAE,EAAE;SACf,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvE,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,KAAK;iBAChB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;iBACzB,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAChE,KAAK,CAAC,GAAG,CAAC;iBACV,OAAO,EAAE;iBACT,EAAE,CAAC,MAAM,EAAE;gBACV,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;aACjE,CAAC,CAAC;SACN;QAED,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KACzC;IAED,0CAAU,GAAV,UAAW,KAAY,EAAE,IAAU;QAAnC,iBAcC;QAbC,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxE,IAAI,QAAQ,CAAC,KAAK,EAAE;YAClB,QAAQ,CAAC,KAAK;iBACX,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;iBACzB,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;iBAC3D,KAAK,CAAC,GAAG,CAAC;iBACV,OAAO,EAAE;iBACT,EAAE,CAAC,MAAM,EAAE;gBACV,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,oBAAoB,CAAC,KAAI,CAAC,OAAO,CAAC,CAAC,CAAC;aACjE,CAAC,CAAC;SACN;QAED,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KACzC;IAED,oDAAoB,GAApB,UAAqB,OAAgB;QACnC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,IAAgB,IAAK,8BACjE,IAAI,KACP,EAAE,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,EACnB,QAAQ,EAAE;gBACR,CAAC,EAAE,IAAI,CAAC,CAAC;gBACT,CAAC,EAAE,IAAI,CAAC,CAAC;aACV,EACD,SAAS,EAAE;gBACT,KAAK,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,EAAE;gBACrD,MAAM,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,EAAE;aACxD,EACD,SAAS,EAAE,gBAAa,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,YACxF,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,OAClE,OACH,CAAC,CAAC;QAEJ,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,8BACnD,IAAI,KACP,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAChC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAChC,MAAM,EAAE;gBACN;oBACE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC1B,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;iBAC3B;gBACD;oBACE,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC1B,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;iBAC3B;aACF,OACD,CAAC,CAAC;QAEJ,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACrD,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,2CAAW,GAAX,UAAY,YAAkB,EAAE,MAAkB;QAChD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;QAC/C,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,EAAE,KAAK,YAAY,CAAC,EAAE,GAAA,CAAC,CAAC;QAC9E,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QACD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC;QACpE,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;KAC3C;IAED,sCAAM,GAAN,UAAO,YAAkB,EAAE,MAAkB;QAC3C,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO;SACR;QACD,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,EAAE,KAAK,YAAY,CAAC,EAAE,GAAA,CAAC,CAAC;QAC9E,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QACD,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;QAC1C,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;KAC3C;IAED,yCAAS,GAAT,UAAU,YAAkB,EAAE,MAAkB;QAC9C,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO;SACR;QACD,IAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,MAAM,IAAI,OAAA,MAAM,CAAC,EAAE,KAAK,YAAY,CAAC,EAAE,GAAA,CAAC,CAAC;QAC9E,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QAED,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;QACpB,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC;KACrB;IACH,4BAAC;AAAD,CAAC;;SC3Je,MAAM,CAAC,KAAkB,EAAE,OAA2B;IACpE,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;QAC/B,OAAO,KAAK,CAAC,OAAO,CAAC,CAAC;KACvB;IACD,OAAO,OAAO,CAAC;AACjB,CAAC;;IAED;QACE,oBAAe,GAA8B;YAC3C,KAAK,EAAE,SAAS,gCACX,UAAU,GACV,OAAO,GACP,OAAO,EACV;iBACC,YAAY,CAAC,GAAG,CAAC;iBACjB,aAAa,CAAC,IAAI,CAAC;YACtB,cAAc,EAAE;gBACd,KAAK,EAAE,GAAG;gBACV,MAAM,EAAE,GAAG;gBACX,OAAO,EAAE,CAAC;aACX;SACF,CAAC;QACF,aAAQ,GAA8B,EAAE,CAAC;QAKzC,iBAAY,GAAmB,IAAI,OAAO,EAAE,CAAC;KAkN9C;IA9MC,qCAAG,GAAH,UAAI,KAAY;QAAhB,iBAwFC;QAvFC,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE,CAAC;SAC/B;QACD,IAAI,CAAC,aAAa,GAAG;YACnB,KAAK,EAAE,SACF,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,8BAC7B,CAAC,KACJ,KAAK,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,EAC3C,MAAM,EAAE,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE,OAC7C,CAAC,CACG;YACR,MAAM,WACD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,CAC7B,UAAC,OAAO,IAAY,QAAC;gBACnB,OAAO,EAAE,CAAC;gBACV,MAAM,EAAE,OAAO,CAAC,YAAY;qBACzB,GAAG,CAAC,UAAA,MAAM,IAAI,OAAK,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,EAAE,KAAK,MAAM,GAAA,CAAC,GAAA,CAAC;qBAClF,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,CAAC,GAAA,CAAC;gBACtB,MAAM,EAAE,OAAO,CAAC,YAAY;qBACzB,GAAG,CAAC,UAAA,MAAM,IAAI,OAAK,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,EAAE,KAAK,MAAM,GAAA,CAAC,GAAA,CAAC;qBAC/E,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,IAAI,CAAC,GAAA,CAAC;aACvB,IAAC,CACH,CACF;YACD,KAAK,EAAE,SACF,IAAI,CAAC,UAAU,CAAC,KAAK;iBACrB,GAAG,CAAC,UAAA,CAAC;gBACJ,IAAM,eAAe,GAAG,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE,GAAA,CAAC,CAAC;gBACtF,IAAM,eAAe,GAAG,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE,GAAA,CAAC,CAAC;gBACtF,IAAI,eAAe,KAAK,CAAC,CAAC,IAAI,eAAe,KAAK,CAAC,CAAC,EAAE;oBACpD,OAAO,SAAS,CAAC;iBAClB;gBACD,6BACK,CAAC,KACJ,MAAM,EAAE,eAAe,EACvB,MAAM,EAAE,eAAe,IACvB;aACH,CAAC;iBACD,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,GAAA,CAAC,CACb;YACR,UAAU,WACL,IAAI,CAAC,UAAU,CAAC,KAAK;iBACrB,GAAG,CAAC,UAAA,CAAC;gBACJ,IAAM,eAAe,GAAG,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE,GAAA,CAAC,CAAC;gBACtF,IAAM,eAAe,GAAG,KAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE,GAAA,CAAC,CAAC;gBACtF,IAAI,eAAe,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC,EAAE;oBAChD,OAAO,SAAS,CAAC;iBAClB;gBACD,OAAO,CAAC,CAAC;aACV,CAAC;iBACD,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,GAAA,CAAC,CACpB;SACF,CAAC;QACF,IAAI,CAAC,WAAW,GAAG;YACjB,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,EAAE;YACT,UAAU,EAAE,EAAE;SACf,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvE,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE;YACvB,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK;iBACtC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;iBAC/B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;iBACjC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;iBAC/B,KAAK,CAAC,GAAG,CAAC;iBACV,EAAE,CAAC,MAAM,EAAE;gBACV,IAAI,KAAI,CAAC,QAAQ,CAAC,cAAc,EAAE;oBAChC,KAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;iBAClD;gBACD,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAI,CAAC,0BAA0B,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC,CAAC;aAC7E,CAAC,CAAC;YACL,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE;gBAChC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;oBAC7C,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,KAAK;oBAClC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM;iBACpC,CAAC,CAAC;aACJ;YACD,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE;gBACjC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aAC1E;YACD,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SAC7B;QAED,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KACzC;IAED,4CAAU,GAAV,UAAW,KAAY,EAAE,IAAU;QACjC,IAAM,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxE,IAAI,QAAQ,CAAC,KAAK,EAAE;YAClB,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SACxB;QAED,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KACzC;IAED,4DAA0B,GAA1B,UAA2B,aAAkB;QAA7C,iBAqEC;QApEC,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,8BACpD,IAAI,KACP,EAAE,EAAE,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,EACnB,QAAQ,EAAE;gBACR,CAAC,EAAE,IAAI,CAAC,CAAC;gBACT,CAAC,EAAE,IAAI,CAAC,CAAC;aACV,EACD,SAAS,EAAE;gBACT,KAAK,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,EAAE;gBACrD,MAAM,EAAE,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,EAAE;aACxD,EACD,SAAS,EAAE,gBAAa,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,YACxF,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,OAClE,OACH,CAAC,CAAC;QAEJ,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK;aACzC,GAAG,CAAC,UAAA,IAAI;YACP,IAAM,MAAM,GAAQ,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7D,IAAM,MAAM,GAAQ,MAAM,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAC7D,6BACK,IAAI,KACP,MAAM,EAAE,MAAM,CAAC,EAAE,EACjB,MAAM,EAAE,MAAM,CAAC,EAAE,EACjB,MAAM,EAAE;oBACL,MAAM,CAAC,MAAoB,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;oBACnF,MAAM,CAAC,MAAoB,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;iBACrF,IACD;SACH,CAAC;aACD,MAAM,CACL,aAAa,CAAC,UAAU,CAAC,GAAG,CAAC,UAAA,SAAS;YACpC,IAAM,UAAU,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,SAAS,IAAI,OAAC,SAAiB,CAAC,EAAE,KAAK,SAAS,CAAC,MAAM,GAAA,CAAC,CAAC;YACrG,IAAM,UAAU,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,SAAS,IAAI,OAAC,SAAiB,CAAC,EAAE,KAAK,SAAS,CAAC,MAAM,GAAA,CAAC,CAAC;YACrG,IAAM,MAAM,GACV,UAAU,IAAI,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,UAAU,IAAI,OAAC,UAAkB,CAAC,EAAE,KAAK,SAAS,CAAC,MAAM,GAAA,CAAC,CAAC;YACrG,IAAM,MAAM,GACV,UAAU,IAAI,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,UAAA,UAAU,IAAI,OAAC,UAAkB,CAAC,EAAE,KAAK,SAAS,CAAC,MAAM,GAAA,CAAC,CAAC;YACrG,6BACK,SAAS,KACZ,MAAM,EAAE,MAAM,CAAC,EAAE,EACjB,MAAM,EAAE,MAAM,CAAC,EAAE,EACjB,MAAM,EAAE;oBACL,MAAM,CAAC,MAAoB,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;oBACnF,MAAM,CAAC,MAAoB,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;iBACrF,IACD;SACH,CAAC,CACH,CAAC;QAEJ,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,aAAa,CAAC,MAAM,CAAC,GAAG,CAClD,UAAC,KAAK,EAAE,KAAK;YACX,IAAM,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACnD,6BACK,UAAU,KACb,SAAS,EAAE;oBACT,KAAK,EAAE,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE;oBAC/C,MAAM,EAAE,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,EAAE;iBAClD,EACD,QAAQ,EAAE;oBACR,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC;oBAC/D,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,CAAC;iBACjE,IACD;SACH,CACF,CAAC;QACF,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QACrD,OAAO,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,6CAAW,GAAX,UAAY,YAAkB,EAAE,MAAkB;QAChD,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,EAAE,KAAK,YAAY,CAAC,EAAE,GAAA,CAAC,CAAC;QAClG,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QACD,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC;QACpE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;KAC7B;IAED,wCAAM,GAAN,UAAO,YAAkB,EAAE,MAAkB;QAC3C,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO;SACR;QACD,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,EAAE,KAAK,YAAY,CAAC,EAAE,GAAA,CAAC,CAAC;QAClG,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QACD,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;QACzC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC;KAC1C;IAED,2CAAS,GAAT,UAAU,YAAkB,EAAE,MAAkB;QAC9C,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO;SACR;QACD,IAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,UAAA,SAAS,IAAI,OAAA,SAAS,CAAC,EAAE,KAAK,YAAY,CAAC,EAAE,GAAA,CAAC,CAAC;QAClG,IAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QAED,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;KAChB;IACH,8BAAC;AAAD,CAAC;;AC5PD,IAAM,OAAO,GAAG;IACd,KAAK,EAAE,WAAW;IAClB,YAAY,EAAE,kBAAkB;IAChC,cAAc,EAAE,oBAAoB;IACpC,eAAe,EAAE,qBAAqB;IACtC,iBAAiB,EAAE,uBAAuB;CAC3C,CAAC;;IAGF;KAQC;IAPC,iCAAS,GAAT,UAAU,IAAY;QACpB,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE;YACjB,OAAO,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC;SAC5B;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,0BAAwB,IAAI,MAAG,CAAC,CAAC;SAClD;KACF;IAPU,aAAa;QADzB,UAAU,EAAE;OACA,aAAa,CAQzB;IAAD,oBAAC;CARD;;ACjBA,IAAY,WAIX;AAJD,WAAY,WAAW;IACrB,4BAAa,CAAA;IACb,wCAAyB,CAAA;IACzB,oCAAqB,CAAA;AACvB,CAAC,EAJW,WAAW,KAAX,WAAW;;;ICiEa,kCAAkB;IAsEpD,wBACU,EAAc,EACf,IAAY,EACZ,EAAqB,EACpB,aAA4B;QAJtC,YAME,kBAAM,EAAE,EAAE,IAAI,EAAE,EAAE,CAAC,SACpB;QANS,QAAE,GAAF,EAAE,CAAY;QACf,UAAI,GAAJ,IAAI,CAAQ;QACZ,QAAE,GAAF,EAAE,CAAmB;QACpB,mBAAa,GAAb,aAAa,CAAe;QAzE7B,YAAM,GAAY,KAAK,CAAC;QACxB,WAAK,GAAW,EAAE,CAAC;QACnB,cAAQ,GAAkB,EAAE,CAAC;QAC7B,WAAK,GAAW,EAAE,CAAC;QACnB,mBAAa,GAAU,EAAE,CAAC;QAE1B,qBAAe,GAAG,IAAI,CAAC;QAOvB,oBAAc,GAAY,IAAI,CAAC;QAC/B,iBAAW,GAAgB,WAAW,CAAC,IAAI,CAAC;QAC5C,gBAAU,GAAG,IAAI,CAAC;QAClB,eAAS,GAAG,GAAG,CAAC;QAChB,kBAAY,GAAG,GAAG,CAAC;QACnB,kBAAY,GAAG,GAAG,CAAC;QACnB,cAAQ,GAAG,KAAK,CAAC;QACjB,eAAS,GAAG,IAAI,CAAC;QACjB,aAAO,GAAI,KAAK,CAAC;QACjB,gBAAU,GAAG,KAAK,CAAC;QAOnB,2BAAqB,GAAG,KAAK,CAAC;QAE7B,cAAQ,GAAsB,IAAI,YAAY,EAAE,CAAC;QACjD,gBAAU,GAAsB,IAAI,YAAY,EAAE,CAAC;QACnD,gBAAU,GAAyB,IAAI,YAAY,EAAE,CAAC;QACtD,kBAAY,GAA6B,IAAI,YAAY,EAAE,CAAC;QAW9D,uBAAiB,GAAY,KAAK,CAAC;QAE3C,uBAAiB,GAAiB,IAAI,YAAY,EAAE,CAAC;QACrD,mBAAa,GAAmB,EAAE,CAAC;QAGnC,YAAM,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACtB,aAAO,GAAG,EAAE,CAAC;QAIb,eAAS,GAAG,KAAK,CAAC;QAClB,gBAAU,GAAG,KAAK,CAAC;QAEnB,iBAAW,GAAG,KAAK,CAAC;QAEpB,eAAS,GAAQ,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,CAAC;QACzC,eAAS,GAAW,EAAE,CAAC;QACvB,cAAQ,GAAgB,IAAI,GAAG,EAAE,CAAC;QAClC,iBAAW,GAAgB,IAAI,GAAG,EAAE,CAAC;QACrC,0BAAoB,GAAW,QAAQ,EAAE,CAAC;QAC1C,iBAAW,GAAG,IAAI,CAAC;QACnB,iBAAW,GAAG,IAAI,CAAC;QAYnB,oBAAc,GAA0B,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAK,GAAA,CAAC;;KAH1D;IAQD,sBAAI,qCAAS;;;;aAAb;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;SACpC;;;;aAMD,UAAc,KAAK;YACjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;SAC5B;;;OARA;IAaD,sBAAI,sCAAU;;;;aAAd;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;SACpC;;;;aAMD,UAAe,CAAC;YACd,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SAC7B;;;OARA;IAaD,sBAAI,sCAAU;;;;aAAd;YACE,OAAO,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;SACpC;;;;aAMD,UAAe,CAAC;YACd,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7B;;;OARA;;;;;;;IAgBD,iCAAQ,GAAR;QAAA,iBA+BC;QA9BC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;gBACrB,KAAI,CAAC,MAAM,EAAE,CAAC;aACf,CAAC,CACH,CAAC;SACH;QAED,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC;gBACrB,KAAI,CAAC,MAAM,EAAE,CAAC;aACf,CAAC,CACH,CAAC;SACH;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC;gBACxB,KAAI,CAAC,SAAS,EAAE,CAAC;aAClB,CAAC,CACH,CAAC;SACH;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,aAAa,CAAC,IAAI,CACrB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,UAAC,MAAc;gBACvC,KAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;aAC1B,CAAC,CACH,CAAC;SACH;KACF;IAED,oCAAW,GAAX,UAAY,OAAsB;QACxB,IAAA,uBAAM,EAAE,uCAAc,EAAE,qBAAK,EAAE,2BAAQ,EAAE,qBAAK,CAAa;QACnE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5B,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC7C;QACD,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;IAED,kCAAS,GAAT,UAAU,MAAuB;QAC/B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,GAAG,OAAO,CAAC;SAClB;QACD,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;YAC9B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;YACnD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC7C;KACF;IAED,0CAAiB,GAAjB,UAAkB,QAAa;QAC7B,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;YAClD,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAChC,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;KACF;;;;;;;IAQD,oCAAW,GAAX;;QACE,iBAAM,WAAW,WAAE,CAAC;;YACpB,KAAkB,IAAA,KAAA,SAAA,IAAI,CAAC,aAAa,CAAA,gBAAA,4BAAE;gBAAjC,IAAM,GAAG,WAAA;gBACZ,GAAG,CAAC,WAAW,EAAE,CAAC;aACnB;;;;;;;;;QACD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;KAC3B;;;;;;;IAQD,wCAAe,GAAf;QAAA,iBAGC;QAFC,iBAAM,eAAe,WAAE,CAAC;QACxB,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,EAAE,GAAA,CAAC,CAAC;KACjC;;;;;;IAOD,+BAAM,GAAN;QAAA,iBAsBC;QArBC,iBAAM,MAAM,WAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,KAAK,GAAGC,WAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACxC;QAED,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACZ,KAAI,CAAC,IAAI,GAAG,uBAAuB,CAAC;gBAClC,KAAK,EAAE,KAAI,CAAC,KAAK;gBACjB,MAAM,EAAE,KAAI,CAAC,MAAM;gBACnB,OAAO,EAAE,KAAI,CAAC,MAAM;gBACpB,UAAU,EAAE,KAAI,CAAC,MAAM;aACxB,CAAC,CAAC;YAEH,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,eAAe,EAAE,CAAC;YAC3C,KAAI,CAAC,SAAS,EAAE,CAAC;YACjB,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,gBAAgB,EAAE,CAAC;YAE7C,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAI,CAAC,eAAe,EAAE,CAAC;YACvB,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;SACzB,CAAC,CAAC;KACJ;;;;;;IAOD,oCAAW,GAAX;QAAA,iBA2CC;QA1CC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;QACrC,IAAI,CAAC,iBAAiB,GAAG,IAAI,YAAY,EAAE,CAAC;QAC5C,IAAM,cAAc,GAAG,UAAC,CAAO;YAC7B,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;gBACX,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;aACb;YACD,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;gBACT,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;aACb;YACD,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE;gBAChB,CAAC,CAAC,SAAS,GAAG;oBACZ,KAAK,EAAE,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,GAAG,EAAE;oBAC3C,MAAM,EAAE,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,GAAG,EAAE;iBAC/C,CAAC;gBAEF,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;aAChC;iBAAM;gBACL,CAAC,CAAC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC,IAAI,CAAC,eAAe,KAAK,SAAS,GAAG,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC;aAC/F;YACD,CAAC,CAAC,QAAQ,GAAG;gBACX,CAAC,EAAE,CAAC;gBACJ,CAAC,EAAE,CAAC;aACL,CAAC;YACF,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;YAC9B,OAAO,CAAC,CAAC;SACV,CAAC;QAEF,IAAI,CAAC,KAAK,GAAG;YACX,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,GAAG,SAAI,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,cAAc,CAAC,GAAG,EAAE;YACvE,QAAQ,EAAE,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,GAAG,SAAI,IAAI,CAAC,QAAQ,EAAE,GAAG,CAAC,cAAc,CAAC,GAAG,EAAE;YACjG,KAAK,EACH,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;kBACjB,SAAI,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,UAAA,CAAC;oBACnB,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE;wBACT,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC;qBACb;oBACD,OAAO,CAAC,CAAC;iBACV,CAAC;kBACF,EAAE;SACT,CAAC;QAEF,qBAAqB,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,GAAA,CAAC,CAAC;KAC1C;;;;;;;IAQD,6BAAI,GAAJ;QAAA,iBAsBC;QArBC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;YACnD,OAAO;SACR;;QAED,IAAI,CAAC,mBAAmB,EAAE,CAAC;;QAG3B,IAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,IAAM,OAAO,GAAG,MAAM,YAAY,UAAU,GAAG,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;QACnE,IAAI,CAAC,iBAAiB,CAAC,GAAG,CACxB,OAAO,CAAC,SAAS,CAAC,UAAA,KAAK;YACrB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,KAAI,CAAC,IAAI,EAAE,CAAC;SACb,CAAC,CACH,CAAC;QAEF,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;YACjC,OAAO;SACR;QAED,OAAO,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,mBAAmB,EAAE,GAAA,CAAC,CAAC;KACnE;IAED,6BAAI,GAAJ;QAAA,iBAqHC;;QAnHC,IAAM,QAAQ,GAAgB,IAAI,GAAG,EAAE,CAAC;QAExC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC;YACpB,CAAC,CAAC,SAAS,GAAG,gBAAa,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,YAClE,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OACzC,CAAC;YACJ,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;gBACX,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;aACb;YACD,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACpB,CAAC,CAAC;QAEH,IAAM,WAAW,GAAgB,IAAI,GAAG,EAAE,CAAC;QAE3C,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,IAAI,EAAE,EAAE,GAAG,CAAC,UAAA,CAAC;YAC/B,CAAC,CAAC,SAAS,GAAG,gBAAa,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,YAClE,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,OACzC,CAAC;YACJ,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE;gBACX,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;aACb;YACD,CAAC,CAAC,IAAI,CAAC,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5D,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SACvB,CAAC,CAAC;;QAGH,UAAU,CAAC;YACT,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,KAAI,CAAC,WAAW,GAAG,WAAW,CAAC;SAChC,EAAE,GAAG,CAAC,CAAC;;QAGR,IAAM,QAAQ,GAAG,EAAE,CAAC;gCACT,WAAW;YACpB,IAAM,SAAS,GAAG,OAAK,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YAErD,IAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;YAEpD,IAAM,YAAY,GAChB,OAAK,MAAM,IAAI,OAAO,OAAK,MAAM,KAAK,QAAQ,IAAI,OAAK,MAAM,CAAC,QAAQ,IAAI,OAAK,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;YAE5G,IAAI,OAAO,GAAG,YAAY;kBACtB,OAAK,SAAS,CAAC,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,KAAG,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,EAAI,KAAK,OAAO,GAAA,CAAC;kBACzE,OAAK,SAAS,CAAC,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,KAAG,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,MAAQ,KAAK,OAAO,GAAA,CAAC,CAAC;YAEtE,IAAM,aAAa,GAAG,YAAY;kBAC9B,OAAK,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,KAAG,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,EAAI,KAAK,OAAO,GAAA,CAAC;kBAC3E,OAAK,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,EAAE,IAAI,OAAA,KAAG,EAAE,CAAC,MAAM,GAAG,EAAE,CAAC,MAAQ,KAAK,OAAO,GAAA,CAAC,CAAC;YAExE,IAAI,CAAC,OAAO,EAAE;gBACZ,OAAO,GAAG,aAAa,IAAI,SAAS,CAAC;aACtC;iBAAM,IACL,OAAO,CAAC,IAAI;gBACZ,aAAa;gBACb,aAAa,CAAC,IAAI;gBAClB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,EACnE;;gBAEA,OAAO,CAAC,IAAI,GAAG,aAAa,CAAC,IAAI,CAAC;aACnC;YAED,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;YAE/B,IAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;YAChC,IAAM,IAAI,GAAG,OAAK,YAAY,CAAC,MAAM,CAAC,CAAC;YAEvC,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;YAC3C,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;YACpB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;YAExB,OAAK,oBAAoB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAE3C,IAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACtD,IAAI,OAAO,EAAE;gBACX,OAAO,CAAC,aAAa,GAAG,gBAAa,OAAO,CAAC,CAAC,IAAI,CAAC,WAAI,OAAO,CAAC,CAAC,IAAI,CAAC,OAAG,CAAC;aAC1E;YAED,OAAO,CAAC,SAAS,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;gBACpB,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC;aAChC;YAED,OAAK,oBAAoB,CAAC,OAAO,CAAC,CAAC;YACnC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;;;QAlDzB,KAAK,IAAM,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU;oBAApC,WAAW;SAmDrB;QAED,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;;QAG5B,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC;gBACrC,IAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;gBAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC;gBACtB,OAAO,IAAI,CAAC;aACb,CAAC,CAAC;SACJ;;QAGD,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE;YAC/C,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,WAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,GAAA,CAAC,EAAC,CAAC;YAChG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,OAAR,IAAI,WAAQ,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,GAAA,CAAC,EAAC,CAAC;SACnG;QAED,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;QAED,IAAI,IAAI,CAAC,UAAU,EAAE;;YAEnB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;QAED,qBAAqB,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,GAAA,CAAC,CAAC;QAChD,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;KACxB;;;;;;IAOD,4CAAmB,GAAnB;QAAA,iBAyEC;QAxEC,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;YACjD,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAA,IAAI;;gBACxB,IAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;gBACzC,IAAM,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,aAAa,CAAC,EAAE,GAAA,CAAC,CAAC;gBACnE,IAAI,CAAC,IAAI,EAAE;oBACT,OAAO;iBACR;;gBAGD,IAAI,IAAI,CAAC;gBACT,IAAI;oBACF,IAAI,GAAG,aAAa,CAAC,OAAO,EAAE,CAAC;iBAChC;gBAAC,OAAO,EAAE,EAAE;;oBAEX,OAAO;iBACR;gBACD,IAAI,KAAI,CAAC,UAAU,EAAE;oBACnB,IAAI,CAAC,SAAS,CAAC,MAAM;wBACnB,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,KAAI,CAAC,UAAU,CAAC;iBAChG;qBAAM;oBACL,IAAI,CAAC,SAAS,CAAC,MAAM;wBACnB,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;iBAC5F;gBAED,IAAI,KAAI,CAAC,aAAa,EAAE;oBACtB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;iBAC7E;gBACD,IAAI,KAAI,CAAC,aAAa,EAAE;oBACtB,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;iBAC7E;gBAED,IAAI,KAAI,CAAC,SAAS,EAAE;oBAClB,IAAI,CAAC,SAAS,CAAC,KAAK;wBAClB,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC;iBAC7F;qBAAM;;oBAEL,IAAI,aAAa,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE;wBACrD,IAAI,WAAW,SAAA,CAAC;wBAChB,IAAI;;gCACF,KAAuB,IAAA,KAAA,SAAA,aAAa,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAA,gBAAA,4BAAE;oCAA9D,IAAM,QAAQ,WAAA;oCACjB,IAAM,WAAW,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC;oCACvC,IAAI,CAAC,WAAW,EAAE;wCAChB,WAAW,GAAG,WAAW,CAAC;qCAC3B;yCAAM;wCACL,IAAI,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,EAAE;4CACzC,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;yCACvC;wCACD,IAAI,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,EAAE;4CAC3C,WAAW,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;yCACzC;qCACF;iCACF;;;;;;;;;yBACF;wBAAC,OAAO,EAAE,EAAE;;4BAEX,OAAO;yBACR;wBACD,IAAI,CAAC,SAAS,CAAC,KAAK;4BAClB,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,GAAG,EAAE,CAAC;qBACrG;yBAAM;wBACL,IAAI,CAAC,SAAS,CAAC,KAAK;4BAClB,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;qBACzF;iBACF;gBAED,IAAI,KAAI,CAAC,YAAY,EAAE;oBACrB,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;iBAC1E;gBACD,IAAI,KAAI,CAAC,YAAY,EAAE;oBACrB,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;iBAC1E;aACF,CAAC,CAAC;SACJ;KACF;;;;;;IAOD,oCAAW,GAAX,UAAY,QAAuB;QAAnC,iBAwBC;QAxBW,yBAAA,EAAA,WAAW,IAAI,CAAC,OAAO;QACjC,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,UAAA,MAAM;YAC1B,IAAM,IAAI,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,EAAE,KAAK,MAAM,CAAC,aAAa,CAAC,EAAE,GAAA,CAAC,CAAC;YAE9E,IAAI,IAAI,EAAE;gBACR,IAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACnE,aAAa;qBACV,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC;qBACvB,UAAU,EAAE;qBACZ,IAAI,CAACC,YAAiB,CAAC;qBACvB,QAAQ,CAAC,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;qBAC5B,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;gBAExB,IAAM,iBAAiB,GAAG,MAAM,CAAC,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,MAAI,IAAI,CAAC,EAAI,CAAC,CAAC;gBACxF,iBAAiB;qBACd,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC;qBAC3B,UAAU,EAAE;qBACZ,IAAI,CAACA,YAAiB,CAAC;qBACvB,QAAQ,CAAC,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC;qBAC5B,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAE5B,KAAI,CAAC,oBAAoB,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;aAC9C;SACF,CAAC,CAAC;KACJ;;;;;;IAOD,6CAAoB,GAApB,UAAqB,IAAI;QACvB,IAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAClC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEjC,IAAI,SAAS,CAAC,CAAC,GAAG,UAAU,CAAC,CAAC,EAAE;YAC9B,IAAI,CAAC,gBAAgB,GAAG,kBAAkB,CAAC;;YAG3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,SAAI,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC;SAC/D;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,iBAAiB,CAAC;YAC1C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC;SAC3B;KACF;;;;;;IAOD,qCAAY,GAAZ,UAAa,MAAW;QACtB,IAAM,YAAY,GAAGC,IACd,EAAO;aACX,CAAC,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,GAAA,CAAC;aACX,CAAC,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,CAAC,GAAA,CAAC;aACX,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACrB,OAAO,YAAY,CAAC,MAAM,CAAC,CAAC;KAC7B;;;;;;IAOD,+BAAM,GAAN,UAAO,MAAkB,EAAE,SAAS;QAClC,IAAI,IAAI,CAAC,qBAAqB,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE;YACjD,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YACjD,OAAO;SACR;QAED,IAAM,UAAU,GAAG,CAAC,IAAI,SAAS,KAAK,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;QAG/E,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,GAAG,UAAU,CAAC;QACjD,IAAI,YAAY,IAAI,IAAI,CAAC,YAAY,IAAI,YAAY,IAAI,IAAI,CAAC,YAAY,EAAE;YAC1E,OAAO;SACR;;QAGD,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;YACpB,OAAO;SACR;QAED,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI,IAAI,MAAM,EAAE;;YAErC,IAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;YAC9B,IAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC;;YAG9B,IAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1D,IAAM,QAAQ,GAAG,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAE9C,IAAM,KAAK,GAAG,GAAG,CAAC,cAAc,EAAE,CAAC;YACnC,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;YACjB,KAAK,CAAC,CAAC,GAAG,MAAM,CAAC;YACjB,IAAM,QAAQ,GAAG,KAAK,CAAC,eAAe,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;;YAG1E,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;YACvC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACtB,IAAI,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;SAC1C;aAAM;YACL,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SACvB;KACF;;;;;;;IAQD,4BAAG,GAAH,UAAI,CAAS,EAAE,CAAS,EAAE,eAAgC;QAAhC,gCAAA,EAAA,uBAAgC;QACxD,IAAM,SAAS,GAAG,eAAe,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACvD,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,SAAS,CAAC,CAAC,GAAG,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;QAE1G,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;;;;;IAMD,8BAAK,GAAL,UAAM,CAAS,EAAE,CAAS;QACxB,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS,IAAI,KAAK,CAAC,CAAC,CAAC,EAAE;YAC1F,OAAO;SACR;QAED,IAAM,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACzE,IAAM,IAAI,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAE1E,IAAI,CAAC,oBAAoB,GAAG,SAAS,CACnC,IAAI,CAAC,oBAAoB,EACzB,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,EAAE,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,CACxD,CAAC;QAEF,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;;;;;IAMD,6BAAI,GAAJ,UAAK,MAAc;QACjB,IAAI,CAAC,oBAAoB,GAAG,SAAS,CAAC,IAAI,CAAC,oBAAoB,EAAE,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC;QACxF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;;;;;IAMD,+BAAM,GAAN,UAAO,KAAa;QAClB,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QACzF,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QACzF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,EAAE,CAAC;KACf;;;;;;IAOD,8BAAK,GAAL,UAAM,KAAiB;QACrB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;KAC5C;;;;;;IAOD,+BAAM,GAAN,UAAO,KAAiB;;QAAxB,iBAsCC;QArCC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,OAAO;SACR;QACD,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;QAC/B,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YACxE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACjC;QAED,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;;QAGpD,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;QACrD,IAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC;QACtD,IAAI,CAAC,SAAS,GAAG,eAAa,CAAC,UAAK,CAAC,MAAG,CAAC;gCAE9B,IAAI;YACb,IACE,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE;gBACvB,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,EAAE;gBACtB,IAAI,CAAC,MAAc,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE;gBAClC,IAAI,CAAC,MAAc,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,EACnC;gBACA,IAAI,OAAK,MAAM,IAAI,OAAO,OAAK,MAAM,KAAK,QAAQ,EAAE;oBAClD,IAAM,MAAM,GAAG,OAAK,MAAM,CAAC,UAAU,CAAC,OAAK,KAAK,EAAE,IAAI,CAAC,CAAC;oBACxD,IAAM,OAAO,GAAG,MAAM,YAAY,UAAU,GAAG,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;oBACnE,OAAK,iBAAiB,CAAC,GAAG,CACxB,OAAO,CAAC,SAAS,CAAC,UAAA,KAAK;wBACrB,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;wBACnB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;qBACvB,CAAC,CACH,CAAC;iBACH;aACF;;;;YAjBH,KAAmB,IAAA,KAAA,SAAA,IAAI,CAAC,KAAK,CAAC,KAAK,CAAA,gBAAA;gBAA9B,IAAM,IAAI,WAAA;wBAAJ,IAAI;aAkBd;;;;;;;;;QAED,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;KACzB;IAED,mCAAU,GAAV,UAAW,IAAU;QACnB,IAAM,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KAClB;;;;;;;IAQD,wCAAe,GAAf;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC,CAAC;KACtE;;;;;;;IAQD,gCAAO,GAAP,UAAQ,KAAU;QAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;;;;;;;IAQD,mCAAU,GAAV,UAAW,KAAK;QACd,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;YAC1C,OAAO;SACR;QACD,IAAI,CAAC,aAAa,aAAI,KAAK,GAAK,IAAI,CAAC,aAAa,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACnE;;;;;;IAOD,qCAAY,GAAZ,UAAa,KAAK;QAChB,IAAM,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAE9C,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAClC,IAAI,CAAC,aAAa,YAAO,IAAI,CAAC,aAAa,CAAC,CAAC;QAE7C,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC,CAAC;KACrE;;;;;;IAOD,wCAAe,GAAf;QAAA,iBAKC;QAJC,OAAO,IAAI,CAAC,KAAK;aACd,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,GAAA,CAAC;aAChC,MAAM,CAAC,UAAC,KAAe,EAAE,IAAI,IAAY,QAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,IAAC,EAAE,EAAE,CAAC;aACzG,IAAI,EAAE,CAAC;KACX;;;;;;;IAQD,oCAAW,GAAX,UAAY,KAAa,EAAE,IAAU;QACnC,OAAO,IAAI,CAAC,EAAE,CAAC;KAChB;;;;;;;IAQD,oCAAW,GAAX,UAAY,KAAa,EAAE,IAAU;QACnC,OAAO,IAAI,CAAC,EAAE,CAAC;KAChB;;;;;;;IAQD,kCAAS,GAAT;QACE,IAAI,CAAC,MAAM,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;KAC7F;;;;;;IAOD,yCAAgB,GAAhB;QACE,OAAO;YACL,SAAS,EAAE,SAAS;YACpB,MAAM,EAAE,IAAI,CAAC,YAAY;YACzB,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;KACH;;;;;;IAQD,oCAAW,GAAX,UAAY,MAAkB;QAC5B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAC9B,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,EAAE;YACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;SAC1C;aAAM,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,eAAe,EAAE;YAClD,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACrB;KACF;IAGD,oCAAW,GAAX,UAAY,KAAiB;QAC3B,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;KAChC;IAGD,mCAAU,GAAV,UAAW,KAAiB;QAC1B,IAAI,CAAC,IAAI,CAAC,iBAAiB;YAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5D;;;;;;IAOD,qCAAY,GAAZ,UAAa,KAAU;QACrB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QACnD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;QAEnD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;;;;;IAOD,oCAAW,GAAX,UAAY,MAAW;QACrB,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,EAAE;YACzC,IAAM,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACjD,IAAM,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;YACjD,IAAM,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YAC7C,IAAM,SAAS,GAAG,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;YAC7C,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;YAC3B,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;YAE3B,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;SAChC;KACF;;;;;;IAOD,mCAAU,GAAV,UAAW,KAAU;QACnB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;;;;;;IAQD,kCAAS,GAAT,UAAU,KAAiB;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE;YAC3E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;SACjD;KACF;;;;;;IAOD,wCAAe,GAAf,UAAgB,KAAiB,EAAE,IAAS;QAC1C,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE;YACzB,OAAO;SACR;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QAEzB,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO,IAAI,CAAC,MAAM,KAAK,QAAQ,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE;YAC7E,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACtC;KACF;;;;IAKD,+BAAM,GAAN;QACE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KACjE;;;;IAKD,kCAAS,GAAT;QACE,IAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QAC5D,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QACzD,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC;QAEnD,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE;YACjC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;SAC/B;QAED,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,EAAE;YACjC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC;SAC/B;QAED,IAAI,SAAS,KAAK,IAAI,CAAC,SAAS,EAAE;YAChC,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,eAAe,EAAE,CAAC;YACvB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACtC;KACF;;;;;IAMD,oCAAW,GAAX,UAAY,MAAc;QACxB,IAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,KAAK,MAAM,GAAA,CAAC,CAAC;QACzD,IAAI,CAAC,IAAI,EAAE;YACT,OAAO;SACR;QAED,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;KAC9C;IAEO,kCAAS,GAAjB,UAAkB,GAAW,EAAE,KAAiB;QAC9C,QAAQ,GAAG;YACT,KAAK,WAAW,CAAC,UAAU;gBACzB,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;gBAC7B,MAAM;YACR,KAAK,WAAW,CAAC,QAAQ;gBACvB,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,SAAS,CAAC,CAAC;gBAC7B,MAAM;YACR;gBACE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;gBAClB,MAAM;SACT;KACF;IAEO,6CAAoB,GAA5B,UAA6B,IAAU,EAAE,MAAW;QAClD,IAAI,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YACpB,OAAO;SACR;QAED,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;YAC3B,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;SACvD;aAAM;YACL,IAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACzC,IAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,QAAQ,GAAG;gBACd,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC;gBAC7B,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,IAAI,CAAC;aAC9B,CAAC;SACH;KACF;;gBA17Ba,UAAU;gBACT,MAAM;gBACR,iBAAiB;gBACL,aAAa;;IAzE7B;QAAR,KAAK,EAAE;;kDAAyB;IACxB;QAAR,KAAK,EAAE;;iDAAoB;IACnB;QAAR,KAAK,EAAE;;oDAA8B;IAC7B;QAAR,KAAK,EAAE;;iDAAoB;IACnB;QAAR,KAAK,EAAE;;yDAA2B;IAC1B;QAAR,KAAK,EAAE;;iDAAY;IACX;QAAR,KAAK,EAAE;;2DAAwB;IACvB;QAAR,KAAK,EAAE;;sDAAoB;IACnB;QAAR,KAAK,EAAE;;yDAAuB;IACtB;QAAR,KAAK,EAAE;;yDAAuB;IACtB;QAAR,KAAK,EAAE;;qDAAmB;IAClB;QAAR,KAAK,EAAE;;wDAAsB;IACrB;QAAR,KAAK,EAAE;;wDAAsB;IACrB;QAAR,KAAK,EAAE;;0DAAgC;IAC/B;QAAR,KAAK,EAAE;;uDAA6C;IAC5C;QAAR,KAAK,EAAE;;sDAAmB;IAClB;QAAR,KAAK,EAAE;;qDAAiB;IAChB;QAAR,KAAK,EAAE;;wDAAoB;IACnB;QAAR,KAAK,EAAE;;wDAAoB;IACnB;QAAR,KAAK,EAAE;;oDAAkB;IACjB;QAAR,KAAK,EAAE;;qDAAkB;IACjB;QAAR,KAAK,EAAE;;mDAAkB;IACjB;QAAR,KAAK,EAAE;;sDAAoB;IACnB;QAAR,KAAK,EAAE;kCAAU,UAAU;mDAAM;IACzB;QAAR,KAAK,EAAE;kCAAU,UAAU;mDAAM;IACzB;QAAR,KAAK,EAAE;kCAAa,UAAU;sDAAM;IAC5B;QAAR,KAAK,EAAE;kCAAa,UAAU;sDAAM;IAC5B;QAAR,KAAK,EAAE;;kDAAyB;IACxB;QAAR,KAAK,EAAE;;0DAAqB;IACpB;QAAR,KAAK,EAAE;;iEAA+B;IAE7B;QAAT,MAAM,EAAE;kCAAW,YAAY;oDAA2B;IACjD;QAAT,MAAM,EAAE;kCAAa,YAAY;sDAA2B;IACnD;QAAT,MAAM,EAAE;kCAAa,YAAY;sDAA8B;IACtD;QAAT,MAAM,EAAE;kCAAe,YAAY;wDAAkC;IAExC;QAA7B,YAAY,CAAC,cAAc,CAAC;kCAAe,WAAW;wDAAM;IAC/B;QAA7B,YAAY,CAAC,cAAc,CAAC;kCAAe,WAAW;wDAAM;IAC5B;QAAhC,YAAY,CAAC,iBAAiB,CAAC;kCAAkB,WAAW;2DAAM;IACrC;QAA7B,YAAY,CAAC,cAAc,CAAC;kCAAe,WAAW;wDAAM;IAEE;QAA9D,SAAS,CAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;kCAAQ,UAAU;iDAAC;IACpD;QAA5B,YAAY,CAAC,aAAa,CAAC;kCAAe,SAAS;wDAAa;IACpC;QAA5B,YAAY,CAAC,aAAa,CAAC;kCAAe,SAAS;wDAAa;IAoCjE;QADC,KAAK,EAAE;;0DACmD;IAa3D;QADC,KAAK,CAAC,WAAW,CAAC;;;mDAGlB;IAaD;QADC,KAAK,CAAC,YAAY,CAAC;;;oDAGnB;IAaD;QADC,KAAK,CAAC,YAAY,CAAC;;;oDAGnB;IAmuBD;QADC,YAAY,CAAC,oBAAoB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAC3B,UAAU;;qDAO7B;IAGD;QADC,YAAY,CAAC,oBAAoB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAC5B,UAAU;;qDAE5B;IAGD;QADC,YAAY,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCACzB,UAAU;;oDAE3B;IAmBD;QADC,YAAY,CAAC,oBAAoB,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;qDAY9C;IAiBD;QADC,YAAY,CAAC,kBAAkB,EAAE,CAAC,QAAQ,CAAC,CAAC;;yCAC5B,UAAU;;mDAM1B;IAt6BU,cAAc;QAP1B,SAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YAErB,k9GAAmC;YACnC,aAAa,EAAE,iBAAiB,CAAC,IAAI;YACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;;SAChD,CAAC;yCAwEc,UAAU;YACT,MAAM;YACR,iBAAiB;YACL,aAAa;OA1E3B,cAAc,CAkgC1B;IAAD,qBAAC;CAAA,CAlgCmC,kBAAkB;;AC/DtD;;;;;;AAMA;;IAEA;QAEE,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAElC,mBAAc,GAAG,IAAI,YAAY,EAAE,CAAC;KA6CrC;IA1CC,gDAAkB,GAAlB,UAAmB,KAAU;QAC3B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KAC5B;IAGD,iDAAmB,GAAnB,UAAoB,KAAU;QAC5B,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KAC5B;IAGD,qCAAO,GAAP,UAAQ,KAAU;QAChB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KAC5B;IAGD,4CAAc,GAAd,UAAe,KAAU;QACvB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;KAC5B;IAED,4CAAc,GAAd,UAAe,KAAU;QACvB,IAAI,MAAM,CAAC,KAAK,EAAE;YAChB,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;SACtB;QAED,IAAM,KAAK,GAAW,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,UAAU,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;;QAEnH,IAAM,cAAc,GAAY,KAAK,CAAC,UAAU,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QACzE,IAAM,gBAAgB,GAAY,KAAK,CAAC,UAAU,GAAG,KAAK,GAAG,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;QAC3E,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B;aAAM,IAAI,gBAAgB,EAAE;YAC3B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjC;;QAGD,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC;;QAG1B,IAAI,KAAK,CAAC,cAAc,EAAE;YACxB,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;KACF;IA9CD;QADC,MAAM,EAAE;;6DACyB;IAElC;QADC,MAAM,EAAE;;+DAC2B;IAGpC;QADC,YAAY,CAAC,YAAY,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;iEAGtC;IAGD;QADC,YAAY,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;kEAG1C;IAGD;QADC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;sDAGjC;IAGD;QADC,YAAY,CAAC,cAAc,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;6DAGxC;IAxBU,mBAAmB;QAD/B,SAAS,CAAC,EAAE,QAAQ,EAAE,cAAc,EAAE,CAAC;OAC3B,mBAAmB,CAiD/B;IAAD,0BAAC;CAjDD;;;ICGA;KAA2B;IAAd,WAAW;QANvB,QAAQ,CAAC;YACR,OAAO,EAAE,CAAC,iBAAiB,CAAC;YAC5B,YAAY,EAAE,CAAC,cAAc,EAAE,mBAAmB,CAAC;YACnD,OAAO,EAAE,CAAC,cAAc,EAAE,mBAAmB,CAAC;YAC9C,SAAS,EAAE,CAAC,aAAa,CAAC;SAC3B,CAAC;OACW,WAAW,CAAG;IAAD,kBAAC;CAA3B;;;ICLA;KAA8B;IAAjB,cAAc;QAJ1B,QAAQ,CAAC;YACR,OAAO,EAAE,CAAC,eAAe,CAAC;YAC1B,OAAO,EAAE,CAAC,WAAW,CAAC;SACvB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAA9B;;ACRA;;;;ACAA;;;;;;"}