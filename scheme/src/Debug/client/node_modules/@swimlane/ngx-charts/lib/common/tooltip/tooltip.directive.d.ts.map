{"version":3,"file":"tooltip.directive.d.ts","sources":["tooltip.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, ViewContainerRef, Renderer2, OnDestroy } from '@angular/core';\nimport { PlacementTypes } from './position';\nimport { StyleTypes } from './style.type';\nimport { AlignmentTypes } from './alignment.type';\nimport { ShowTypes } from './show.type';\nimport { TooltipService } from './tooltip.service';\nexport declare class TooltipDirective implements OnDestroy {\n    private tooltipService;\n    private viewContainerRef;\n    private renderer;\n    tooltipCssClass: string;\n    tooltipTitle: string;\n    tooltipAppendToBody: boolean;\n    tooltipSpacing: number;\n    tooltipDisabled: boolean;\n    tooltipShowCaret: boolean;\n    tooltipPlacement: PlacementTypes;\n    tooltipAlignment: AlignmentTypes;\n    tooltipType: StyleTypes;\n    tooltipCloseOnClickOutside: boolean;\n    tooltipCloseOnMouseLeave: boolean;\n    tooltipHideTimeout: number;\n    tooltipShowTimeout: number;\n    tooltipTemplate: any;\n    tooltipShowEvent: ShowTypes;\n    tooltipContext: any;\n    tooltipImmediateExit: boolean;\n    show: EventEmitter<any>;\n    hide: EventEmitter<any>;\n    private readonly listensForFocus;\n    private readonly listensForHover;\n    private component;\n    private timeout;\n    private mouseLeaveContentEvent;\n    private mouseEnterContentEvent;\n    private documentClickEvent;\n    constructor(tooltipService: TooltipService, viewContainerRef: ViewContainerRef, renderer: Renderer2);\n    ngOnDestroy(): void;\n    onFocus(): void;\n    onBlur(): void;\n    onMouseEnter(): void;\n    onMouseLeave(target: any): void;\n    onMouseClick(): void;\n    showTooltip(immediate?: boolean): void;\n    addHideListeners(tooltip: any): void;\n    hideTooltip(immediate?: boolean): void;\n    private createBoundOptions;\n}\n"]}