{"version":3,"file":"heat-map.component.d.ts","sources":["heat-map.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { TemplateRef, EventEmitter } from '@angular/core';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nexport declare class HeatMapComponent extends BaseChartComponent {\n    legend: any;\n    legendTitle: string;\n    legendPosition: string;\n    xAxis: any;\n    yAxis: any;\n    showXAxisLabel: any;\n    showYAxisLabel: any;\n    xAxisLabel: any;\n    yAxisLabel: any;\n    gradient: boolean;\n    innerPadding: number | number[];\n    trimXAxisTicks: boolean;\n    trimYAxisTicks: boolean;\n    rotateXAxisTicks: boolean;\n    maxXAxisTickLength: number;\n    maxYAxisTickLength: number;\n    xAxisTickFormatting: any;\n    yAxisTickFormatting: any;\n    xAxisTicks: any[];\n    yAxisTicks: any[];\n    tooltipDisabled: boolean;\n    tooltipText: any;\n    min: any;\n    max: any;\n    activeEntries: any[];\n    activate: EventEmitter<any>;\n    deactivate: EventEmitter<any>;\n    tooltipTemplate: TemplateRef<any>;\n    dims: ViewDimensions;\n    xDomain: any[];\n    yDomain: any[];\n    valueDomain: any[];\n    xScale: any;\n    yScale: any;\n    color: any;\n    colors: ColorHelper;\n    colorScale: any;\n    transform: string;\n    rects: any[];\n    margin: number[];\n    xAxisHeight: number;\n    yAxisWidth: number;\n    legendOptions: any;\n    scaleType: string;\n    update(): void;\n    getXDomain(): any;\n    getYDomain(): any[];\n    getValueDomain(): any[];\n    /**\n     * Converts the input to gap paddingInner in fraction\n     * Supports the following inputs:\n     *    Numbers: 8\n     *    Strings: \"8\", \"8px\", \"8%\"\n     *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n     *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n     *\n     * @memberOf HeatMapComponent\n     */\n    getDimension(value: string | number | Array<string | number>, index: number, N: number, L: number): number;\n    getXScale(): any;\n    getYScale(): any;\n    getRects(): any[];\n    onClick(data: any): void;\n    setColors(): void;\n    getLegendOptions(): {\n        scaleType: string;\n        domain: any[];\n        colors: any;\n        title: string;\n        position: string;\n    };\n    updateYAxisWidth({ width }: {\n        width: any;\n    }): void;\n    updateXAxisHeight({ height }: {\n        height: any;\n    }): void;\n    onActivate(event: any, group: any, fromLegend?: boolean): void;\n    onDeactivate(event: any, group: any, fromLegend?: boolean): void;\n}\n"]}