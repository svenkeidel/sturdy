{"version":3,"file":"swimlane-ngx-charts.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@swimlane/ngx-charts/lib/common/tooltip/injection.service.ts","ng://@swimlane/ngx-charts/lib/utils/throttle.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/position/placement.type.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/position/position.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/tooltip.component.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/injection-registery.service.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/tooltip.service.ts","ng://@swimlane/ngx-charts/lib/common/charts/chart.component.ts","ng://@swimlane/ngx-charts/lib/utils/visibility-observer.ts","ng://@swimlane/ngx-charts/lib/common/base-chart.component.ts","ng://@swimlane/ngx-charts/lib/common/axes/axis-label.component.ts","ng://@swimlane/ngx-charts/lib/common/trim-label.helper.ts","ng://@swimlane/ngx-charts/lib/common/axes/ticks.helper.ts","ng://@swimlane/ngx-charts/lib/common/axes/x-axis-ticks.component.ts","ng://@swimlane/ngx-charts/lib/common/axes/x-axis.component.ts","ng://@swimlane/ngx-charts/lib/common/shape.helper.ts","ng://@swimlane/ngx-charts/lib/common/axes/y-axis-ticks.component.ts","ng://@swimlane/ngx-charts/lib/common/axes/y-axis.component.ts","ng://@swimlane/ngx-charts/lib/common/axes/axes.module.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/style.type.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/alignment.type.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/show.type.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/tooltip.directive.ts","ng://@swimlane/ngx-charts/lib/common/tooltip/tooltip.module.ts","ng://@swimlane/ngx-charts/lib/common/label.helper.ts","ng://@swimlane/ngx-charts/lib/utils/id.ts","ng://@swimlane/ngx-charts/lib/common/circle-series.component.ts","ng://@swimlane/ngx-charts/lib/common/circle.component.ts","ng://@swimlane/ngx-charts/lib/common/grid-panel.component.ts","ng://@swimlane/ngx-charts/lib/common/grid-panel-series.component.ts","ng://@swimlane/ngx-charts/lib/common/svg-linear-gradient.component.ts","ng://@swimlane/ngx-charts/lib/common/svg-radial-gradient.component.ts","ng://@swimlane/ngx-charts/lib/common/area.component.ts","ng://@swimlane/ngx-charts/lib/common/count/count.helper.ts","ng://@swimlane/ngx-charts/lib/common/count/count.directive.ts","ng://@swimlane/ngx-charts/lib/events.ts","ng://@swimlane/ngx-charts/lib/common/tooltip-area.component.ts","ng://@swimlane/ngx-charts/lib/common/timeline/timeline.component.ts","ng://@swimlane/ngx-charts/lib/common/legend/legend.component.ts","ng://@swimlane/ngx-charts/lib/common/legend/legend-entry.component.ts","ng://@swimlane/ngx-charts/lib/common/legend/scale-legend.component.ts","ng://@swimlane/ngx-charts/lib/common/legend/advanced-legend.component.ts","ng://@swimlane/ngx-charts/lib/common/chart-common.module.ts","ng://@swimlane/ngx-charts/lib/common/view-dimensions.helper.ts","ng://@swimlane/ngx-charts/lib/utils/color-sets.ts","ng://@swimlane/ngx-charts/lib/common/color.helper.ts","ng://@swimlane/ngx-charts/lib/common/domain.helper.ts","ng://@swimlane/ngx-charts/lib/area-chart/area-chart.component.ts","ng://@swimlane/ngx-charts/lib/area-chart/area-chart-normalized.component.ts","ng://@swimlane/ngx-charts/lib/area-chart/area-chart-stacked.component.ts","ng://@swimlane/ngx-charts/lib/utils/sort.ts","ng://@swimlane/ngx-charts/lib/area-chart/area-series.component.ts","ng://@swimlane/ngx-charts/lib/area-chart/area-chart.module.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-horizontal.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-horizontal-2d.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-horizontal-normalized.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-horizontal-stacked.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-vertical.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-vertical-2d.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-vertical-normalized.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-vertical-stacked.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/series-vertical.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/series-horizontal.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-label.component.ts","ng://@swimlane/ngx-charts/lib/bar-chart/bar-chart.module.ts","ng://@swimlane/ngx-charts/lib/bubble-chart/bubble-chart.utils.ts","ng://@swimlane/ngx-charts/lib/bubble-chart/bubble-chart.component.ts","ng://@swimlane/ngx-charts/lib/bubble-chart/bubble-series.component.ts","ng://@swimlane/ngx-charts/lib/bubble-chart/bubble-chart.module.ts","ng://@swimlane/ngx-charts/lib/heat-map/heat-map-cell.component.ts","ng://@swimlane/ngx-charts/lib/heat-map/heat-map-cell-series.component.ts","ng://@swimlane/ngx-charts/lib/heat-map/heat-map.component.ts","ng://@swimlane/ngx-charts/lib/heat-map/heat-map.module.ts","ng://@swimlane/ngx-charts/lib/line-chart/line.component.ts","ng://@swimlane/ngx-charts/lib/line-chart/line-chart.component.ts","ng://@swimlane/ngx-charts/lib/line-chart/line-series.component.ts","ng://@swimlane/ngx-charts/lib/line-chart/line-chart.module.ts","ng://@swimlane/ngx-charts/lib/utils/types.ts","ng://@swimlane/ngx-charts/lib/polar-chart/polar-chart.component.ts","ng://@swimlane/ngx-charts/lib/polar-chart/polar-series.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/advanced-pie-chart.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-label.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-arc.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-chart.component.ts","ng://@swimlane/ngx-charts/lib/common/grid-layout.helper.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-grid.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-grid-series.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-series.component.ts","ng://@swimlane/ngx-charts/lib/pie-chart/pie-chart.module.ts","ng://@swimlane/ngx-charts/lib/polar-chart/polar-chart.module.ts","ng://@swimlane/ngx-charts/lib/number-card/card.component.ts","ng://@swimlane/ngx-charts/lib/utils/color-utils.ts","ng://@swimlane/ngx-charts/lib/number-card/card-series.component.ts","ng://@swimlane/ngx-charts/lib/number-card/number-card.component.ts","ng://@swimlane/ngx-charts/lib/number-card/number-card.module.ts","ng://@swimlane/ngx-charts/lib/tree-map/tree-map-cell.component.ts","ng://@swimlane/ngx-charts/lib/tree-map/tree-map-cell-series.component.ts","ng://@swimlane/ngx-charts/lib/tree-map/tree-map.component.ts","ng://@swimlane/ngx-charts/lib/tree-map/tree-map.module.ts","ng://@swimlane/ngx-charts/lib/gauge/linear-gauge.component.ts","ng://@swimlane/ngx-charts/lib/gauge/gauge.component.ts","ng://@swimlane/ngx-charts/lib/gauge/gauge-arc.component.ts","ng://@swimlane/ngx-charts/lib/gauge/gauge-axis.component.ts","ng://@swimlane/ngx-charts/lib/gauge/gauge.module.ts","ng://@swimlane/ngx-charts/lib/polyfills.ts","ng://@swimlane/ngx-charts/lib/ngx-charts.module.ts","ng://@swimlane/ngx-charts/lib/common/tick-format.helper.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Injectable,\n  Injector,\n  ViewContainerRef,\n  EmbeddedViewRef,\n  Type\n} from '@angular/core';\nimport { DomPortalHost, ComponentPortal } from '@angular/cdk/portal';\n\nfunction isViewContainerRef(x: any): x is ViewContainerRef {\n  return x.element;\n}\n\n/**\n * Injection service is a helper to append components\n * dynamically to a known location in the DOM, most\n * noteably for dialogs/tooltips appending to body.\n *\n * @export\n */\n@Injectable()\nexport class InjectionService {\n  static globalRootViewContainer: ViewContainerRef = null;\n\n  /**\n   * Sets a default global root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   */\n  static setGlobalRootViewContainer(container: ViewContainerRef): void {\n    InjectionService.globalRootViewContainer = container;\n  }\n\n  private _container: ViewContainerRef;\n\n  constructor(\n    private applicationRef: ApplicationRef,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector\n  ) {}\n\n  /**\n   * Gets the root view container to inject the component to.\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainer(): ViewContainerRef | ComponentRef<any> {\n    if (this._container) return this._container;\n    if (InjectionService.globalRootViewContainer) return InjectionService.globalRootViewContainer;\n\n    if (this.applicationRef.components.length) return this.applicationRef.components[0];\n\n    throw new Error(\n      'View Container not found! ngUpgrade needs to manually set this via setRootViewContainer or setGlobalRootViewContainer.'\n    );\n  }\n\n  /**\n   * Overrides the default root view container. This is useful for\n   * things like ngUpgrade that doesn't have a ApplicationRef root.\n   *\n   * @param container\n   *\n   * @memberOf InjectionService\n   */\n  setRootViewContainer(container: ViewContainerRef): void {\n    this._container = container;\n  }\n\n  /**\n   * Gets the html element for a component ref.\n   *\n   * @param componentRef\n   *\n   * @memberOf InjectionService\n   */\n  getComponentRootNode(component: ViewContainerRef | ComponentRef<any>): HTMLElement {\n    if (isViewContainerRef(component)) {\n      return component.element.nativeElement;\n    }\n    if (component.hostView && (component.hostView as EmbeddedViewRef<any>).rootNodes.length > 0) {\n      return (component.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n    }\n\n    // the top most component root node has no `hostView`\n    return component.location.nativeElement;\n  }\n\n  /**\n   * Gets the root component container html element.\n   *\n   * @memberOf InjectionService\n   */\n  getRootViewContainerNode(component: ViewContainerRef | ComponentRef<any>): HTMLElement {\n    return this.getComponentRootNode(component);\n  }\n\n  /**\n   * Projects the bindings onto the component\n   *\n   * @param component\n   * @param options\n   *\n   * @memberOf InjectionService\n   */\n  projectComponentBindings(component: ComponentRef<any>, bindings: any): ComponentRef<any> {\n    if (bindings) {\n      if (bindings.inputs !== undefined) {\n        const bindingKeys = Object.getOwnPropertyNames(bindings.inputs);\n        for (const bindingName of bindingKeys) {\n          component.instance[bindingName] = bindings.inputs[bindingName];\n        }\n      }\n\n      if (bindings.outputs !== undefined) {\n        const eventKeys = Object.getOwnPropertyNames(bindings.outputs);\n        for (const eventName of eventKeys) {\n          component.instance[eventName] = bindings.outputs[eventName];\n        }\n      }\n    }\n\n    return component;\n  }\n\n  /**\n   * Appends a component to a adjacent location\n   *\n   * @param componentClass\n   * @param [options={}]\n   * @param [location]\n   *\n   * @memberOf InjectionService\n   */\n  appendComponent<T>(componentClass: Type<T>, bindings: any = {}, location?: any): ComponentRef<any> {\n    if (!location) location = this.getRootViewContainer();\n    const appendLocation = this.getComponentRootNode(location);\n\n    const portalHost = new DomPortalHost(\n      appendLocation,\n      this.componentFactoryResolver,\n      this.applicationRef,\n      this.injector\n    );\n\n    const portal = new ComponentPortal(componentClass);\n\n    const componentRef = portalHost.attach(portal);\n    this.projectComponentBindings(componentRef, bindings);\n    return componentRef;\n  }\n}\n","/**\n * Throttle a function\n *\n */\nexport function throttle(func: any, wait: number, options?: any) {\n  options = options || {};\n  let context;\n  let args;\n  let result;\n  let timeout = null;\n  let previous = 0;\n\n  function later() {\n    previous = options.leading === false ? 0 : +new Date();\n    timeout = null;\n    result = func.apply(context, args);\n  }\n\n  return function() {\n    const now = +new Date();\n\n    if (!previous && options.leading === false) {\n      previous = now;\n    }\n\n    const remaining = wait - (now - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0) {\n      clearTimeout(timeout);\n      timeout = null;\n      previous = now;\n      result = func.apply(context, args);\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n}\n\n/**\n * Throttle decorator\n *\n *  class MyClass {\n *    throttleable(10)\n *    myFn() { ... }\n *  }\n */\nexport function throttleable(duration: number, options?: any) {\n  return function innerDecorator(target, key, descriptor) {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: throttle(descriptor.value, duration, options)\n        });\n\n        return this[key];\n      }\n    };\n  };\n}\n","export enum PlacementTypes {\n  top = 'top' as any,\n  bottom = 'bottom' as any,\n  left = 'left' as any,\n  right = 'right' as any\n}\n","import { PlacementTypes } from './placement.type';\n\nconst caretOffset = 7;\n\nfunction verticalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === 'top') {\n    return elDimensions.top - caretOffset;\n  }\n\n  if (alignment === 'bottom') {\n    return elDimensions.top + elDimensions.height - popoverDimensions.height + caretOffset;\n  }\n\n  if (alignment === 'center') {\n    return elDimensions.top + elDimensions.height / 2 - popoverDimensions.height / 2;\n  }\n\n  return undefined;\n}\n\nfunction horizontalPosition(elDimensions, popoverDimensions, alignment) {\n  if (alignment === 'left') {\n    return elDimensions.left - caretOffset;\n  }\n\n  if (alignment === 'right') {\n    return elDimensions.left + elDimensions.width - popoverDimensions.width + caretOffset;\n  }\n\n  if (alignment === 'center') {\n    return elDimensions.left + elDimensions.width / 2 - popoverDimensions.width / 2;\n  }\n\n  return undefined;\n}\n\n/**\n * Position helper for the popover directive.\n *\n * @export\n */\nexport class PositionHelper {\n  /**\n   * Calculate vertical alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalAlignment(elDimensions, popoverDimensions, alignment): number {\n    let result = verticalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.height > window.innerHeight) {\n      result = window.innerHeight - popoverDimensions.height;\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate vertical caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateVerticalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\n    let result;\n\n    if (alignment === 'top') {\n      result = elDimensions.height / 2 - caretDimensions.height / 2 + caretOffset;\n    }\n\n    if (alignment === 'bottom') {\n      result = popoverDimensions.height - elDimensions.height / 2 - caretDimensions.height / 2 - caretOffset;\n    }\n\n    if (alignment === 'center') {\n      result = popoverDimensions.height / 2 - caretDimensions.height / 2;\n    }\n\n    const popoverPosition = verticalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.height > window.innerHeight) {\n      result += popoverPosition + popoverDimensions.height - window.innerHeight;\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate horz alignment position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalAlignment(elDimensions, popoverDimensions, alignment): number {\n    let result = horizontalPosition(elDimensions, popoverDimensions, alignment);\n\n    if (result + popoverDimensions.width > window.innerWidth) {\n      result = window.innerWidth - popoverDimensions.width;\n    }\n\n    return result;\n  }\n\n  /**\n   * Calculate horz caret position\n   *\n   * @memberOf PositionHelper\n   */\n  static calculateHorizontalCaret(elDimensions, popoverDimensions, caretDimensions, alignment): number {\n    let result;\n\n    if (alignment === 'left') {\n      result = elDimensions.width / 2 - caretDimensions.width / 2 + caretOffset;\n    }\n\n    if (alignment === 'right') {\n      result = popoverDimensions.width - elDimensions.width / 2 - caretDimensions.width / 2 - caretOffset;\n    }\n\n    if (alignment === 'center') {\n      result = popoverDimensions.width / 2 - caretDimensions.width / 2;\n    }\n\n    const popoverPosition = horizontalPosition(elDimensions, popoverDimensions, alignment);\n    if (popoverPosition + popoverDimensions.width > window.innerWidth) {\n      result += popoverPosition + popoverDimensions.width - window.innerWidth;\n    }\n\n    return result;\n  }\n\n  /**\n   * Checks if the element's position should be flipped\n   *\n   * @memberOf PositionHelper\n   */\n  static shouldFlip(elDimensions, popoverDimensions, placement, spacing): boolean {\n    let flip = false;\n\n    if (placement === 'right') {\n      if (elDimensions.left + elDimensions.width + popoverDimensions.width + spacing > window.innerWidth) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'left') {\n      if (elDimensions.left - popoverDimensions.width - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'top') {\n      if (elDimensions.top - popoverDimensions.height - spacing < 0) {\n        flip = true;\n      }\n    }\n\n    if (placement === 'bottom') {\n      if (elDimensions.top + elDimensions.height + popoverDimensions.height + spacing > window.innerHeight) {\n        flip = true;\n      }\n    }\n\n    return flip;\n  }\n\n  /**\n   * Position caret\n   *\n   * @memberOf PositionHelper\n   */\n  static positionCaret(placement, elmDim, hostDim, caretDimensions, alignment): any {\n    let top = 0;\n    let left = 0;\n\n    if (placement === PlacementTypes.right) {\n      left = -7;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.left) {\n      left = elmDim.width;\n      top = PositionHelper.calculateVerticalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.top) {\n      top = elmDim.height;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    } else if (placement === PlacementTypes.bottom) {\n      top = -7;\n      left = PositionHelper.calculateHorizontalCaret(hostDim, elmDim, caretDimensions, alignment);\n    }\n\n    return { top, left };\n  }\n\n  /**\n   * Position content\n   *\n   * @memberOf PositionHelper\n   */\n  static positionContent(placement, elmDim, hostDim, spacing, alignment): any {\n    let top = 0;\n    let left = 0;\n\n    if (placement === PlacementTypes.right) {\n      left = hostDim.left + hostDim.width + spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.left) {\n      left = hostDim.left - elmDim.width - spacing;\n      top = PositionHelper.calculateVerticalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.top) {\n      top = hostDim.top - elmDim.height - spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    } else if (placement === PlacementTypes.bottom) {\n      top = hostDim.top + hostDim.height + spacing;\n      left = PositionHelper.calculateHorizontalAlignment(hostDim, elmDim, alignment);\n    }\n\n    return { top, left };\n  }\n\n  /**\n   * Determine placement based on flip\n   *\n   * @memberOf PositionHelper\n   */\n  static determinePlacement(placement, elmDim, hostDim, spacing): any {\n    const shouldFlip = PositionHelper.shouldFlip(hostDim, elmDim, placement, spacing);\n\n    if (shouldFlip) {\n      if (placement === PlacementTypes.right) {\n        return PlacementTypes.left;\n      } else if (placement === PlacementTypes.left) {\n        return PlacementTypes.right;\n      } else if (placement === PlacementTypes.top) {\n        return PlacementTypes.bottom;\n      } else if (placement === PlacementTypes.bottom) {\n        return PlacementTypes.top;\n      }\n    }\n\n    return placement;\n  }\n}\n","import {\n  Input,\n  Component,\n  ElementRef,\n  AfterViewInit,\n  ViewEncapsulation,\n  HostListener,\n  ViewChild,\n  HostBinding,\n  Renderer2\n} from '@angular/core';\n\nimport { throttleable } from '../../utils/throttle';\nimport { PositionHelper, PlacementTypes } from './position';\n\nimport { StyleTypes } from './style.type';\nimport { AlignmentTypes } from './alignment.type';\n\n@Component({\n  selector: 'ngx-tooltip-content',\n  template: `\n    <div>\n      <span #caretElm [hidden]=\"!showCaret\" class=\"tooltip-caret position-{{ this.placement }}\"> </span>\n      <div class=\"tooltip-content\">\n        <span *ngIf=\"!title\">\n          <ng-template [ngTemplateOutlet]=\"template\" [ngTemplateOutletContext]=\"{ model: context }\"> </ng-template>\n        </span>\n        <span *ngIf=\"title\" [innerHTML]=\"title\"> </span>\n      </div>\n    </div>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: ['./tooltip.component.scss']\n})\nexport class TooltipContentComponent implements AfterViewInit {\n  @Input() host: any;\n  @Input() showCaret: boolean;\n  @Input() type: StyleTypes;\n  @Input() placement: PlacementTypes;\n  @Input() alignment: AlignmentTypes;\n  @Input() spacing: number;\n  @Input() cssClass: string;\n  @Input() title: string;\n  @Input() template: any;\n  @Input() context: any;\n\n  @ViewChild('caretElm') caretElm;\n\n  @HostBinding('class')\n  get cssClasses(): string {\n    let clz = 'ngx-charts-tooltip-content';\n    clz += ` position-${this.placement}`;\n    clz += ` type-${this.type}`;\n    clz += ` ${this.cssClass}`;\n    return clz;\n  }\n\n  constructor(public element: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    setTimeout(this.position.bind(this));\n  }\n\n  position(): void {\n    const nativeElm = this.element.nativeElement;\n    const hostDim = this.host.nativeElement.getBoundingClientRect();\n\n    // if no dims were found, never show\n    if (!hostDim.height && !hostDim.width) return;\n\n    const elmDim = nativeElm.getBoundingClientRect();\n    this.checkFlip(hostDim, elmDim);\n    this.positionContent(nativeElm, hostDim, elmDim);\n\n    if (this.showCaret) {\n      this.positionCaret(hostDim, elmDim);\n    }\n\n    // animate its entry\n    setTimeout(() => this.renderer.addClass(nativeElm, 'animate'), 1);\n  }\n\n  positionContent(nativeElm, hostDim, elmDim): void {\n    const { top, left } = PositionHelper.positionContent(this.placement, elmDim, hostDim, this.spacing, this.alignment);\n\n    this.renderer.setStyle(nativeElm, 'top', `${top}px`);\n    this.renderer.setStyle(nativeElm, 'left', `${left}px`);\n  }\n\n  positionCaret(hostDim, elmDim): void {\n    const caretElm = this.caretElm.nativeElement;\n    const caretDimensions = caretElm.getBoundingClientRect();\n    const { top, left } = PositionHelper.positionCaret(\n      this.placement,\n      elmDim,\n      hostDim,\n      caretDimensions,\n      this.alignment\n    );\n\n    this.renderer.setStyle(caretElm, 'top', `${top}px`);\n    this.renderer.setStyle(caretElm, 'left', `${left}px`);\n  }\n\n  checkFlip(hostDim, elmDim): void {\n    this.placement = PositionHelper.determinePlacement(this.placement, elmDim, hostDim, this.spacing);\n  }\n\n  @HostListener('window:resize')\n  @throttleable(100)\n  onWindowResize(): void {\n    this.position();\n  }\n}\n","import { ComponentRef, Type } from '@angular/core';\nimport { InjectionService } from './injection.service';\n\nexport interface PartialBindings {\n  inputs?: object;\n  outputs?: object;\n}\n\nexport abstract class InjectionRegisteryService<T = any> {\n  protected abstract type: Type<T>;\n\n  protected defaults: PartialBindings = {};\n  protected components: Map<any, Array<ComponentRef<T>>> = new Map();\n\n  constructor(public injectionService: InjectionService) {}\n\n  getByType(type: Type<T> = this.type) {\n    return this.components.get(type);\n  }\n\n  create(bindings: object): ComponentRef<T> {\n    return this.createByType(this.type, bindings);\n  }\n\n  createByType(type: Type<T>, bindings: PartialBindings): ComponentRef<T> {\n    bindings = this.assignDefaults(bindings);\n\n    const component = this.injectComponent(type, bindings);\n    this.register(type, component);\n\n    return component;\n  }\n\n  destroy(instance: ComponentRef<T>): void {\n    const compsByType = this.components.get(instance.componentType);\n\n    if (compsByType && compsByType.length) {\n      const idx = compsByType.indexOf(instance);\n\n      if (idx > -1) {\n        const component = compsByType[idx];\n        component.destroy();\n        compsByType.splice(idx, 1);\n      }\n    }\n  }\n\n  destroyAll(): void {\n    this.destroyByType(this.type);\n  }\n\n  destroyByType(type: Type<T>): void {\n    const comps = this.components.get(type);\n\n    if (comps && comps.length) {\n      let i = comps.length - 1;\n      while (i >= 0) {\n        this.destroy(comps[i--]);\n      }\n    }\n  }\n\n  protected injectComponent(type: Type<T>, bindings: PartialBindings): ComponentRef<T> {\n    return this.injectionService.appendComponent(type, bindings);\n  }\n\n  protected assignDefaults(bindings: PartialBindings): PartialBindings {\n    const inputs = { ...this.defaults.inputs };\n    const outputs = { ...this.defaults.outputs };\n\n    if (!bindings.inputs && !bindings.outputs) {\n      bindings = { inputs: bindings };\n    }\n\n    if (inputs) {\n      bindings.inputs = { ...inputs, ...bindings.inputs };\n    }\n\n    if (outputs) {\n      bindings.outputs = { ...outputs, ...bindings.outputs };\n    }\n\n    return bindings;\n  }\n\n  protected register(type: Type<T>, component: ComponentRef<T>): void {\n    if (!this.components.has(type)) {\n      this.components.set(type, []);\n    }\n\n    const types = this.components.get(type);\n    types.push(component);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InjectionService } from './injection.service';\nimport { TooltipContentComponent } from './tooltip.component';\nimport { InjectionRegisteryService } from './injection-registery.service';\n@Injectable()\nexport class TooltipService extends InjectionRegisteryService<TooltipContentComponent> {\n  type: any = TooltipContentComponent;\n\n  constructor(injectionService: InjectionService) {\n    super(injectionService);\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  ChangeDetectionStrategy,\n  EventEmitter,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { TooltipService } from '../tooltip/tooltip.service';\n\n@Component({\n  providers: [TooltipService],\n  selector: 'ngx-charts-chart',\n  template: `\n    <div class=\"ngx-charts-outer\" [style.width.px]=\"view[0]\" [@animationState]=\"'active'\" [@.disabled]=\"!animations\">\n      <svg class=\"ngx-charts\" [attr.width]=\"chartWidth\" [attr.height]=\"view[1]\">\n        <ng-content></ng-content>\n      </svg>\n      <ngx-charts-scale-legend\n        *ngIf=\"showLegend && legendType === 'scaleLegend'\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\n        [valueRange]=\"legendOptions.domain\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n      >\n      </ngx-charts-scale-legend>\n      <ngx-charts-legend\n        *ngIf=\"showLegend && legendType === 'legend'\"\n        class=\"chart-legend\"\n        [horizontal]=\"legendOptions && legendOptions.position === 'below'\"\n        [data]=\"legendOptions.domain\"\n        [title]=\"legendOptions.title\"\n        [colors]=\"legendOptions.colors\"\n        [height]=\"view[1]\"\n        [width]=\"legendWidth\"\n        [activeEntries]=\"activeEntries\"\n        (labelClick)=\"legendLabelClick.emit($event)\"\n        (labelActivate)=\"legendLabelActivate.emit($event)\"\n        (labelDeactivate)=\"legendLabelDeactivate.emit($event)\"\n      >\n      </ngx-charts-legend>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [style({ opacity: 0 }), animate('500ms 100ms', style({ opacity: 1 }))])\n    ])\n  ]\n})\nexport class ChartComponent implements OnChanges {\n  @Input() view;\n  @Input() showLegend = false;\n  @Input() legendOptions: any;\n\n  // remove\n  @Input() data;\n  @Input() legendData;\n  @Input() legendType: any;\n  @Input() colors: any;\n  @Input() activeEntries: any[];\n  @Input() animations: boolean = true;\n\n  @Output() legendLabelClick: EventEmitter<any> = new EventEmitter();\n  @Output() legendLabelActivate: EventEmitter<any> = new EventEmitter();\n  @Output() legendLabelDeactivate: EventEmitter<any> = new EventEmitter();\n\n  chartWidth: any;\n  title: any;\n  legendWidth: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    let legendColumns = 0;\n    if (this.showLegend) {\n      this.legendType = this.getLegendType();\n\n      if (!this.legendOptions || this.legendOptions.position === 'right') {\n        if (this.legendType === 'scaleLegend') {\n          legendColumns = 1;\n        } else {\n          legendColumns = 2;\n        }\n      }\n    }\n\n    const chartColumns = 12 - legendColumns;\n\n    this.chartWidth = Math.floor((this.view[0] * chartColumns) / 12.0);\n    this.legendWidth =\n      !this.legendOptions || this.legendOptions.position === 'right'\n        ? Math.floor((this.view[0] * legendColumns) / 12.0)\n        : this.chartWidth;\n  }\n\n  getLegendType(): string {\n    if (this.legendOptions.scaleType === 'linear') {\n      return 'scaleLegend';\n    } else {\n      return 'legend';\n    }\n  }\n}\n","import { Output, EventEmitter, NgZone, Directive, ElementRef } from '@angular/core';\n\n/**\n * Visibility Observer\n */\n@Directive({\n  selector: 'visibility-observer'\n})\nexport class VisibilityObserver {\n  @Output() visible: EventEmitter<any> = new EventEmitter();\n\n  timeout: any;\n  isVisible: boolean = false;\n\n  constructor(private element: ElementRef, private zone: NgZone) {\n    this.runCheck();\n  }\n\n  destroy(): void {\n    clearTimeout(this.timeout);\n  }\n\n  onVisibilityChange(): void {\n    // trigger zone recalc for columns\n    this.zone.run(() => {\n      this.isVisible = true;\n      this.visible.emit(true);\n    });\n  }\n\n  runCheck(): void {\n    const check = () => {\n      if (!this.element) {\n        return;\n      }\n\n      // https://davidwalsh.name/offsetheight-visibility\n      const { offsetHeight, offsetWidth } = this.element.nativeElement;\n\n      if (offsetHeight && offsetWidth) {\n        clearTimeout(this.timeout);\n        this.onVisibilityChange();\n      } else {\n        clearTimeout(this.timeout);\n        this.zone.runOutsideAngular(() => {\n          this.timeout = setTimeout(() => check(), 100);\n        });\n      }\n    };\n\n    this.zone.runOutsideAngular(() => {\n      this.timeout = setTimeout(() => check());\n    });\n  }\n}\n","import {\n  ElementRef,\n  NgZone,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\nimport { fromEvent as observableFromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { VisibilityObserver } from '../utils/visibility-observer';\n\n@Component({\n  selector: 'base-chart',\n  template: `\n    <div></div>\n  `\n})\nexport class BaseChartComponent implements OnChanges, AfterViewInit, OnDestroy {\n  @Input() results: any;\n  @Input() view: [number, number];\n  @Input() scheme: any = 'cool';\n  @Input() schemeType: string = 'ordinal';\n  @Input() customColors: any;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  width: number;\n  height: number;\n  resizeSubscription: any;\n  visibilityObserver: VisibilityObserver;\n\n  constructor(protected chartElement: ElementRef, protected zone: NgZone, protected cd: ChangeDetectorRef) {}\n\n  ngAfterViewInit(): void {\n    this.bindWindowResizeEvent();\n\n    // listen for visibility of the element for hidden by default scenario\n    this.visibilityObserver = new VisibilityObserver(this.chartElement, this.zone);\n    this.visibilityObserver.visible.subscribe(this.update.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.unbindEvents();\n    if (this.visibilityObserver) {\n      this.visibilityObserver.visible.unsubscribe();\n      this.visibilityObserver.destroy();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    if (this.results) {\n      this.results = this.cloneData(this.results);\n    } else {\n      this.results = [];\n    }\n\n    if (this.view) {\n      this.width = this.view[0];\n      this.height = this.view[1];\n    } else {\n      const dims = this.getContainerDims();\n      if (dims) {\n        this.width = dims.width;\n        this.height = dims.height;\n      }\n    }\n\n    // default values if width or height are 0 or undefined\n    if (!this.width) {\n      this.width = 600;\n    }\n\n    if (!this.height) {\n      this.height = 400;\n    }\n\n    this.width = Math.floor(this.width);\n    this.height = Math.floor(this.height);\n\n    if (this.cd) {\n      this.cd.markForCheck();\n    }\n  }\n\n  getContainerDims(): any {\n    let width;\n    let height;\n    const hostElem = this.chartElement.nativeElement;\n\n    if (hostElem.parentNode !== null) {\n      // Get the container dimensions\n      const dims = hostElem.parentNode.getBoundingClientRect();\n      width = dims.width;\n      height = dims.height;\n    }\n\n    if (width && height) {\n      return { width, height };\n    }\n\n    return null;\n  }\n\n  /**\n   * Converts all date objects that appear as name\n   * into formatted date strings\n   */\n  formatDates(): void {\n    for (let i = 0; i < this.results.length; i++) {\n      const g = this.results[i];\n      g.label = g.name;\n      if (g.label instanceof Date) {\n        g.label = g.label.toLocaleDateString();\n      }\n\n      if (g.series) {\n        for (let j = 0; j < g.series.length; j++) {\n          const d = g.series[j];\n          d.label = d.name;\n          if (d.label instanceof Date) {\n            d.label = d.label.toLocaleDateString();\n          }\n        }\n      }\n    }\n  }\n\n  protected unbindEvents(): void {\n    if (this.resizeSubscription) {\n      this.resizeSubscription.unsubscribe();\n    }\n  }\n\n  private bindWindowResizeEvent(): void {\n    const source = observableFromEvent(window, 'resize');\n    const subscription = source.pipe(debounceTime(200)).subscribe(e => {\n      this.update();\n      if (this.cd) {\n        this.cd.markForCheck();\n      }\n    });\n    this.resizeSubscription = subscription;\n  }\n\n  /**\n   * Clones the data into a new object\n   *\n   * @memberOf BaseChart\n   */\n  private cloneData(data): any {\n    const results = [];\n\n    for (const item of data) {\n      const copy = {\n        name: item['name']\n      };\n\n      if (item['value'] !== undefined) {\n        copy['value'] = item['value'];\n      }\n\n      if (item['series'] !== undefined) {\n        copy['series'] = [];\n        for (const seriesItem of item['series']) {\n          const seriesItemCopy = Object.assign({}, seriesItem);\n          copy['series'].push(seriesItemCopy);\n        }\n      }\n\n      if (item['extra'] !== undefined) {\n        copy['extra'] = JSON.parse(JSON.stringify(item['extra']));\n      }\n\n      results.push(copy);\n    }\n\n    return results;\n  }\n}\n","import { Component, Input, ElementRef, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-axis-label]',\n  template: `\n    <svg:text\n      [attr.stroke-width]=\"strokeWidth\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n    >\n      {{ label }}\n    </svg:text>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AxisLabelComponent implements OnChanges {\n  @Input() orient;\n  @Input() label;\n  @Input() offset;\n  @Input() width;\n  @Input() height;\n\n  x: any;\n  y: any;\n  transform: any;\n  strokeWidth: any;\n  textAnchor: any;\n  element: ElementRef;\n  textHeight = 25;\n  margin = 5;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.strokeWidth = '0.01';\n    this.textAnchor = 'middle';\n    this.transform = '';\n\n    switch (this.orient) {\n      case 'top':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'bottom':\n        this.y = this.offset;\n        this.x = this.width / 2;\n        break;\n      case 'left':\n        this.y = -(this.offset + this.textHeight + this.margin);\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      case 'right':\n        this.y = this.offset + this.margin;\n        this.x = -this.height / 2;\n        this.transform = 'rotate(270)';\n        break;\n      default:\n    }\n  }\n}\n","export function trimLabel(s, max = 16): string {\n  if (typeof s !== 'string') {\n    if (typeof s === 'number') {\n      return s + '';\n    } else {\n      return '';\n    }\n  }\n\n  s = s.trim();\n  if (s.length <= max) {\n    return s;\n  } else {\n    return `${s.slice(0, max)}...`;\n  }\n}\n","export function reduceTicks(ticks, maxTicks) {\n  if (ticks.length > maxTicks) {\n    const reduced = [];\n    const modulus = Math.floor(ticks.length / maxTicks);\n    for (let i = 0; i < ticks.length; i++) {\n      if (i % modulus === 0) {\n        reduced.push(ticks[i]);\n      }\n    }\n    ticks = reduced;\n  }\n\n  return ticks;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ElementRef,\n  ViewChild,\n  SimpleChanges,\n  AfterViewInit,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { reduceTicks } from './ticks.helper';\n\n@Component({\n  selector: 'g[ngx-charts-x-axis-ticks]',\n  template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"tickTransform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.text-anchor]=\"textAnchor\"\n          [attr.transform]=\"textTransform\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"tickTransform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line class=\"gridline-path gridline-path-vertical\" [attr.y1]=\"-gridLineHeight\" y2=\"0\" />\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class XAxisTicksComponent implements OnChanges, AfterViewInit {\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickValues: any[];\n  @Input() tickStroke = '#ccc';\n  @Input() trimTicks: boolean = true;\n  @Input() maxTickLength: number = 16;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineHeight;\n  @Input() width;\n  @Input() rotateTicks: boolean = true;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  verticalSpacing: number = 20;\n  rotateLabels: boolean = false;\n  innerTickSize: number = 6;\n  outerTickSize: number = 6;\n  tickPadding: number = 3;\n  textAnchor: string = 'middle';\n  maxTicksLength: number = 0;\n  maxAllowedLength: number = 16;\n  adjustedScale: any;\n  textTransform: any;\n  ticks: any;\n  tickFormat: (o: any) => any;\n  height: number = 0;\n\n  @ViewChild('ticksel') ticksElement: ElementRef;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.updateDims());\n  }\n\n  updateDims(): void {\n    const height = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().height, 10);\n    if (height !== this.height) {\n      this.height = height;\n      this.dimensionsChanged.emit({ height });\n      setTimeout(() => this.updateDims());\n    }\n  }\n\n  update(): void {\n    const scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function(d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n    const angle = this.rotateTicks ? this.getRotationAngle(this.ticks) : null;\n\n    this.adjustedScale = this.scale.bandwidth\n      ? function(d) {\n          return this.scale(d) + this.scale.bandwidth() * 0.5;\n        }\n      : this.scale;\n\n    this.textTransform = '';\n    if (angle && angle !== 0) {\n      this.textTransform = `rotate(${angle})`;\n      this.textAnchor = 'end';\n      this.verticalSpacing = 10;\n    } else {\n      this.textAnchor = 'middle';\n    }\n\n    setTimeout(() => this.updateDims());\n  }\n\n  getRotationAngle(ticks): number {\n    let angle = 0;\n    this.maxTicksLength = 0;\n    for (let i = 0; i < ticks.length; i++) {\n      const tick = this.tickFormat(ticks[i]).toString();\n      let tickLength = tick.length;\n      if (this.trimTicks) {\n        tickLength = this.tickTrim(tick).length;\n      }\n\n      if (tickLength > this.maxTicksLength) {\n        this.maxTicksLength = tickLength;\n      }\n    }\n\n    const len = Math.min(this.maxTicksLength, this.maxAllowedLength);\n    const charWidth = 8; // need to measure this\n    const wordWidth = len * charWidth;\n\n    let baseWidth = wordWidth;\n    const maxBaseWidth = Math.floor(this.width / ticks.length);\n\n    // calculate optimal angle\n    while (baseWidth > maxBaseWidth && angle > -90) {\n      angle -= 30;\n      baseWidth = Math.cos(angle * (Math.PI / 180)) * wordWidth;\n    }\n\n    return angle;\n  }\n\n  getTicks() {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(100);\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks(tickWidth: number): number {\n    return Math.floor(this.width / tickWidth);\n  }\n\n  tickTransform(tick): string {\n    return 'translate(' + this.adjustedScale(tick) + ',' + this.verticalSpacing + ')';\n  }\n\n  gridLineTransform(): string {\n    return `translate(0,${-this.verticalSpacing - 5})`;\n  }\n\n  tickTrim(label: string): string {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n}\n","import {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\n\n@Component({\n  selector: 'g[ngx-charts-x-axis]',\n  template: `\n    <svg:g [attr.class]=\"xAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-x-axis-ticks\n        *ngIf=\"xScale\"\n        [trimTicks]=\"trimTicks\"\n        [rotateTicks]=\"rotateTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"xScale\"\n        [orient]=\"xOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineHeight]=\"dims.height\"\n        [width]=\"dims.width\"\n        [tickValues]=\"ticks\"\n        (dimensionsChanged)=\"emitTicksHeight($event)\"\n      />\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"'bottom'\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class XAxisComponent implements OnChanges {\n  @Input() xScale;\n  @Input() dims;\n  @Input() trimTicks: boolean;\n  @Input() rotateTicks: boolean = true;\n  @Input() maxTickLength: number;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() ticks: any[];\n  @Input() xAxisTickInterval;\n  @Input() xAxisTickCount: any;\n  @Input() xOrient: string = 'bottom';\n  @Input() xAxisOffset: number = 0;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  xAxisClassName: string = 'x axis';\n\n  tickArguments: any;\n  transform: any;\n  labelOffset: number = 0;\n  fill: string = 'none';\n  stroke: string = 'stroke';\n  tickStroke: string = '#ccc';\n  strokeWidth: string = 'none';\n  padding: number = 5;\n\n  @ViewChild(XAxisTicksComponent) ticksComponent: XAxisTicksComponent;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.transform = `translate(0,${this.xAxisOffset + this.padding + this.dims.height})`;\n\n    if (typeof this.xAxisTickCount !== 'undefined') {\n      this.tickArguments = [this.xAxisTickCount];\n    }\n  }\n\n  emitTicksHeight({ height }): void {\n    const newLabelOffset = height + 25 + 5;\n    if (newLabelOffset !== this.labelOffset) {\n      this.labelOffset = newLabelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({ height });\n      }, 0);\n    }\n  }\n}\n","/**\n * Generates a rounded rectanglar path\n *\n * @export\n * @param x, y, w, h, r, tl, tr, bl, br\n */\nexport function roundedRect(x, y, w, h, r, [tl, tr, bl, br]: boolean[]) {\n  let retval = '';\n\n  w = Math.floor(w);\n  h = Math.floor(h);\n\n  w = w === 0 ? 1 : w;\n  h = h === 0 ? 1 : h;\n\n  retval = `M${[x + r, y]}`;\n  retval += `h${w - 2 * r}`;\n\n  if (tr) {\n    retval += `a${[r, r]} 0 0 1 ${[r, r]}`;\n  } else {\n    retval += `h${r}v${r}`;\n  }\n\n  retval += `v${h - 2 * r}`;\n\n  if (br) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, r]}`;\n  } else {\n    retval += `v${r}h${-r}`;\n  }\n\n  retval += `h${2 * r - w}`;\n\n  if (bl) {\n    retval += `a${[r, r]} 0 0 1 ${[-r, -r]}`;\n  } else {\n    retval += `h${-r}v${-r}`;\n  }\n\n  retval += `v${2 * r - h}`;\n\n  if (tl) {\n    retval += `a${[r, r]} 0 0 1 ${[r, -r]}`;\n  } else {\n    retval += `v${-r}h${r}`;\n  }\n\n  retval += `z`;\n\n  return retval;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  OnChanges,\n  ElementRef,\n  ViewChild,\n  EventEmitter,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  SimpleChanges\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { reduceTicks } from './ticks.helper';\nimport { roundedRect } from '../../common/shape.helper';\n\n@Component({\n  selector: 'g[ngx-charts-y-axis-ticks]',\n  template: `\n    <svg:g #ticksel>\n      <svg:g *ngFor=\"let tick of ticks\" class=\"tick\" [attr.transform]=\"transform(tick)\">\n        <title>{{ tickFormat(tick) }}</title>\n        <svg:text\n          stroke-width=\"0.01\"\n          [attr.dy]=\"dy\"\n          [attr.x]=\"x1\"\n          [attr.y]=\"y1\"\n          [attr.text-anchor]=\"textAnchor\"\n          [style.font-size]=\"'12px'\"\n        >\n          {{ tickTrim(tickFormat(tick)) }}\n        </svg:text>\n      </svg:g>\n    </svg:g>\n\n    <svg:path\n      *ngIf=\"referenceLineLength > 1 && refMax && refMin && showRefLines\"\n      class=\"reference-area\"\n      [attr.d]=\"referenceAreaPath\"\n      [attr.transform]=\"gridLineTransform()\"\n    />\n    <svg:g *ngFor=\"let tick of ticks\" [attr.transform]=\"transform(tick)\">\n      <svg:g *ngIf=\"showGridLines\" [attr.transform]=\"gridLineTransform()\">\n        <svg:line\n          *ngIf=\"orient === 'left'\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n        />\n        <svg:line\n          *ngIf=\"orient === 'right'\"\n          class=\"gridline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"-gridLineWidth\"\n        />\n      </svg:g>\n    </svg:g>\n\n    <svg:g *ngFor=\"let refLine of referenceLines\">\n      <svg:g *ngIf=\"showRefLines\" [attr.transform]=\"transform(refLine.value)\">\n        <svg:line\n          class=\"refline-path gridline-path-horizontal\"\n          x1=\"0\"\n          [attr.x2]=\"gridLineWidth\"\n          [attr.transform]=\"gridLineTransform()\"\n        />\n        <svg:g *ngIf=\"showRefLabels\">\n          <title>{{ tickTrim(tickFormat(refLine.value)) }}</title>\n          <svg:text\n            class=\"refline-label\"\n            [attr.dy]=\"dy\"\n            [attr.y]=\"-6\"\n            [attr.x]=\"gridLineWidth\"\n            [attr.text-anchor]=\"textAnchor\"\n          >\n            {{ refLine.name }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YAxisTicksComponent implements OnChanges, AfterViewInit {\n  @Input() scale;\n  @Input() orient;\n  @Input() tickArguments = [5];\n  @Input() tickValues: any[];\n  @Input() tickStroke = '#ccc';\n  @Input() trimTicks: boolean = true;\n  @Input() maxTickLength: number = 16;\n  @Input() tickFormatting;\n  @Input() showGridLines = false;\n  @Input() gridLineWidth;\n  @Input() height;\n  @Input() referenceLines;\n  @Input() showRefLabels: boolean = false;\n  @Input() showRefLines: boolean = false;\n\n  @Output() dimensionsChanged = new EventEmitter();\n\n  innerTickSize: any = 6;\n  tickPadding: any = 3;\n  tickSpacing: any;\n  verticalSpacing: number = 20;\n  textAnchor: any = 'middle';\n  dy: any;\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n  adjustedScale: any;\n  transform: (o: any) => string;\n  tickFormat: (o: any) => string;\n  ticks: any;\n  width: number = 0;\n  outerTickSize: number = 6;\n  rotateLabels: boolean = false;\n  refMax: number;\n  refMin: number;\n  referenceLineLength: number = 0;\n  referenceAreaPath: string;\n\n  @ViewChild('ticksel') ticksElement: ElementRef;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.updateDims());\n  }\n\n  updateDims(): void {\n    const width = parseInt(this.ticksElement.nativeElement.getBoundingClientRect().width, 10);\n    if (width !== this.width) {\n      this.width = width;\n      this.dimensionsChanged.emit({ width });\n      setTimeout(() => this.updateDims());\n    }\n  }\n\n  update(): void {\n    let scale;\n    const sign = this.orient === 'top' || this.orient === 'right' ? -1 : 1;\n    this.tickSpacing = Math.max(this.innerTickSize, 0) + this.tickPadding;\n\n    scale = this.scale;\n    this.ticks = this.getTicks();\n\n    if (this.tickFormatting) {\n      this.tickFormat = this.tickFormatting;\n    } else if (scale.tickFormat) {\n      this.tickFormat = scale.tickFormat.apply(scale, this.tickArguments);\n    } else {\n      this.tickFormat = function(d) {\n        if (d.constructor.name === 'Date') {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n    this.adjustedScale = scale.bandwidth\n      ? function(d) {\n          return scale(d) + scale.bandwidth() * 0.5;\n        }\n      : scale;\n\n    if (this.showRefLines && this.referenceLines) {\n      this.setReferencelines();\n    }\n\n    switch (this.orient) {\n      case 'top':\n        this.transform = function(tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = 'middle';\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case 'bottom':\n        this.transform = function(tick) {\n          return 'translate(' + this.adjustedScale(tick) + ',0)';\n        };\n        this.textAnchor = 'middle';\n        this.y2 = this.innerTickSize * sign;\n        this.y1 = this.tickSpacing * sign;\n        this.dy = sign < 0 ? '0em' : '.71em';\n        break;\n      case 'left':\n        this.transform = function(tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = 'end';\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      case 'right':\n        this.transform = function(tick) {\n          return 'translate(0,' + this.adjustedScale(tick) + ')';\n        };\n        this.textAnchor = 'start';\n        this.x2 = this.innerTickSize * -sign;\n        this.x1 = this.tickSpacing * -sign;\n        this.dy = '.32em';\n        break;\n      default:\n    }\n    setTimeout(() => this.updateDims());\n  }\n\n  setReferencelines(): void {\n    this.refMin = this.adjustedScale(\n      Math.min.apply(\n        null,\n        this.referenceLines.map(item => item.value)\n      )\n    );\n    this.refMax = this.adjustedScale(\n      Math.max.apply(\n        null,\n        this.referenceLines.map(item => item.value)\n      )\n    );\n    this.referenceLineLength = this.referenceLines.length;\n\n    this.referenceAreaPath = roundedRect(0, this.refMax, this.gridLineWidth, this.refMin - this.refMax, 0, [\n      false,\n      false,\n      false,\n      false\n    ]);\n  }\n\n  getTicks(): any {\n    let ticks;\n    const maxTicks = this.getMaxTicks(20);\n    const maxScaleTicks = this.getMaxTicks(50);\n\n    if (this.tickValues) {\n      ticks = this.tickValues;\n    } else if (this.scale.ticks) {\n      ticks = this.scale.ticks.apply(this.scale, [maxScaleTicks]);\n    } else {\n      ticks = this.scale.domain();\n      ticks = reduceTicks(ticks, maxTicks);\n    }\n\n    return ticks;\n  }\n\n  getMaxTicks(tickHeight: number): number {\n    return Math.floor(this.height / tickHeight);\n  }\n\n  tickTransform(tick): string {\n    return `translate(${this.adjustedScale(tick)},${this.verticalSpacing})`;\n  }\n\n  gridLineTransform(): string {\n    return `translate(5,0)`;\n  }\n\n  tickTrim(label: string): string {\n    return this.trimTicks ? trimLabel(label, this.maxTickLength) : label;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ViewChild,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\n\n@Component({\n  selector: 'g[ngx-charts-y-axis]',\n  template: `\n    <svg:g [attr.class]=\"yAxisClassName\" [attr.transform]=\"transform\">\n      <svg:g\n        ngx-charts-y-axis-ticks\n        *ngIf=\"yScale\"\n        [trimTicks]=\"trimTicks\"\n        [maxTickLength]=\"maxTickLength\"\n        [tickFormatting]=\"tickFormatting\"\n        [tickArguments]=\"tickArguments\"\n        [tickValues]=\"ticks\"\n        [tickStroke]=\"tickStroke\"\n        [scale]=\"yScale\"\n        [orient]=\"yOrient\"\n        [showGridLines]=\"showGridLines\"\n        [gridLineWidth]=\"dims.width\"\n        [referenceLines]=\"referenceLines\"\n        [showRefLines]=\"showRefLines\"\n        [showRefLabels]=\"showRefLabels\"\n        [height]=\"dims.height\"\n        (dimensionsChanged)=\"emitTicksWidth($event)\"\n      />\n\n      <svg:g\n        ngx-charts-axis-label\n        *ngIf=\"showLabel\"\n        [label]=\"labelText\"\n        [offset]=\"labelOffset\"\n        [orient]=\"yOrient\"\n        [height]=\"dims.height\"\n        [width]=\"dims.width\"\n      ></svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class YAxisComponent implements OnChanges {\n  @Input() yScale;\n  @Input() dims;\n  @Input() trimTicks: boolean;\n  @Input() maxTickLength: number;\n  @Input() tickFormatting;\n  @Input() ticks: any[];\n  @Input() showGridLines = false;\n  @Input() showLabel;\n  @Input() labelText;\n  @Input() yAxisTickInterval;\n  @Input() yAxisTickCount: any;\n  @Input() yOrient: string = 'left';\n  @Input() referenceLines;\n  @Input() showRefLines;\n  @Input() showRefLabels;\n  @Input() yAxisOffset: number = 0;\n  @Output() dimensionsChanged = new EventEmitter();\n\n  yAxisClassName: string = 'y axis';\n  tickArguments: any;\n  offset: any;\n  transform: any;\n  labelOffset: number = 15;\n  fill: string = 'none';\n  stroke: string = '#CCC';\n  tickStroke: string = '#CCC';\n  strokeWidth: number = 1;\n  padding: number = 5;\n\n  @ViewChild(YAxisTicksComponent) ticksComponent: YAxisTicksComponent;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.offset = -(this.yAxisOffset + this.padding);\n    if (this.yOrient === 'right') {\n      this.labelOffset = 65;\n      this.transform = `translate(${this.offset + this.dims.width} , 0)`;\n    } else {\n      this.offset = this.offset;\n      this.transform = `translate(${this.offset} , 0)`;\n    }\n\n    if (this.yAxisTickCount !== undefined) {\n      this.tickArguments = [this.yAxisTickCount];\n    }\n  }\n\n  emitTicksWidth({ width }): void {\n    if (width !== this.labelOffset && this.yOrient === 'right') {\n      this.labelOffset = width + this.labelOffset;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({ width });\n      }, 0);\n    } else if (width !== this.labelOffset) {\n      this.labelOffset = width;\n      setTimeout(() => {\n        this.dimensionsChanged.emit({ width });\n      }, 0);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AxisLabelComponent } from './axis-label.component';\nimport { XAxisComponent } from './x-axis.component';\nimport { XAxisTicksComponent } from './x-axis-ticks.component';\nimport { YAxisComponent } from './y-axis.component';\nimport { YAxisTicksComponent } from './y-axis-ticks.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent],\n  exports: [AxisLabelComponent, XAxisComponent, XAxisTicksComponent, YAxisComponent, YAxisTicksComponent]\n})\nexport class AxesModule {}\n","export enum StyleTypes {\n  popover = 'popover' as any,\n  tooltip = 'tooltip' as any\n}\n","export enum AlignmentTypes {\n  left = 'left' as any,\n  center = 'center' as any,\n  right = 'right' as any\n}\n","export enum ShowTypes {\n  all = 'all' as any,\n  focus = 'focus' as any,\n  mouseover = 'mouseover' as any\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewContainerRef,\n  Renderer2,\n  OnDestroy\n} from '@angular/core';\n\nimport { PlacementTypes } from './position';\nimport { StyleTypes } from './style.type';\nimport { AlignmentTypes } from './alignment.type';\nimport { ShowTypes } from './show.type';\n\nimport { TooltipService } from './tooltip.service';\n\n@Directive({ selector: '[ngx-tooltip]' })\nexport class TooltipDirective implements OnDestroy {\n  @Input() tooltipCssClass: string = '';\n  @Input() tooltipTitle: string = '';\n  @Input() tooltipAppendToBody: boolean = true;\n  @Input() tooltipSpacing: number = 10;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipShowCaret: boolean = true;\n  @Input() tooltipPlacement: PlacementTypes = PlacementTypes.top;\n  @Input() tooltipAlignment: AlignmentTypes = AlignmentTypes.center;\n  @Input() tooltipType: StyleTypes = StyleTypes.popover;\n  @Input() tooltipCloseOnClickOutside: boolean = true;\n  @Input() tooltipCloseOnMouseLeave: boolean = true;\n  @Input() tooltipHideTimeout: number = 300;\n  @Input() tooltipShowTimeout: number = 100;\n  @Input() tooltipTemplate: any;\n  @Input() tooltipShowEvent: ShowTypes = ShowTypes.all;\n  @Input() tooltipContext: any;\n  @Input() tooltipImmediateExit: boolean = false;\n\n  @Output() show = new EventEmitter();\n  @Output() hide = new EventEmitter();\n\n  private get listensForFocus(): boolean {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.focus;\n  }\n\n  private get listensForHover(): boolean {\n    return this.tooltipShowEvent === ShowTypes.all || this.tooltipShowEvent === ShowTypes.mouseover;\n  }\n\n  private component: any;\n  private timeout: any;\n  private mouseLeaveContentEvent: any;\n  private mouseEnterContentEvent: any;\n  private documentClickEvent: any;\n\n  constructor(\n    private tooltipService: TooltipService,\n    private viewContainerRef: ViewContainerRef,\n    private renderer: Renderer2\n  ) {}\n\n  ngOnDestroy(): void {\n    this.hideTooltip(true);\n  }\n\n  @HostListener('focusin')\n  onFocus(): void {\n    if (this.listensForFocus) {\n      this.showTooltip();\n    }\n  }\n\n  @HostListener('blur')\n  onBlur(): void {\n    if (this.listensForFocus) {\n      this.hideTooltip(true);\n    }\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    if (this.listensForHover) {\n      this.showTooltip();\n    }\n  }\n\n  @HostListener('mouseleave', ['$event.target'])\n  onMouseLeave(target): void {\n    if (this.listensForHover && this.tooltipCloseOnMouseLeave) {\n      clearTimeout(this.timeout);\n\n      if (this.component) {\n        const contentDom = this.component.instance.element.nativeElement;\n        const contains = contentDom.contains(target);\n        if (contains) return;\n      }\n\n      this.hideTooltip(this.tooltipImmediateExit);\n    }\n  }\n\n  @HostListener('click')\n  onMouseClick() {\n    if (this.listensForHover) {\n      this.hideTooltip(true);\n    }\n  }\n\n  showTooltip(immediate?: boolean): void {\n    if (this.component || this.tooltipDisabled) return;\n\n    const time = immediate ? 0 : this.tooltipShowTimeout;\n\n    clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.tooltipService.destroyAll();\n\n      const options = this.createBoundOptions();\n      this.component = this.tooltipService.create(options);\n\n      // add a tiny timeout to avoid event re-triggers\n      setTimeout(() => {\n        if (this.component) {\n          this.addHideListeners(this.component.instance.element.nativeElement);\n        }\n      }, 10);\n\n      this.show.emit(true);\n    }, time);\n  }\n\n  addHideListeners(tooltip): void {\n    // on mouse enter, cancel the hide triggered by the leave\n    this.mouseEnterContentEvent = this.renderer.listen(tooltip, 'mouseenter', () => {\n      clearTimeout(this.timeout);\n    });\n\n    // content mouse leave listener\n    if (this.tooltipCloseOnMouseLeave) {\n      this.mouseLeaveContentEvent = this.renderer.listen(tooltip, 'mouseleave', () => {\n        this.hideTooltip(this.tooltipImmediateExit);\n      });\n    }\n\n    // content close on click outside\n    if (this.tooltipCloseOnClickOutside) {\n      this.documentClickEvent = this.renderer.listen(document, 'click', event => {\n        const contains = tooltip.contains(event.target);\n        if (!contains) this.hideTooltip();\n      });\n    }\n  }\n\n  hideTooltip(immediate: boolean = false): void {\n    if (!this.component) return;\n\n    const destroyFn = () => {\n      // remove events\n      if (this.mouseLeaveContentEvent) this.mouseLeaveContentEvent();\n      if (this.mouseEnterContentEvent) this.mouseEnterContentEvent();\n      if (this.documentClickEvent) this.documentClickEvent();\n\n      // emit events\n      this.hide.emit(true);\n\n      // destroy component\n      this.tooltipService.destroy(this.component);\n      this.component = undefined;\n    };\n\n    clearTimeout(this.timeout);\n    if (!immediate) {\n      this.timeout = setTimeout(destroyFn, this.tooltipHideTimeout);\n    } else {\n      destroyFn();\n    }\n  }\n\n  private createBoundOptions(): any {\n    return {\n      title: this.tooltipTitle,\n      template: this.tooltipTemplate,\n      host: this.viewContainerRef.element,\n      placement: this.tooltipPlacement,\n      alignment: this.tooltipAlignment,\n      type: this.tooltipType,\n      showCaret: this.tooltipShowCaret,\n      cssClass: this.tooltipCssClass,\n      spacing: this.tooltipSpacing,\n      context: this.tooltipContext\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TooltipDirective } from './tooltip.directive';\nimport { TooltipContentComponent } from './tooltip.component';\nimport { TooltipService } from './tooltip.service';\n\nimport { InjectionService } from './injection.service';\n\n@NgModule({\n  declarations: [TooltipContentComponent, TooltipDirective],\n  providers: [InjectionService, TooltipService],\n  exports: [TooltipContentComponent, TooltipDirective],\n  imports: [CommonModule],\n  entryComponents: [TooltipContentComponent]\n})\nexport class TooltipModule {}\n","/**\n * Formats a label given a date, number or string.\n *\n * @export\n */\nexport function formatLabel(label: any): string {\n  if (label instanceof Date) {\n    label = label.toLocaleDateString();\n  } else {\n    label = label.toLocaleString();\n  }\n\n  return label;\n}\n\n/**\n * Escapes a label.\n *\n * @export\n */\nexport function escapeLabel(label: any): string {\n  return label.toLocaleString().replace(/[&'`\"<>]/g, match => {\n    return {\n      '&': '&amp;',\n      // tslint:disable-next-line: quotemark\n      \"'\": '&#x27;',\n      '`': '&#x60;',\n      '\"': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;'\n    }[match];\n  });\n}\n","const cache = {};\n\n/**\n * Generates a short id.\n *\n * Description:\n *   A 4-character alphanumeric sequence (364 = 1.6 million)\n *   This should only be used for JavaScript specific models.\n *   http://stackoverflow.com/questions/6248666/how-to-generate-short-uid-like-ax4j9z-in-js\n *\n *   Example: `ebgf`\n */\nexport function id(): string {\n  let newId = ('0000' + ((Math.random() * Math.pow(36, 4)) << 0).toString(36)).slice(-4);\n\n  // append a 'a' because neo gets mad\n  newId = `a${newId}`;\n\n  // ensure not already used\n  if (!cache[newId]) {\n    cache[newId] = true;\n    return newId;\n  }\n\n  return id();\n}\n","import {\n  Component,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  OnChanges,\n  OnInit,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { formatLabel, escapeLabel } from '../common/label.helper';\nimport { id } from '../utils/id';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'g[ngx-charts-circle-series]',\n  template: `\n    <svg:g *ngIf=\"circle\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"circle.gradientStops\"\n        />\n      </defs>\n      <svg:rect\n        *ngIf=\"barVisible && type === 'standard'\"\n        [@animationState]=\"'active'\"\n        [attr.x]=\"circle.cx - circle.radius\"\n        [attr.y]=\"circle.cy\"\n        [attr.width]=\"circle.radius * 2\"\n        [attr.height]=\"circle.height\"\n        [attr.fill]=\"gradientFill\"\n        class=\"tooltip-bar\"\n      />\n      <svg:g\n        ngx-charts-circle\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circle.radius\"\n        [fill]=\"circle.color\"\n        [class.active]=\"isActive({ name: circle.seriesName })\"\n        [pointerEvents]=\"circle.value === 0 ? 'none' : 'all'\"\n        [data]=\"circle.value\"\n        [classNames]=\"circle.classNames\"\n        (select)=\"onClick(circle.data)\"\n        (activate)=\"activateCircle()\"\n        (deactivate)=\"deactivateCircle()\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({\n          opacity: 0\n        }),\n        animate(250, style({ opacity: 1 }))\n      ])\n    ])\n  ]\n})\nexport class CircleSeriesComponent implements OnChanges, OnInit {\n  @Input() data;\n  @Input() type = 'standard';\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors: ColorHelper;\n  @Input() scaleType;\n  @Input() visibleValue;\n  @Input() activeEntries: any[];\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  areaPath: any;\n  circle: any; // active circle\n  barVisible: boolean = false;\n  gradientId: string;\n  gradientFill: string;\n\n  ngOnInit() {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.circle = this.getActiveCircle();\n  }\n\n  getActiveCircle(): {} {\n    const indexActiveDataPoint = this.data.series.findIndex(d => {\n      const label = d.name;\n      return label && this.visibleValue && label.toString() === this.visibleValue.toString() && d.value !== undefined;\n    });\n\n    if (indexActiveDataPoint === -1) {\n      // No valid point is 'active/hovered over' at this moment.\n      return undefined;\n    }\n\n    return this.mapDataPointToCircle(this.data.series[indexActiveDataPoint], indexActiveDataPoint);\n  }\n\n  mapDataPointToCircle(d: any, i: number): any {\n    const seriesName = this.data.name;\n\n    const value = d.value;\n    const label = d.name;\n    const tooltipLabel = formatLabel(label);\n\n    let cx;\n    if (this.scaleType === 'time') {\n      cx = this.xScale(label);\n    } else if (this.scaleType === 'linear') {\n      cx = this.xScale(Number(label));\n    } else {\n      cx = this.xScale(label);\n    }\n\n    const cy = this.yScale(this.type === 'standard' ? value : d.d1);\n    const radius = 5;\n    const height = this.yScale.range()[0] - cy;\n    const opacity = 1;\n\n    let color;\n    if (this.colors.scaleType === 'linear') {\n      if (this.type === 'standard') {\n        color = this.colors.getColor(value);\n      } else {\n        color = this.colors.getColor(d.d1);\n      }\n    } else {\n      color = this.colors.getColor(seriesName);\n    }\n\n    const data = Object.assign({}, d, {\n      series: seriesName,\n      value,\n      name: label\n    });\n\n    return {\n      classNames: [`circle-data-${i}`],\n      value,\n      label,\n      data,\n      cx,\n      cy,\n      radius,\n      height,\n      tooltipLabel,\n      color,\n      opacity,\n      seriesName,\n      gradientStops: this.getGradientStops(color),\n      min: d.min,\n      max: d.max\n    };\n  }\n\n  getTooltipText({ tooltipLabel, value, seriesName, min, max }): string {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(seriesName)} â¢ ${escapeLabel(tooltipLabel)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}${this.getTooltipMinMaxText(min, max)}</span>\n    `;\n  }\n\n  getTooltipMinMaxText(min: any, max: any) {\n    if (min !== undefined || max !== undefined) {\n      let result = ' (';\n      if (min !== undefined) {\n        if (max === undefined) {\n          result += 'â¥';\n        }\n        result += min.toLocaleString();\n        if (max !== undefined) {\n          result += ' - ';\n        }\n      } else if (max !== undefined) {\n        result += 'â¤';\n      }\n      if (max !== undefined) {\n        result += max.toLocaleString();\n      }\n      result += ')';\n      return result;\n    } else {\n      return '';\n    }\n  }\n\n  getGradientStops(color) {\n    return [\n      {\n        offset: 0,\n        color,\n        opacity: 0.2\n      },\n      {\n        offset: 100,\n        color,\n        opacity: 1\n      }\n    ];\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activateCircle(): void {\n    this.barVisible = true;\n    this.activate.emit({ name: this.data.name });\n  }\n\n  deactivateCircle(): void {\n    this.barVisible = false;\n    this.circle.opacity = 0;\n    this.deactivate.emit({ name: this.data.name });\n  }\n}\n","import {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  HostListener\n} from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-circle]',\n  template: `\n    <svg:circle\n      [attr.cx]=\"cx\"\n      [attr.cy]=\"cy\"\n      [attr.r]=\"r\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      [attr.opacity]=\"circleOpacity\"\n      [attr.class]=\"classNames\"\n      [attr.pointer-events]=\"pointerEvents\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CircleComponent implements OnChanges {\n  @Input() cx;\n  @Input() cy;\n  @Input() r;\n  @Input() fill;\n  @Input() stroke;\n  @Input() data;\n  @Input() classNames;\n  @Input() circleOpacity;\n  @Input() pointerEvents;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  @HostListener('click')\n  onClick() {\n    this.select.emit(this.data);\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit(this.data);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit(this.data);\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.classNames = Array.isArray(this.classNames) ? this.classNames.join(' ') : '';\n    this.classNames += 'circle';\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-grid-panel]',\n  template: `\n    <svg:rect [attr.height]=\"height\" [attr.width]=\"width\" [attr.x]=\"x\" [attr.y]=\"y\" stroke=\"none\" class=\"gridpanel\" />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridPanelComponent {\n  @Input() path;\n  @Input() width;\n  @Input() height;\n  @Input() x;\n  @Input() y;\n}\n","import { Component, SimpleChanges, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-grid-panel-series]',\n  template: `\n    <svg:g\n      ngx-charts-grid-panel\n      *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\"\n    ></svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GridPanelSeriesComponent implements OnChanges {\n  gridPanels: any[];\n\n  @Input()\n  data;\n\n  @Input()\n  dims;\n\n  @Input()\n  xScale;\n\n  @Input()\n  yScale;\n\n  @Input()\n  orient;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.gridPanels = this.getGridPanels();\n  }\n\n  getGridPanels(): any[] {\n    return this.data.map(d => {\n      let offset;\n      let width;\n      let height;\n      let x;\n      let y;\n      let className = 'odd';\n\n      if (this.orient === 'vertical') {\n        const position: number = this.xScale(d.name);\n        const positionIndex = Number.parseInt((position / this.xScale.step()).toString(), 10);\n\n        if (positionIndex % 2 === 1) {\n          className = 'even';\n        }\n        offset = this.xScale.bandwidth() * this.xScale.paddingInner();\n        width = this.xScale.bandwidth() + offset;\n        height = this.dims.height;\n        x = this.xScale(d.name) - offset / 2;\n        y = 0;\n      } else if (this.orient === 'horizontal') {\n        const position = this.yScale(d.name);\n        const positionIndex = Number.parseInt((position / this.yScale.step()).toString(), 10);\n\n        if (positionIndex % 2 === 1) {\n          className = 'even';\n        }\n        offset = this.yScale.bandwidth() * this.yScale.paddingInner();\n\n        width = this.dims.width;\n        height = this.yScale.bandwidth() + offset;\n        x = 0;\n        y = this.yScale(d.name) - offset / 2;\n      }\n\n      return {\n        name: d.name,\n        class: className,\n        height,\n        width,\n        x,\n        y\n      };\n    });\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-svg-linear-gradient]',\n  template: `\n    <svg:linearGradient [id]=\"name\" [attr.x1]=\"x1\" [attr.y1]=\"y1\" [attr.x2]=\"x2\" [attr.y2]=\"y2\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:linearGradient>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SvgLinearGradientComponent implements OnChanges {\n  @Input() orientation = 'vertical';\n  @Input() name;\n  @Input() stops: any[];\n\n  x1: any;\n  x2: any;\n  y1: any;\n  y2: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.x1 = '0%';\n    this.x2 = '0%';\n    this.y1 = '0%';\n    this.y2 = '0%';\n\n    if (this.orientation === 'horizontal') {\n      this.x2 = '100%';\n    } else if (this.orientation === 'vertical') {\n      this.y1 = '100%';\n    }\n  }\n}\n","import { Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'g[ngx-charts-svg-radial-gradient]',\n  template: `\n    <svg:radialGradient [id]=\"name\" [attr.cx]=\"cx\" [attr.cy]=\"cy\" [attr.r]=\"r\" gradientUnits=\"userSpaceOnUse\">\n      <svg:stop\n        *ngFor=\"let stop of stops\"\n        [attr.offset]=\"stop.offset + '%'\"\n        [style.stop-color]=\"stop.color\"\n        [style.stop-opacity]=\"stop.opacity\"\n      />\n    </svg:radialGradient>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SvgRadialGradientComponent implements OnChanges {\n  @Input() color: string;\n  @Input() name: string;\n  @Input() startOpacity: number;\n  @Input() endOpacity = 1;\n  @Input() cx: number = 0;\n  @Input() cy: number = 0;\n\n  @Input()\n  get stops(): any[] {\n    return this.stopsInput || this.stopsDefault;\n  }\n\n  set stops(value: any[]) {\n    this.stopsInput = value;\n  }\n\n  r: string;\n\n  private stopsInput: any[];\n  private stopsDefault: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.r = '30%';\n    if ('color' in changes || 'startOpacity' in changes || 'endOpacity' in changes) {\n      this.stopsDefault = [\n        {\n          offset: 0,\n          color: this.color,\n          opacity: this.startOpacity\n        },\n        {\n          offset: 100,\n          color: this.color,\n          opacity: this.endOpacity\n        }\n      ];\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { select } from 'd3-selection';\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'g[ngx-charts-area]',\n  template: `\n    <svg:defs *ngIf=\"gradient\">\n      <svg:g ngx-charts-svg-linear-gradient orientation=\"vertical\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path class=\"area\" [attr.d]=\"areaPath\" [attr.fill]=\"gradient ? gradientFill : fill\" [style.opacity]=\"opacity\" />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaComponent implements OnChanges {\n  @Input() data;\n  @Input() path;\n  @Input() startingPath;\n  @Input() fill;\n  @Input() opacity = 1;\n  @Input() startOpacity = 0.5;\n  @Input() endOpacity = 1;\n  @Input() activeLabel;\n  @Input() gradient: boolean = false;\n  @Input() stops: any[];\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  element: HTMLElement;\n  gradientId: string;\n  gradientFill: string;\n  areaPath: string;\n  initialized: boolean = false;\n  gradientStops: any[];\n  hasGradient: boolean = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.initialized) {\n      this.loadAnimation();\n      this.initialized = true;\n    } else {\n      this.update();\n    }\n  }\n\n  update(): void {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n\n    this.updatePathEl();\n  }\n\n  loadAnimation(): void {\n    this.areaPath = this.startingPath;\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  updatePathEl(): void {\n    const node = select(this.element).select('.area');\n\n    if (this.animations) {\n      node\n        .transition()\n        .duration(750)\n        .attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: this.startOpacity\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: this.endOpacity\n      }\n    ];\n  }\n}\n","// Robert Penner's easeOutExpo\nfunction easeOutExpo(t, b, c, d) {\n  return (c * (-Math.pow(2, (-10 * t) / d) + 1) * 1024) / 1023 + b;\n}\n\n/**\n * Counts from a number to the end incrementally.\n */\nexport function count(countFrom, countTo, countDecimals, countDuration, callback) {\n  const startVal = Number(countFrom);\n  const endVal = Number(countTo);\n  const countDown = startVal > endVal;\n  const decimals = Math.max(0, countDecimals);\n  const dec = Math.pow(10, decimals);\n  const duration = Number(countDuration) * 1000;\n  let startTime;\n\n  function runCount(timestamp) {\n    let frameVal;\n    const progress = timestamp - startTime;\n\n    if (countDown) {\n      frameVal = startVal - easeOutExpo(progress, 0, startVal - endVal, duration);\n    } else {\n      frameVal = easeOutExpo(progress, startVal, endVal - startVal, duration);\n    }\n\n    if (countDown) {\n      frameVal = frameVal < endVal ? endVal : frameVal;\n    } else {\n      frameVal = frameVal > endVal ? endVal : frameVal;\n    }\n\n    frameVal = Math.round(frameVal * dec) / dec;\n\n    const tick = progress < duration;\n    callback({\n      value: frameVal,\n      progress,\n      timestamp,\n      finished: !tick\n    });\n\n    if (tick) {\n      return requestAnimationFrame(val => runCount(val));\n    }\n  }\n\n  return requestAnimationFrame(timestamp => {\n    startTime = timestamp;\n    return runCount(timestamp);\n  });\n}\n\n/**\n * Determine decimals places\n *\n * @export\n */\nexport function decimalChecker(countTo) {\n  const endVal = Number(countTo);\n\n  if (endVal % 1 !== 0 && Math.abs(endVal) <= 10) {\n    return 2;\n  }\n\n  return 0;\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef, OnDestroy, ElementRef } from '@angular/core';\nimport { count, decimalChecker } from './count.helper';\n\n/**\n * Count up component\n *\n * Loosely inspired by:\n *  - https://github.com/izupet/angular2-counto\n *  - https://inorganik.github.io/countUp.js/\n *\n * @export\n */\n@Component({\n  selector: '[ngx-charts-count-up]',\n  template: `\n    {{ value }}\n  `\n})\nexport class CountUpDirective implements OnDestroy {\n  @Input() countDuration: number = 1;\n  @Input() countPrefix: string = '';\n  @Input() countSuffix: string = '';\n  @Input() valueFormatting: any;\n\n  @Input()\n  set countDecimals(val: number) {\n    this._countDecimals = val;\n  }\n\n  get countDecimals(): number {\n    if (this._countDecimals) return this._countDecimals;\n    return decimalChecker(this.countTo);\n  }\n\n  @Input()\n  set countTo(val) {\n    this._countTo = parseFloat(val);\n    this.start();\n  }\n\n  get countTo(): any {\n    return this._countTo;\n  }\n\n  @Input()\n  set countFrom(val) {\n    this._countFrom = parseFloat(val);\n    this.start();\n  }\n\n  get countFrom(): any {\n    return this._countFrom;\n  }\n\n  @Output() countChange = new EventEmitter();\n  @Output() countFinish = new EventEmitter();\n\n  nativeElement: any;\n\n  value: any = '';\n  formattedValue: string;\n\n  private animationReq: any;\n\n  private _countDecimals: number = 0;\n  private _countTo: number = 0;\n  private _countFrom: number = 0;\n\n  constructor(private cd: ChangeDetectorRef, element: ElementRef) {\n    this.nativeElement = element.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    cancelAnimationFrame(this.animationReq);\n  }\n\n  start(): void {\n    cancelAnimationFrame(this.animationReq);\n\n    const valueFormatting =\n      this.valueFormatting || (value => `${this.countPrefix}${value.toLocaleString()}${this.countSuffix}`);\n\n    const callback = ({ value, progress, finished }) => {\n      this.value = valueFormatting(value);\n      this.cd.markForCheck();\n      if (!finished) this.countChange.emit({ value: this.value, progress });\n      if (finished) this.countFinish.emit({ value: this.value, progress });\n    };\n\n    this.animationReq = count(this.countFrom, this.countTo, this.countDecimals, this.countDuration, callback);\n  }\n}\n","declare let global: any;\n\n// If we don't check whether 'window' and 'global' variables are defined,\n// code will fail in browser/node with 'variable is undefined' error.\nlet root: any;\nif (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n}\n\n// tslint:disable-next-line:variable-name\nexport const MouseEvent = root.MouseEvent as MouseEvent & {\n  prototype?: MouseEvent;\n  new (typeArg: string, eventInitDict?: MouseEventInit): MouseEvent;\n};\n\nexport function createMouseEvent(name: string, bubbles: boolean = false, cancelable: boolean = true): MouseEvent {\n  // Calling new of an event does not work correctly on IE. The following is a tested workaround\n  // See https://stackoverflow.com/questions/27176983/dispatchevent-not-working-in-ie11\n  if (typeof MouseEvent === 'function') {\n    // Sane browsers\n    return new MouseEvent(name, { bubbles, cancelable });\n  } else {\n    // IE\n    const event = document.createEvent('MouseEvent');\n    event.initEvent(name, bubbles, cancelable);\n    return event;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ViewChild, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { createMouseEvent } from '../events';\n\n@Component({\n  selector: 'g[ngx-charts-tooltip-area]',\n  template: `\n    <svg:g>\n      <svg:rect\n        class=\"tooltip-area\"\n        [attr.x]=\"0\"\n        y=\"0\"\n        [attr.width]=\"dims.width\"\n        [attr.height]=\"dims.height\"\n        style=\"opacity: 0; cursor: 'auto';\"\n        (mousemove)=\"mouseMove($event)\"\n        (mouseleave)=\"hideTooltip()\"\n      />\n      <ng-template #defaultTooltipTemplate let-model=\"model\">\n        <xhtml:div class=\"area-tooltip-container\">\n          <xhtml:div *ngFor=\"let tooltipItem of model\" class=\"tooltip-item\">\n            <xhtml:span class=\"tooltip-item-color\" [style.background-color]=\"tooltipItem.color\"></xhtml:span>\n            {{ getToolTipText(tooltipItem) }}\n          </xhtml:div>\n        </xhtml:div>\n      </ng-template>\n      <svg:rect\n        #tooltipAnchor\n        [@animationState]=\"anchorOpacity !== 0 ? 'active' : 'inactive'\"\n        class=\"tooltip-anchor\"\n        [attr.x]=\"anchorPos\"\n        y=\"0\"\n        [attr.width]=\"1\"\n        [attr.height]=\"dims.height\"\n        [style.opacity]=\"anchorOpacity\"\n        [style.pointer-events]=\"'none'\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'right'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipSpacing]=\"15\"\n        [tooltipTemplate]=\"tooltipTemplate ? tooltipTemplate : defaultTooltipTemplate\"\n        [tooltipContext]=\"anchorValues\"\n        [tooltipImmediateExit]=\"true\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition('inactive => active', [\n        style({\n          opacity: 0\n        }),\n        animate(250, style({ opacity: 0.7 }))\n      ]),\n      transition('active => inactive', [\n        style({\n          opacity: 0.7\n        }),\n        animate(250, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class TooltipArea {\n  anchorOpacity: number = 0;\n  anchorPos: number = -1;\n  anchorValues: any[] = [];\n  lastAnchorPos: number;\n\n  @Input() dims;\n  @Input() xSet;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() results;\n  @Input() colors;\n  @Input() showPercentage: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() hover = new EventEmitter();\n\n  @ViewChild('tooltipAnchor', { static: false }) tooltipAnchor;\n\n  getValues(xVal): any[] {\n    const results = [];\n\n    for (const group of this.results) {\n      const item = group.series.find(d => d.name.toString() === xVal.toString());\n      let groupName = group.name;\n      if (groupName instanceof Date) {\n        groupName = groupName.toLocaleDateString();\n      }\n\n      if (item) {\n        const label = item.name;\n        let val = item.value;\n        if (this.showPercentage) {\n          val = (item.d1 - item.d0).toFixed(2) + '%';\n        }\n        let color;\n        if (this.colors.scaleType === 'linear') {\n          let v = val;\n          if (item.d1) {\n            v = item.d1;\n          }\n          color = this.colors.getColor(v);\n        } else {\n          color = this.colors.getColor(group.name);\n        }\n\n        const data = Object.assign({}, item, {\n          value: val,\n          name: label,\n          series: groupName,\n          min: item.min,\n          max: item.max,\n          color\n        });\n\n        results.push(data);\n      }\n    }\n\n    return results;\n  }\n\n  mouseMove(event) {\n    const xPos = event.pageX - event.target.getBoundingClientRect().left;\n\n    const closestIndex = this.findClosestPointIndex(xPos);\n    const closestPoint = this.xSet[closestIndex];\n    this.anchorPos = this.xScale(closestPoint);\n    this.anchorPos = Math.max(0, this.anchorPos);\n    this.anchorPos = Math.min(this.dims.width, this.anchorPos);\n\n    this.anchorValues = this.getValues(closestPoint);\n    if (this.anchorPos !== this.lastAnchorPos) {\n      const ev = createMouseEvent('mouseleave');\n      this.tooltipAnchor.nativeElement.dispatchEvent(ev);\n      this.anchorOpacity = 0.7;\n      this.hover.emit({\n        value: closestPoint\n      });\n      this.showTooltip();\n\n      this.lastAnchorPos = this.anchorPos;\n    }\n  }\n\n  findClosestPointIndex(xPos) {\n    let minIndex = 0;\n    let maxIndex = this.xSet.length - 1;\n    let minDiff = Number.MAX_VALUE;\n    let closestIndex = 0;\n\n    while (minIndex <= maxIndex) {\n      const currentIndex = ((minIndex + maxIndex) / 2) | 0;\n      const currentElement = this.xScale(this.xSet[currentIndex]);\n\n      const curDiff = Math.abs(currentElement - xPos);\n\n      if (curDiff < minDiff) {\n        minDiff = curDiff;\n        closestIndex = currentIndex;\n      }\n\n      if (currentElement < xPos) {\n        minIndex = currentIndex + 1;\n      } else if (currentElement > xPos) {\n        maxIndex = currentIndex - 1;\n      } else {\n        minDiff = 0;\n        closestIndex = currentIndex;\n        break;\n      }\n    }\n\n    return closestIndex;\n  }\n\n  showTooltip(): void {\n    const event = createMouseEvent('mouseenter');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n  }\n\n  hideTooltip(): void {\n    const event = createMouseEvent('mouseleave');\n    this.tooltipAnchor.nativeElement.dispatchEvent(event);\n    this.anchorOpacity = 0;\n    this.lastAnchorPos = -1;\n  }\n\n  getToolTipText(tooltipItem: any): string {\n    let result: string = '';\n    if (tooltipItem.series !== undefined) {\n      result += tooltipItem.series;\n    } else {\n      result += '???';\n    }\n    result += ': ';\n    if (tooltipItem.value !== undefined) {\n      result += tooltipItem.value.toLocaleString();\n    }\n    if (tooltipItem.min !== undefined || tooltipItem.max !== undefined) {\n      result += ' (';\n      if (tooltipItem.min !== undefined) {\n        if (tooltipItem.max === undefined) {\n          result += 'â¥';\n        }\n        result += tooltipItem.min.toLocaleString();\n        if (tooltipItem.max !== undefined) {\n          result += ' - ';\n        }\n      } else if (tooltipItem.max !== undefined) {\n        result += 'â¤';\n      }\n      if (tooltipItem.max !== undefined) {\n        result += tooltipItem.max.toLocaleString();\n      }\n      result += ')';\n    }\n    return result;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { brushX } from 'd3-brush';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { select, event as d3event } from 'd3-selection';\nimport { id } from '../..//utils/id';\n\n@Component({\n  selector: 'g[ngx-charts-timeline]',\n  template: `\n    <svg:g class=\"timeline\" [attr.transform]=\"transform\">\n      <svg:filter [attr.id]=\"filterId\">\n        <svg:feColorMatrix\n          in=\"SourceGraphic\"\n          type=\"matrix\"\n          values=\"0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\"\n        />\n      </svg:filter>\n      <svg:g class=\"embedded-chart\">\n        <ng-content></ng-content>\n      </svg:g>\n      <svg:rect x=\"0\" [attr.width]=\"view[0]\" y=\"0\" [attr.height]=\"height\" class=\"brush-background\" />\n      <svg:g class=\"brush\"></svg:g>\n    </svg:g>\n  `,\n  styleUrls: ['./timeline.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class Timeline implements OnChanges {\n  @Input() view;\n  @Input() state;\n  @Input() results;\n  @Input() scheme;\n  @Input() customColors;\n  @Input() legend;\n  @Input() miniChart;\n  @Input() autoScale;\n  @Input() scaleType;\n  @Input() height: number = 50;\n\n  @Output() select = new EventEmitter();\n  @Output() onDomainChange = new EventEmitter();\n\n  element: HTMLElement;\n  dims: any;\n  xDomain: any[];\n  xScale: any;\n  brush: any;\n  transform: string;\n  initialized: boolean = false;\n  filterId: any;\n  filter: any;\n\n  constructor(element: ElementRef, private cd: ChangeDetectorRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n\n    if (!this.initialized) {\n      this.addBrush();\n      this.initialized = true;\n    }\n  }\n\n  update(): void {\n    this.dims = this.getDims();\n    this.height = this.dims.height;\n    const offsetY = this.view[1] - this.height;\n\n    this.xDomain = this.getXDomain();\n    this.xScale = this.getXScale();\n\n    if (this.brush) {\n      this.updateBrush();\n    }\n\n    this.transform = `translate(0 , ${offsetY})`;\n\n    this.filterId = 'filter' + id().toString();\n    this.filter = `url(#${this.filterId})`;\n\n    this.cd.markForCheck();\n  }\n\n  getXDomain(): any[] {\n    let values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n\n    let domain = [];\n    if (this.scaleType === 'time') {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n    } else {\n      domain = values;\n    }\n\n    return domain;\n  }\n\n  getXScale() {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear()\n        .range([0, this.dims.width])\n        .domain(this.xDomain);\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .range([0, this.dims.width])\n        .padding(0.1)\n        .domain(this.xDomain);\n    }\n\n    return scale;\n  }\n\n  addBrush(): void {\n    if (this.brush) return;\n\n    const height = this.height;\n    const width = this.view[0];\n\n    this.brush = brushX()\n      .extent([\n        [0, 0],\n        [width, height]\n      ])\n      .on('brush end', () => {\n        const selection = d3event.selection || this.xScale.range();\n        const newDomain = selection.map(this.xScale.invert);\n\n        this.onDomainChange.emit(newDomain);\n        this.cd.markForCheck();\n      });\n\n    select(this.element)\n      .select('.brush')\n      .call(this.brush);\n  }\n\n  updateBrush(): void {\n    if (!this.brush) return;\n\n    const height = this.height;\n    const width = this.view[0];\n\n    this.brush.extent([\n      [0, 0],\n      [width, height]\n    ]);\n    select(this.element)\n      .select('.brush')\n      .call(this.brush);\n\n    // clear hardcoded properties so they can be defined by CSS\n    select(this.element)\n      .select('.selection')\n      .attr('fill', undefined)\n      .attr('stroke', undefined)\n      .attr('fill-opacity', undefined);\n\n    this.cd.markForCheck();\n  }\n\n  getDims(): any {\n    const width = this.view[0];\n\n    const dims = {\n      width,\n      height: this.height\n    };\n\n    return dims;\n  }\n}\n","import {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectorRef,\n  ViewEncapsulation\n} from '@angular/core';\nimport { formatLabel } from '../label.helper';\n\n@Component({\n  selector: 'ngx-charts-legend',\n  template: `\n    <div [style.width.px]=\"width\">\n      <header class=\"legend-title\" *ngIf=\"title?.length > 0\">\n        <span class=\"legend-title-text\">{{ title }}</span>\n      </header>\n      <div class=\"legend-wrap\">\n        <ul class=\"legend-labels\" [class.horizontal-legend]=\"horizontal\" [style.max-height.px]=\"height - 45\">\n          <li *ngFor=\"let entry of legendEntries; trackBy: trackBy\" class=\"legend-label\">\n            <ngx-charts-legend-entry\n              [label]=\"entry.label\"\n              [formattedLabel]=\"entry.formattedLabel\"\n              [color]=\"entry.color\"\n              [isActive]=\"isActive(entry)\"\n              (select)=\"labelClick.emit($event)\"\n              (activate)=\"activate($event)\"\n              (deactivate)=\"deactivate($event)\"\n            >\n            </ngx-charts-legend-entry>\n          </li>\n        </ul>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./legend.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LegendComponent implements OnChanges {\n  @Input() data;\n  @Input() title;\n  @Input() colors;\n  @Input() height;\n  @Input() width;\n  @Input() activeEntries;\n  @Input() horizontal = false;\n\n  @Output() labelClick: EventEmitter<any> = new EventEmitter();\n  @Output() labelActivate: EventEmitter<any> = new EventEmitter();\n  @Output() labelDeactivate: EventEmitter<any> = new EventEmitter();\n\n  legendEntries: any[] = [];\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.cd.markForCheck();\n    this.legendEntries = this.getLegendEntries();\n  }\n\n  getLegendEntries(): any[] {\n    const items = [];\n\n    for (const label of this.data) {\n      const formattedLabel = formatLabel(label);\n\n      const idx = items.findIndex(i => {\n        return i.label === formattedLabel;\n      });\n\n      if (idx === -1) {\n        items.push({\n          label,\n          formattedLabel,\n          color: this.colors.getColor(label)\n        });\n      }\n    }\n\n    return items;\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.label === d.name;\n    });\n    return item !== undefined;\n  }\n\n  activate(item) {\n    this.labelActivate.emit(item);\n  }\n\n  deactivate(item) {\n    this.labelDeactivate.emit(item);\n  }\n\n  trackBy(index, item): string {\n    return item.label;\n  }\n}\n","import { Component, Input, Output, ChangeDetectionStrategy, HostListener, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-charts-legend-entry',\n  template: `\n    <span [title]=\"formattedLabel\" tabindex=\"-1\" [class.active]=\"isActive\" (click)=\"select.emit(formattedLabel)\">\n      <span class=\"legend-label-color\" [style.background-color]=\"color\" (click)=\"toggle.emit(formattedLabel)\"> </span>\n      <span class=\"legend-label-text\">\n        {{ trimmedLabel }}\n      </span>\n    </span>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LegendEntryComponent {\n  @Input() color: string;\n  @Input() label: any;\n  @Input() formattedLabel: string;\n  @Input() isActive: boolean = false;\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n  @Output() toggle: EventEmitter<any> = new EventEmitter();\n\n  get trimmedLabel(): string {\n    return this.formattedLabel || '(empty)';\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit({ name: this.label });\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit({ name: this.label });\n  }\n}\n","import { Component, Input, OnChanges, ChangeDetectionStrategy, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'ngx-charts-scale-legend',\n  template: `\n    <div\n      class=\"scale-legend\"\n      [class.horizontal-legend]=\"horizontal\"\n      [style.height.px]=\"horizontal ? undefined : height\"\n      [style.width.px]=\"width\"\n    >\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[1].toLocaleString() }}</span>\n      </div>\n      <div class=\"scale-legend-wrap\" [style.background]=\"gradient\"></div>\n      <div class=\"scale-legend-label\">\n        <span>{{ valueRange[0].toLocaleString() }}</span>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./scale-legend.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ScaleLegendComponent implements OnChanges {\n  @Input() valueRange;\n  @Input() colors;\n  @Input() height;\n  @Input() width;\n  @Input() horizontal = false;\n\n  gradient: any;\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const gradientValues = this.gradientString(this.colors.range(), this.colors.domain());\n    const direction = this.horizontal ? 'right' : 'bottom';\n    this.gradient = this.sanitizer.bypassSecurityTrustStyle(`linear-gradient(to ${direction}, ${gradientValues})`);\n  }\n\n  /**\n   * Generates the string used in the gradient stylesheet properties\n   * @param colors array of colors\n   * @param splits array of splits on a scale of (0, 1)\n   */\n  gradientString(colors, splits): string {\n    // add the 100%\n    splits.push(1);\n    const pairs = [];\n    colors.reverse().forEach((c, i) => {\n      pairs.push(`${c} ${Math.round(splits[i] * 100)}%`);\n    });\n\n    return pairs.join(', ');\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewEncapsulation\n} from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { formatLabel } from '../label.helper';\n\n@Component({\n  selector: 'ngx-charts-advanced-legend',\n  template: `\n    <div class=\"advanced-pie-legend\" [style.width.px]=\"width\">\n      <div\n        *ngIf=\"animations\"\n        class=\"total-value\"\n        ngx-charts-count-up\n        [countTo]=\"roundedTotal\"\n        [valueFormatting]=\"valueFormatting\"\n      ></div>\n      <div class=\"total-value\" *ngIf=\"!animations\">\n        {{ valueFormatting ? valueFormatting(roundedTotal) : defaultValueFormatting(roundedTotal) }}\n      </div>\n      <div class=\"total-label\">\n        {{ label }}\n      </div>\n      <div class=\"legend-items-container\">\n        <div class=\"legend-items\">\n          <div\n            *ngFor=\"let legendItem of legendItems; trackBy: trackBy\"\n            tabindex=\"-1\"\n            class=\"legend-item\"\n            (mouseenter)=\"activate.emit(legendItem.data)\"\n            (mouseleave)=\"deactivate.emit(legendItem.data)\"\n            (click)=\"select.emit(legendItem.data)\"\n          >\n            <div class=\"item-color\" [style.border-left-color]=\"legendItem.color\"></div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-value\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem._value\"\n              [valueFormatting]=\"valueFormatting\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-value\">\n              {{ valueFormatting ? valueFormatting(legendItem.value) : defaultValueFormatting(legendItem.value) }}\n            </div>\n            <div class=\"item-label\">{{ legendItem.displayLabel }}</div>\n            <div\n              *ngIf=\"animations\"\n              class=\"item-percent\"\n              ngx-charts-count-up\n              [countTo]=\"legendItem.percentage\"\n              [countSuffix]=\"'%'\"\n            ></div>\n            <div *ngIf=\"!animations\" class=\"item-percent\">{{ legendItem.percentage.toLocaleString() }}%</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['./advanced-legend.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdvancedLegendComponent implements OnChanges {\n  @Input() width: number;\n  @Input() data;\n  @Input() colors;\n  @Input() label: string = 'Total';\n  @Input() animations: boolean = true;\n\n  @Output() select: EventEmitter<any> = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  legendItems: any[] = [];\n  total: number;\n  roundedTotal: number;\n\n  @Input() valueFormatting: (value: number) => any;\n  @Input() labelFormatting: (value: string) => any = label => label;\n  @Input() percentageFormatting: (value: number) => any = percentage => percentage;\n\n  defaultValueFormatting: (value: number) => any = value => value.toLocaleString();\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  getTotal(): number {\n    return this.data.map(d => d.value).reduce((sum, d) => sum + d, 0);\n  }\n\n  update(): void {\n    this.total = this.getTotal();\n    this.roundedTotal = this.total;\n\n    this.legendItems = this.getLegendItems();\n  }\n\n  getLegendItems(): any {\n    return this.data.map(d => {\n      const label = formatLabel(d.name);\n      const value = d.value;\n      const color = this.colors.getColor(label);\n      const percentage = this.total > 0 ? (value / this.total) * 100 : 0;\n      const formattedLabel = typeof this.labelFormatting === 'function' ? this.labelFormatting(label) : label;\n\n      return {\n        _value: value,\n        data: d,\n        value,\n        color,\n        label: formattedLabel,\n        displayLabel: trimLabel(formattedLabel, 20),\n        origialLabel: d.name,\n        percentage: this.percentageFormatting ? this.percentageFormatting(percentage) : percentage.toLocaleString()\n      };\n    });\n  }\n\n  trackBy(item) {\n    return item.formattedLabel;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChartComponent } from './charts/chart.component';\nimport { BaseChartComponent } from './base-chart.component';\nimport { AxesModule } from './axes/axes.module';\nimport { TooltipModule } from './tooltip/tooltip.module';\nimport { CircleSeriesComponent } from './circle-series.component';\nimport { CircleComponent } from './circle.component';\nimport { GridPanelComponent } from './grid-panel.component';\nimport { GridPanelSeriesComponent } from './grid-panel-series.component';\nimport { SvgLinearGradientComponent } from './svg-linear-gradient.component';\nimport { SvgRadialGradientComponent } from './svg-radial-gradient.component';\nimport { AreaComponent } from './area.component';\nimport { CountUpDirective } from './count/count.directive';\nimport { TooltipArea } from './tooltip-area.component';\nimport { Timeline } from './timeline/timeline.component';\nimport { VisibilityObserver } from '../utils/visibility-observer';\nimport { LegendComponent } from './legend/legend.component';\nimport { LegendEntryComponent } from './legend/legend-entry.component';\nimport { ScaleLegendComponent } from './legend/scale-legend.component';\nimport { AdvancedLegendComponent } from './legend/advanced-legend.component';\n\nconst COMPONENTS = [\n  AreaComponent,\n  BaseChartComponent,\n  CountUpDirective,\n  TooltipArea,\n  ChartComponent,\n  LegendComponent,\n  LegendEntryComponent,\n  ScaleLegendComponent,\n  CircleComponent,\n  CircleSeriesComponent,\n  GridPanelComponent,\n  GridPanelSeriesComponent,\n  SvgLinearGradientComponent,\n  SvgRadialGradientComponent,\n  Timeline,\n  AdvancedLegendComponent\n];\n\n@NgModule({\n  imports: [CommonModule, AxesModule, TooltipModule],\n  declarations: [...COMPONENTS, VisibilityObserver],\n  exports: [CommonModule, AxesModule, TooltipModule, ...COMPONENTS, VisibilityObserver]\n})\nexport class ChartCommonModule {}\n","export interface ViewDimensions {\n  width: number;\n  height: number;\n  xOffset: number;\n}\n\nexport function calculateViewDimensions({\n  width,\n  height,\n  margins,\n  showXAxis = false,\n  showYAxis = false,\n  xAxisHeight = 0,\n  yAxisWidth = 0,\n  showXLabel = false,\n  showYLabel = false,\n  showLegend = false,\n  legendType = 'ordinal',\n  legendPosition = 'right',\n  columns = 12\n}): ViewDimensions {\n  let xOffset = margins[3];\n  let chartWidth = width;\n  let chartHeight = height - margins[0] - margins[2];\n\n  if (showLegend && legendPosition === 'right') {\n    if (legendType === 'ordinal') {\n      columns -= 2;\n    } else {\n      columns -= 1;\n    }\n  }\n\n  chartWidth = (chartWidth * columns) / 12;\n\n  chartWidth = chartWidth - margins[1] - margins[3];\n\n  if (showXAxis) {\n    chartHeight -= 5;\n    chartHeight -= xAxisHeight;\n\n    if (showXLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartHeight -= offset;\n    }\n  }\n\n  if (showYAxis) {\n    chartWidth -= 5;\n    chartWidth -= yAxisWidth;\n    xOffset += yAxisWidth;\n    xOffset += 10;\n\n    if (showYLabel) {\n      // text height + spacing between axis label and tick labels\n      const offset = 25 + 5;\n      chartWidth -= offset;\n      xOffset += offset;\n    }\n  }\n\n  chartWidth = Math.max(0, chartWidth);\n  chartHeight = Math.max(0, chartHeight);\n\n  return {\n    width: Math.floor(chartWidth),\n    height: Math.floor(chartHeight),\n    xOffset: Math.floor(xOffset)\n  };\n}\n","export let colorSets = [\n  {\n    name: 'vivid',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#647c8a',\n      '#3f51b5',\n      '#2196f3',\n      '#00b862',\n      '#afdf0a',\n      '#a7b61a',\n      '#f3e562',\n      '#ff9800',\n      '#ff5722',\n      '#ff4514'\n    ]\n  },\n  {\n    name: 'natural',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#bf9d76',\n      '#e99450',\n      '#d89f59',\n      '#f2dfa7',\n      '#a5d7c6',\n      '#7794b1',\n      '#afafaf',\n      '#707160',\n      '#ba9383',\n      '#d9d5c3'\n    ]\n  },\n  {\n    name: 'cool',\n    selectable: true,\n    group: 'Ordinal',\n    domain: [\n      '#a8385d',\n      '#7aa3e5',\n      '#a27ea8',\n      '#aae3f5',\n      '#adcded',\n      '#a95963',\n      '#8796c0',\n      '#7ed3ed',\n      '#50abcc',\n      '#ad6886'\n    ]\n  },\n  {\n    name: 'fire',\n    selectable: true,\n    group: 'Ordinal',\n    domain: ['#ff3d00', '#bf360c', '#ff8f00', '#ff6f00', '#ff5722', '#e65100', '#ffca28', '#ffab00']\n  },\n  {\n    name: 'solar',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#fff8e1',\n      '#ffecb3',\n      '#ffe082',\n      '#ffd54f',\n      '#ffca28',\n      '#ffc107',\n      '#ffb300',\n      '#ffa000',\n      '#ff8f00',\n      '#ff6f00'\n    ]\n  },\n  {\n    name: 'air',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#e1f5fe',\n      '#b3e5fc',\n      '#81d4fa',\n      '#4fc3f7',\n      '#29b6f6',\n      '#03a9f4',\n      '#039be5',\n      '#0288d1',\n      '#0277bd',\n      '#01579b'\n    ]\n  },\n  {\n    name: 'aqua',\n    selectable: true,\n    group: 'Continuous',\n    domain: [\n      '#e0f7fa',\n      '#b2ebf2',\n      '#80deea',\n      '#4dd0e1',\n      '#26c6da',\n      '#00bcd4',\n      '#00acc1',\n      '#0097a7',\n      '#00838f',\n      '#006064'\n    ]\n  },\n  {\n    name: 'flame',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#A10A28',\n      '#D3342D',\n      '#EF6D49',\n      '#FAAD67',\n      '#FDDE90',\n      '#DBED91',\n      '#A9D770',\n      '#6CBA67',\n      '#2C9653',\n      '#146738'\n    ]\n  },\n  {\n    name: 'ocean',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#1D68FB',\n      '#33C0FC',\n      '#4AFFFE',\n      '#AFFFFF',\n      '#FFFC63',\n      '#FDBD2D',\n      '#FC8A25',\n      '#FA4F1E',\n      '#FA141B',\n      '#BA38D1'\n    ]\n  },\n  {\n    name: 'forest',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#55C22D',\n      '#C1F33D',\n      '#3CC099',\n      '#AFFFFF',\n      '#8CFC9D',\n      '#76CFFA',\n      '#BA60FB',\n      '#EE6490',\n      '#C42A1C',\n      '#FC9F32'\n    ]\n  },\n  {\n    name: 'horizon',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#2597FB',\n      '#65EBFD',\n      '#99FDD0',\n      '#FCEE4B',\n      '#FEFCFA',\n      '#FDD6E3',\n      '#FCB1A8',\n      '#EF6F7B',\n      '#CB96E8',\n      '#EFDEE0'\n    ]\n  },\n  {\n    name: 'neons',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#FF3333',\n      '#FF33FF',\n      '#CC33FF',\n      '#0000FF',\n      '#33CCFF',\n      '#33FFFF',\n      '#33FF66',\n      '#CCFF33',\n      '#FFCC00',\n      '#FF6600'\n    ]\n  },\n  {\n    name: 'picnic',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#FAC51D',\n      '#66BD6D',\n      '#FAA026',\n      '#29BB9C',\n      '#E96B56',\n      '#55ACD2',\n      '#B7332F',\n      '#2C83C9',\n      '#9166B8',\n      '#92E7E8'\n    ]\n  },\n  {\n    name: 'night',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#2B1B5A',\n      '#501356',\n      '#183356',\n      '#28203F',\n      '#391B3C',\n      '#1E2B3C',\n      '#120634',\n      '#2D0432',\n      '#051932',\n      '#453080',\n      '#75267D',\n      '#2C507D',\n      '#4B3880',\n      '#752F7D',\n      '#35547D'\n    ]\n  },\n  {\n    name: 'nightLights',\n    selectable: false,\n    group: 'Ordinal',\n    domain: [\n      '#4e31a5',\n      '#9c25a7',\n      '#3065ab',\n      '#57468b',\n      '#904497',\n      '#46648b',\n      '#32118d',\n      '#a00fb3',\n      '#1052a2',\n      '#6e51bd',\n      '#b63cc3',\n      '#6c97cb',\n      '#8671c1',\n      '#b455be',\n      '#7496c3'\n    ]\n  }\n];\n","import { range } from 'd3-array';\nimport { scaleBand, scaleLinear, scaleOrdinal, scaleQuantile } from 'd3-scale';\n\nimport { colorSets } from '../utils/color-sets';\n\nexport class ColorHelper {\n  scale: any;\n  scaleType: any;\n  colorDomain: any[];\n  domain: any;\n  customColors: any;\n\n  constructor(scheme, type, domain, customColors?) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    this.colorDomain = scheme.domain;\n    this.scaleType = type;\n    this.domain = domain;\n    this.customColors = customColors;\n\n    this.scale = this.generateColorScheme(scheme, type, this.domain);\n  }\n\n  generateColorScheme(scheme, type, domain) {\n    if (typeof scheme === 'string') {\n      scheme = colorSets.find(cs => {\n        return cs.name === scheme;\n      });\n    }\n    let colorScale;\n    if (type === 'quantile') {\n      colorScale = scaleQuantile()\n        .range(scheme.domain)\n        .domain(domain);\n    } else if (type === 'ordinal') {\n      colorScale = scaleOrdinal()\n        .range(scheme.domain)\n        .domain(domain);\n    } else if (type === 'linear') {\n      // linear schemes must have at least 2 colors\n      const colorDomain = [...scheme.domain];\n      if (colorDomain.length === 1) {\n        colorDomain.push(colorDomain[0]);\n        this.colorDomain = colorDomain;\n      }\n\n      const points = range(0, 1, 1.0 / colorDomain.length);\n      colorScale = scaleLinear()\n        .domain(points)\n        .range(colorDomain);\n    }\n\n    return colorScale;\n  }\n\n  getColor(value) {\n    if (value === undefined || value === null) {\n      throw new Error('Value can not be null');\n    }\n    if (this.scaleType === 'linear') {\n      const valueScale = scaleLinear()\n        .domain(this.domain)\n        .range([0, 1]);\n\n      return this.scale(valueScale(value));\n    } else {\n      if (typeof this.customColors === 'function') {\n        return this.customColors(value);\n      }\n\n      const formattedValue = value.toString();\n      let found: any; // todo type customColors\n      if (this.customColors && this.customColors.length > 0) {\n        found = this.customColors.find(mapping => {\n          return mapping.name.toLowerCase() === formattedValue.toLowerCase();\n        });\n      }\n\n      if (found) {\n        return found.value;\n      } else {\n        return this.scale(value);\n      }\n    }\n  }\n\n  getLinearGradientStops(value, start) {\n    if (start === undefined) {\n      start = this.domain[0];\n    }\n\n    const valueScale = scaleLinear()\n      .domain(this.domain)\n      .range([0, 1]);\n\n    const colorValueScale = scaleBand()\n      .domain(this.colorDomain)\n      .range([0, 1]);\n\n    const endColor = this.getColor(value);\n\n    // generate the stops\n    const startVal = valueScale(start);\n    const startColor = this.getColor(start);\n\n    const endVal = valueScale(value);\n    let i = 1;\n    let currentVal = startVal;\n    const stops = [];\n\n    stops.push({\n      color: startColor,\n      offset: startVal,\n      originalOffset: startVal,\n      opacity: 1\n    });\n\n    while (currentVal < endVal && i < this.colorDomain.length) {\n      const color = this.colorDomain[i];\n      const offset = colorValueScale(color);\n      if (offset <= startVal) {\n        i++;\n        continue;\n      }\n\n      if (offset.toFixed(4) >= (endVal - colorValueScale.bandwidth()).toFixed(4)) {\n        break;\n      }\n\n      stops.push({\n        color,\n        offset,\n        opacity: 1\n      });\n      currentVal = offset;\n      i++;\n    }\n\n    if (stops[stops.length - 1].offset < 100) {\n      stops.push({\n        color: endColor,\n        offset: endVal,\n        opacity: 1\n      });\n    }\n\n    if (endVal === startVal) {\n      stops[0].offset = 0;\n      stops[1].offset = 100;\n    } else {\n      // normalize the offsets into percentages\n      if (stops[stops.length - 1].offset !== 100) {\n        for (const s of stops) {\n          s.offset = ((s.offset - startVal) / (endVal - startVal)) * 100;\n        }\n      }\n    }\n\n    return stops;\n  }\n}\n","/**\n * Based on the data, return an array with unique values.\n *\n * @export\n * @returns array\n */\nexport function getUniqueXDomainValues(results: any[]): any[] {\n  const valueSet = new Set();\n  for (const result of results) {\n    for (const d of result.series) {\n      valueSet.add(d.name);\n    }\n  }\n  return Array.from(valueSet);\n}\n\n/**\n * Get the scaleType of enumerable of values.\n * @returns  'time', 'linear' or 'ordinal'\n */\nexport function getScaleType(values: any[], checkDateType = true): string {\n  if (checkDateType) {\n    const allDates = values.every(value => value instanceof Date);\n    if (allDates) {\n      return 'time';\n    }\n  }\n\n  const allNumbers = values.every(value => typeof value === 'number');\n  if (allNumbers) {\n    return 'linear';\n  }\n\n  return 'ordinal';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ngx-charts-area-chart',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [baseValue]=\"baseValue\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [baseValue]=\"baseValue\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartComponent extends BaseChartComponent {\n  @Input() legend;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() state;\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() baseValue: any = 'auto';\n  @Input() autoScale;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xSet: any;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  clipPathId: string;\n  clipPath: string;\n  scaleType: string;\n  series: any;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight: number = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding: number = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n    if (this.baseValue !== 'auto') {\n      values.push(this.baseValue);\n    }\n\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint().padding(0.1);\n    }\n\n    scale.range([0, width]).domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getScaleType(values): string {\n    let date = true;\n    let num = true;\n    for (const value of values) {\n      if (!this.isDate(value)) {\n        date = false;\n      }\n      if (typeof value !== 'number') {\n        num = false;\n      }\n    }\n\n    if (date) {\n      return 'time';\n    }\n\n    if (num) {\n      return 'linear';\n    }\n\n    return 'ordinal';\n  }\n\n  isDate(value): boolean {\n    if (value instanceof Date) {\n      return true;\n    }\n\n    return false;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ngx-charts-area-chart-normalized',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [activeEntries]=\"activeEntries\"\n              [gradient]=\"gradient\"\n              normalized=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [showPercentage]=\"true\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                type=\"stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            normalized=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartNormalizedComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n  @Input() showGridLines: boolean = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  xSet: any[]; // the set of all values on the X Axis\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  tooltipAreas: any[];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight: number = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding: number = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n\n      let total = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n        if (d) {\n          total += d.value;\n        }\n      }\n\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n\n        if (total > 0) {\n          d.d0 = (d.d0 * 100) / total;\n          d.d1 = (d.d1 * 100) / total;\n        } else {\n          d.d0 = 0;\n          d.d1 = 0;\n        }\n      }\n    }\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'time') {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    return [0, 100];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint().padding(0.1);\n    }\n\n    scale.range([0, width]).domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ngx-charts-area-chart-stacked',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"area-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n            <svg:g\n              ngx-charts-area-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [scaleType]=\"scaleType\"\n              [gradient]=\"gradient\"\n              [activeEntries]=\"activeEntries\"\n              stacked=\"true\"\n              [curve]=\"curve\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n              <svg:g\n                ngx-charts-circle-series\n                type=\"stacked\"\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [activeEntries]=\"activeEntries\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event, series)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [legend]=\"legend\"\n        [scaleType]=\"scaleType\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-area-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [gradient]=\"gradient\"\n            stacked=\"true\"\n            [curve]=\"curve\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AreaChartStackedComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() timeline;\n  @Input() gradient;\n  @Input() showGridLines: boolean = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  scaleType: string;\n  xDomain: any[];\n  xSet: any[]; // the set of all values on the X Axis\n  yDomain: any[];\n  seriesDomain: any;\n  xScale: any;\n  yScale: any;\n  transform: string;\n  clipPathId: string;\n  clipPath: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  filteredDomain: any;\n  legendOptions: any;\n\n  timelineWidth: any;\n  timelineHeight: number = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding: number = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let d0 = 0;\n      for (const group of this.results) {\n        let d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          d.d0 = d0;\n          d.d1 = d0 + d.value;\n          d0 += d.value;\n        } else {\n          d = {\n            name: val,\n            value: 0,\n            d0,\n            d1: d0\n          };\n          group.series.push(d);\n        }\n      }\n    }\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n\n    for (let i = 0; i < this.xSet.length; i++) {\n      const val = this.xSet[i];\n      let sum = 0;\n      for (const group of this.results) {\n        const d = group.series.find(item => {\n          let a = item.name;\n          let b = val;\n          if (this.scaleType === 'time') {\n            a = a.valueOf();\n            b = b.valueOf();\n          }\n          return a === b;\n        });\n\n        if (d) {\n          sum += d.value;\n        }\n      }\n\n      domain.push(sum);\n    }\n\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(0, ...domain);\n\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...domain);\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime();\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear();\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint().padding(0.1);\n    }\n\n    scale.range([0, width]).domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item) {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n}\n","export function sortLinear(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    if (direction === 'asc') {\n      return a[property] - b[property];\n    } else {\n      return b[property] - a[property];\n    }\n  });\n}\n\nexport function sortByDomain(data, property, direction = 'asc', domain) {\n  return data.sort((a, b) => {\n    const aVal = a[property];\n    const bVal = b[property];\n\n    const aIdx = domain.indexOf(aVal);\n    const bIdx = domain.indexOf(bVal);\n\n    if (direction === 'asc') {\n      return aIdx - bIdx;\n    } else {\n      return bIdx - aIdx;\n    }\n  });\n}\n\nexport function sortByTime(data, property, direction = 'asc') {\n  return data.sort((a, b) => {\n    const aDate = a[property].getTime();\n    const bDate = b[property].getTime();\n\n    if (direction === 'asc') {\n      if (aDate > bDate) return 1;\n      if (bDate > aDate) return -1;\n      return 0;\n    } else {\n      if (aDate > bDate) return -1;\n      if (bDate > aDate) return 1;\n      return 0;\n    }\n  });\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { area } from 'd3-shape';\n\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\n\n@Component({\n  selector: 'g[ngx-charts-area-series]',\n  template: `\n    <svg:g\n      ngx-charts-area\n      class=\"area-series\"\n      [data]=\"data\"\n      [path]=\"path\"\n      [fill]=\"colors.getColor(data.name)\"\n      [stops]=\"gradientStops\"\n      [startingPath]=\"startingPath\"\n      [opacity]=\"opacity\"\n      [gradient]=\"gradient || hasGradient\"\n      [animations]=\"animations\"\n      [class.active]=\"isActive(data)\"\n      [class.inactive]=\"isInactive(data)\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaSeriesComponent implements OnChanges {\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() baseValue: any = 'auto';\n  @Input() colors;\n  @Input() scaleType;\n  @Input() stacked: boolean = false;\n  @Input() normalized: boolean = false;\n  @Input() gradient;\n  @Input() curve;\n  @Input() activeEntries: any[];\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  opacity: number;\n  path: string;\n  startingPath: string;\n\n  hasGradient: boolean;\n  gradientStops: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateGradient();\n\n    let currentArea;\n    let startingArea;\n\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n\n    if (this.stacked || this.normalized) {\n      currentArea = area<any>()\n        .x(xProperty)\n        .y0((d, i) => this.yScale(d.d0))\n        .y1((d, i) => this.yScale(d.d1));\n\n      startingArea = area<any>()\n        .x(xProperty)\n        .y0(d => this.yScale.range()[0])\n        .y1(d => this.yScale.range()[0]);\n    } else {\n      currentArea = area<any>()\n        .x(xProperty)\n        .y0(() => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n        .y1(d => this.yScale(d.value));\n\n      startingArea = area<any>()\n        .x(xProperty)\n        .y0(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)))\n        .y1(d => (this.baseValue === 'auto' ? this.yScale.range()[0] : this.yScale(this.baseValue)));\n    }\n\n    currentArea.curve(this.curve);\n    startingArea.curve(this.curve);\n\n    this.opacity = 0.8;\n\n    let data = this.data.series;\n    if (this.scaleType === 'linear') {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === 'time') {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n\n    this.path = currentArea(data);\n    this.startingPath = startingArea(data);\n  }\n\n  updateGradient() {\n    if (this.colors.scaleType === 'linear') {\n      this.hasGradient = true;\n      if (this.stacked || this.normalized) {\n        const d0values = this.data.series.map(d => d.d0);\n        const d1values = this.data.series.map(d => d.d1);\n        const max = Math.max(...d1values);\n        const min = Math.min(...d0values);\n        this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      } else {\n        const values = this.data.series.map(d => d.value);\n        const max = Math.max(...values);\n        this.gradientStops = this.colors.getLinearGradientStops(max);\n      }\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n    }\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry): boolean {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AreaChartComponent } from './area-chart.component';\nimport { AreaChartNormalizedComponent } from './area-chart-normalized.component';\nimport { AreaChartStackedComponent } from './area-chart-stacked.component';\nimport { AreaSeriesComponent } from './area-series.component';\nimport { ChartCommonModule } from '../common/chart-common.module';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent],\n  exports: [AreaChartComponent, AreaChartNormalizedComponent, AreaChartStackedComponent, AreaSeriesComponent]\n})\nexport class AreaChartModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { select } from 'd3-selection';\nimport { roundedRect } from '../common/shape.helper';\nimport { id } from '../utils/id';\n\n/* tslint:disable-next-line */\nimport { transition } from 'd3-transition';\n\n@Component({\n  selector: 'g[ngx-charts-bar]',\n  template: `\n    <svg:defs *ngIf=\"hasGradient\">\n      <svg:g ngx-charts-svg-linear-gradient [orientation]=\"orientation\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n    </svg:defs>\n    <svg:path\n      class=\"bar\"\n      stroke=\"none\"\n      role=\"img\"\n      tabIndex=\"-1\"\n      [class.active]=\"isActive\"\n      [class.hidden]=\"hideBar\"\n      [attr.d]=\"path\"\n      [attr.aria-label]=\"ariaLabel\"\n      [attr.fill]=\"hasGradient ? gradientFill : fill\"\n      (click)=\"select.emit(data)\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BarComponent implements OnChanges {\n  @Input() fill;\n  @Input() data: any;\n  @Input() width: number;\n  @Input() height: number;\n  @Input() x: number;\n  @Input() y: number;\n  @Input() orientation;\n  @Input() roundEdges: boolean = true;\n  @Input() gradient: boolean = false;\n  @Input() offset = 0;\n  @Input() isActive: boolean = false;\n  @Input() stops: any[];\n  @Input() animations: boolean = true;\n  @Input() ariaLabel: string;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  element: any;\n  path: any;\n  gradientId: any;\n  gradientFill: any;\n  startOpacity: any;\n  gradientStops: any[];\n  hasGradient: boolean = false;\n  hideBar: boolean = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.roundEdges) {\n      this.loadAnimation();\n    }\n    this.update();\n  }\n\n  update(): void {\n    this.gradientId = 'grad' + id().toString();\n    this.gradientFill = `url(#${this.gradientId})`;\n\n    if (this.gradient || this.stops) {\n      this.gradientStops = this.getGradient();\n      this.hasGradient = true;\n    } else {\n      this.hasGradient = false;\n    }\n\n    this.updatePathEl();\n    this.checkToHideBar();\n  }\n\n  loadAnimation(): void {\n    this.path = this.getStartingPath();\n    setTimeout(this.update.bind(this), 100);\n  }\n\n  updatePathEl(): void {\n    const node = select(this.element).select('.bar');\n    const path = this.getPath();\n    if (this.animations) {\n      node\n        .transition()\n        .duration(500)\n        .attr('d', path);\n    } else {\n      node.attr('d', path);\n    }\n  }\n\n  getGradient() {\n    if (this.stops) {\n      return this.stops;\n    }\n\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: this.getStartOpacity()\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }\n    ];\n  }\n\n  getStartingPath() {\n    if (!this.animations) {\n      return this.getPath();\n    }\n\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    } else {\n      if (this.orientation === 'vertical') {\n        path = roundedRect(this.x, this.y + this.height, this.width, 1, 0, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        path = roundedRect(this.x, this.y, 1, this.height, 0, this.edges);\n      }\n    }\n\n    return path;\n  }\n\n  getPath() {\n    let radius = this.getRadius();\n    let path;\n\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        radius = Math.min(this.height, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      } else if (this.orientation === 'horizontal') {\n        radius = Math.min(this.width, radius);\n        path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n      }\n    } else {\n      path = roundedRect(this.x, this.y, this.width, this.height, radius, this.edges);\n    }\n\n    return path;\n  }\n\n  getRadius(): number {\n    let radius = 0;\n\n    if (this.roundEdges && this.height > 5 && this.width > 5) {\n      radius = Math.floor(Math.min(5, this.height / 2, this.width / 2));\n    }\n\n    return radius;\n  }\n\n  getStartOpacity(): number {\n    if (this.roundEdges) {\n      return 0.2;\n    } else {\n      return 0.5;\n    }\n  }\n\n  get edges() {\n    let edges = [false, false, false, false];\n    if (this.roundEdges) {\n      if (this.orientation === 'vertical') {\n        if (this.data.value > 0) {\n          edges = [true, true, false, false];\n        } else {\n          edges = [false, false, true, true];\n        }\n      } else if (this.orientation === 'horizontal') {\n        if (this.data.value > 0) {\n          edges = [false, true, false, true];\n        } else {\n          edges = [true, false, true, false];\n        }\n      }\n    }\n    return edges;\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit(this.data);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit(this.data);\n  }\n\n  private checkToHideBar() {\n    this.hideBar =\n      this.noBarWhenZero &&\n      ((this.orientation === 'vertical' && this.height === 0) ||\n        (this.orientation === 'horizontal' && this.width === 0));\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-horizontal',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-horizontal\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BarHorizontalComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() roundEdges: boolean = true;\n  @Input() xScaleMax: number;\n  @Input() xScaleMin: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  yScale: any;\n  xScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = { negative: 0, positive: 0 };\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getXScale(): any {\n    this.xDomain = this.getXDomain();\n\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.xDomain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getYScale(): any {\n    this.yDomain = this.getYDomain();\n    const spacing = this.yDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.yDomain);\n  }\n\n  getXDomain(): any[] {\n    const values = this.results.map(d => d.value);\n    const min = this.xScaleMin ? Math.min(this.xScaleMin, ...values) : Math.min(0, ...values);\n\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...values) : Math.max(0, ...values);\n    return [min, max];\n  }\n\n  getYDomain(): any[] {\n    return this.results.map(d => d.label);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.yDomain;\n    } else {\n      domain = this.xDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-horizontal-2d',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"valueScale\"\n          [yScale]=\"groupScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"horizontal\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-horizontal\n            [xScale]=\"valueScale\"\n            [activeEntries]=\"activeEntries\"\n            [yScale]=\"innerScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [seriesName]=\"group.name\"\n            [roundEdges]=\"roundEdges\"\n            [animations]=\"animations\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*'\n        }),\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontal2DComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() groupPadding = 16;\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() roundEdges: boolean = true;\n  @Input() xScaleMax: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = { negative: 0, positive: 0 };\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getGroupScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .paddingOuter(spacing / 2)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale(): any {\n    const height = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, height])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valuesDomain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(0, ...domain);\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(0, ${this.groupScale(group.label)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valuesDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valuesDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results\n      .map(g => g.series)\n      .flat()\n      .filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n\n    this.activeEntries = [...items];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-horizontal-normalized',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          *ngFor=\"let group of results; trackBy: trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-horizontal\n            type=\"normalized\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*'\n        }),\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontalNormalizedComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    return [0, 100];\n  }\n\n  getYScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group): string {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results\n      .map(g => g.series)\n      .flat()\n      .filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n\n    this.activeEntries = [...items];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\n\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-horizontal-stacked',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [yAxisOffset]=\"dataLabelMaxWidth.negative\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-horizontal\n            type=\"stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [activeEntries]=\"activeEntries\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelWidthChanged)=\"onDataLabelMaxWidthChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*'\n        }),\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n      ])\n    ])\n  ]\n})\nexport class BarHorizontalStackedComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() xScaleMax: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxWidth: any = { negative: 0, positive: 0 };\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n    }\n\n    this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getGroupDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n\n    const min = Math.min(0, ...domain);\n    const max = this.xScaleMax ? Math.max(this.xScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n\n  getYScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.height])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getXScale(): any {\n    const scale = scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group): string {\n    return `translate(0, ${this.yScale(group.name)})`;\n  }\n\n  onClick(data, group?): void {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxWidthChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n    } else {\n      this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results\n      .map(g => g.series)\n      .flat()\n      .filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n\n    this.activeEntries = [...items];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  Output,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { DataItem } from '../models/chart-data.model';\n\n@Component({\n  selector: 'ngx-charts-bar-vertical',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [series]=\"results\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [activeEntries]=\"activeEntries\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n          (select)=\"onClick($event)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event)\"\n        ></svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class BarVerticalComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() roundEdges: boolean = true;\n  @Input() yScaleMax: number;\n  @Input() yScaleMin: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xScale: any;\n  yScale: any;\n  xDomain: any;\n  yDomain: any;\n  transform: string;\n  colors: ColorHelper;\n  margin: any[] = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = { negative: 0, positive: 0 };\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getXScale(): any {\n    this.xDomain = this.getXDomain();\n    const spacing = this.xDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand()\n      .range([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.xDomain);\n  }\n\n  getYScale(): any {\n    this.yDomain = this.getYDomain();\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.yDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getXDomain(): any[] {\n    return this.results.map(d => d.label);\n  }\n\n  getYDomain(): [number, number] {\n    const values = this.results.map(d => d.value);\n\n    let min = this.yScaleMin ? Math.min(this.yScaleMin, ...values) : Math.min(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      min = Math.min(min, ...this.yAxisTicks);\n    }\n\n    let max = this.yScaleMax ? Math.max(this.yScaleMax, ...values) : Math.max(0, ...values);\n    if (this.yAxisTicks && !this.yAxisTicks.some(isNaN)) {\n      max = Math.max(max, ...this.yAxisTicks);\n    }\n    return [min, max];\n  }\n\n  onClick(data: DataItem) {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.xDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.xDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onDataLabelMaxHeightChanged(event) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (event.index === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-vertical-2d',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"vertical\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          [noBarWhenZero]=\"noBarWhenZero\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*'\n        }),\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n      ])\n    ])\n  ]\n})\nexport class BarVertical2DComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() scaleType = 'ordinal';\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() groupPadding = 16;\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() roundEdges: boolean = true;\n  @Input() yScaleMax: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valuesDomain: any[];\n  groupScale: any;\n  innerScale: any;\n  valueScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = { negative: 0, positive: 0 };\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valuesDomain = this.getValueDomain();\n\n    this.groupScale = this.getGroupScale();\n    this.innerScale = this.getInnerScale();\n    this.valueScale = this.getValueScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  getGroupScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .paddingOuter(spacing / 2)\n      .domain(this.groupDomain);\n  }\n\n  getInnerScale(): any {\n    const width = this.groupScale.bandwidth();\n    const spacing = this.innerDomain.length / (width / this.barPadding + 1);\n    return scaleBand()\n      .rangeRound([0, width])\n      .paddingInner(spacing)\n      .domain(this.innerDomain);\n  }\n\n  getValueScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valuesDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(0, ...domain);\n\n    return [min, max];\n  }\n\n  groupTransform(group) {\n    return `translate(${this.groupScale(group.label)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valuesDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valuesDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results\n      .map(g => g.series)\n      .flat()\n      .filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n\n    this.activeEntries = [...items];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-vertical-normalized',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          *ngFor=\"let group of results; trackBy: trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            type=\"normalized\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*'\n        }),\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n      ])\n    ])\n  ]\n})\nexport class BarVerticalNormalizedComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain() {\n    return [0, 100];\n  }\n\n  getXScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name)}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results\n      .map(g => g.series)\n      .flat()\n      .filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n\n    this.activeEntries = [...items];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\n\n@Component({\n  selector: 'ngx-charts-bar-vertical-stacked',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, undefined, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, undefined, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          *ngFor=\"let group of results; let index = index; trackBy: trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\"\n        >\n          <svg:g\n            ngx-charts-series-vertical\n            type=\"stacked\"\n            [xScale]=\"xScale\"\n            [yScale]=\"yScale\"\n            [activeEntries]=\"activeEntries\"\n            [colors]=\"colors\"\n            [series]=\"group.series\"\n            [dims]=\"dims\"\n            [gradient]=\"gradient\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [showDataLabel]=\"showDataLabel\"\n            [dataLabelFormatting]=\"dataLabelFormatting\"\n            [seriesName]=\"group.name\"\n            [animations]=\"animations\"\n            [noBarWhenZero]=\"noBarWhenZero\"\n            (select)=\"onClick($event, group)\"\n            (activate)=\"onActivate($event, group)\"\n            (deactivate)=\"onDeactivate($event, group)\"\n            (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1,\n          transform: '*'\n        }),\n        animate(500, style({ opacity: 0, transform: 'scale(0)' }))\n      ])\n    ])\n  ]\n})\nexport class BarVerticalStackedComponent extends BaseChartComponent {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() barPadding = 8;\n  @Input() roundDomains: boolean = false;\n  @Input() yScaleMax: number;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  groupDomain: any[];\n  innerDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  transform: string;\n  tickFormatting: (label: string) => string;\n  colors: ColorHelper;\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  dataLabelMaxHeight: any = { negative: 0, positive: 0 };\n\n  update(): void {\n    super.update();\n\n    if (!this.showDataLabel) {\n      this.dataLabelMaxHeight = { negative: 0, positive: 0 };\n    }\n    this.margin = [10 + this.dataLabelMaxHeight.positive, 20, 10 + this.dataLabelMaxHeight.negative, 20];\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.showDataLabel) {\n      this.dims.height -= this.dataLabelMaxHeight.negative;\n    }\n\n    this.formatDates();\n\n    this.groupDomain = this.getGroupDomain();\n    this.innerDomain = this.getInnerDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0] + this.dataLabelMaxHeight.negative})`;\n  }\n\n  getGroupDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.label)) {\n        domain.push(group.label);\n      }\n    }\n    return domain;\n  }\n\n  getInnerDomain() {\n    const domain = [];\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.label)) {\n          domain.push(d.label);\n        }\n      }\n    }\n    return domain;\n  }\n\n  getValueDomain() {\n    const domain = [];\n    let smallest = 0;\n    let biggest = 0;\n    for (const group of this.results) {\n      let smallestSum = 0;\n      let biggestSum = 0;\n      for (const d of group.series) {\n        if (d.value < 0) {\n          smallestSum += d.value;\n        } else {\n          biggestSum += d.value;\n        }\n        smallest = d.value < smallest ? d.value : smallest;\n        biggest = d.value > biggest ? d.value : biggest;\n      }\n      domain.push(smallestSum);\n      domain.push(biggestSum);\n    }\n    domain.push(smallest);\n    domain.push(biggest);\n\n    const min = Math.min(0, ...domain);\n    const max = this.yScaleMax ? Math.max(this.yScaleMax, ...domain) : Math.max(...domain);\n    return [min, max];\n  }\n\n  getXScale(): any {\n    const spacing = this.groupDomain.length / (this.dims.width / this.barPadding + 1);\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .paddingInner(spacing)\n      .domain(this.groupDomain);\n  }\n\n  getYScale(): any {\n    const scale = scaleLinear()\n      .range([this.dims.height, 0])\n      .domain(this.valueDomain);\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  onDataLabelMaxHeightChanged(event, groupIndex) {\n    if (event.size.negative) {\n      this.dataLabelMaxHeight.negative = Math.max(this.dataLabelMaxHeight.negative, event.size.height);\n    } else {\n      this.dataLabelMaxHeight.positive = Math.max(this.dataLabelMaxHeight.positive, event.size.height);\n    }\n    if (groupIndex === this.results.length - 1) {\n      setTimeout(() => this.update());\n    }\n  }\n\n  groupTransform(group) {\n    return `translate(${this.xScale(group.name) || 0}, 0)`;\n  }\n\n  onClick(data, group?) {\n    if (group) {\n      data.series = group.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.innerDomain;\n    } else {\n      domain = this.valueDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.innerDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.valueDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  updateYAxisWidth({ width }) {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }) {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results\n      .map(g => g.series)\n      .flat()\n      .filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n\n    this.activeEntries = [...items];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import { Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { formatLabel, escapeLabel } from '../common/label.helper';\nimport { DataItem } from '../models/chart-data.model';\n\nexport enum D0Types {\n  positive = 'positive',\n  negative = 'negative'\n}\n\n@Component({\n  selector: 'g[ngx-charts-series-vertical]',\n  template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [@.disabled]=\"!animations\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"'vertical'\"\n      [roundEdges]=\"bar.roundEdges\"\n      [gradient]=\"gradient\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [isActive]=\"isActive(bar.data)\"\n      (select)=\"onClick($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n      [animations]=\"animations\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"'vertical'\"\n        (dimensionsChanged)=\"dataLabelHeightChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(500, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class SeriesVerticalComponent implements OnChanges {\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() seriesName: string;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() roundEdges: boolean;\n  @Input() animations: boolean = true;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dataLabelHeightChanged = new EventEmitter();\n\n  tooltipPlacement: string;\n  tooltipType: string;\n\n  bars: any;\n  x: any;\n  y: any;\n  barsForDataLabels: Array<{ x: number; y: number; width: number; height: number; total: number; series: string }> = [];\n\n  ngOnChanges(changes): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateTooltipSettings();\n    let width;\n    if (this.series.length) {\n      width = this.xScale.bandwidth();\n    }\n    width = Math.round(width);\n    const yScaleMin = Math.max(this.yScale.domain()[0], 0);\n\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type = D0Types.positive;\n\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        width,\n        formattedLabel,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n\n      if (this.type === 'standard') {\n        bar.height = Math.abs(this.yScale(value) - this.yScale(yScaleMin));\n        bar.x = this.xScale(label);\n\n        if (value < 0) {\n          bar.y = this.yScale(0);\n        } else {\n          bar.y = this.yScale(value);\n        }\n      } else if (this.type === 'stacked') {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.height = this.yScale(offset0) - this.yScale(offset1);\n        bar.x = 0;\n        bar.y = this.yScale(offset1);\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === 'ordinal') {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} â¢ ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled\n        ? undefined\n        : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n      `;\n\n      return bar;\n    });\n\n    this.updateDataLabels();\n  }\n\n  updateDataLabels() {\n    if (this.type === 'stacked') {\n      this.barsForDataLabels = [];\n      const section: any = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      if (section.total > 0) {\n        section.height = this.yScale(totalPositive);\n      } else {\n        section.height = this.yScale(totalNegative);\n      }\n      section.width = this.xScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section: any = {};\n        section.series = this.seriesName ? this.seriesName : d.label;\n        section.total = d.value;\n        section.x = this.xScale(d.label);\n        section.y = this.yScale(0);\n        section.height = this.yScale(section.total) - this.yScale(0);\n        section.width = this.xScale.bandwidth();\n        return section;\n      });\n    }\n  }\n\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  onClick(data: DataItem): void {\n    this.select.emit(data);\n  }\n\n  getLabel(dataItem): string {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n    return dataItem.name;\n  }\n\n  trackBy(index, bar): string {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { formatLabel, escapeLabel } from '../common/label.helper';\nimport { D0Types } from './series-vertical.component';\nimport { DataItem } from '../models/chart-data.model';\n\n@Component({\n  selector: 'g[ngx-charts-series-horizontal]',\n  template: `\n    <svg:g\n      ngx-charts-bar\n      *ngFor=\"let bar of bars; trackBy: trackBy\"\n      [@animationState]=\"'active'\"\n      [width]=\"bar.width\"\n      [height]=\"bar.height\"\n      [x]=\"bar.x\"\n      [y]=\"bar.y\"\n      [fill]=\"bar.color\"\n      [stops]=\"bar.gradientStops\"\n      [data]=\"bar.data\"\n      [orientation]=\"'horizontal'\"\n      [roundEdges]=\"bar.roundEdges\"\n      (select)=\"click($event)\"\n      [gradient]=\"gradient\"\n      [isActive]=\"isActive(bar.data)\"\n      [ariaLabel]=\"bar.ariaLabel\"\n      [animations]=\"animations\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"tooltipPlacement\"\n      [tooltipType]=\"tooltipType\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : bar.tooltipText\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"bar.data\"\n      [noBarWhenZero]=\"noBarWhenZero\"\n    ></svg:g>\n    <svg:g *ngIf=\"showDataLabel\">\n      <svg:g\n        ngx-charts-bar-label\n        *ngFor=\"let b of barsForDataLabels; let i = index; trackBy: trackDataLabelBy\"\n        [barX]=\"b.x\"\n        [barY]=\"b.y\"\n        [barWidth]=\"b.width\"\n        [barHeight]=\"b.height\"\n        [value]=\"b.total\"\n        [valueFormatting]=\"dataLabelFormatting\"\n        [orientation]=\"'horizontal'\"\n        (dimensionsChanged)=\"dataLabelWidthChanged.emit({ size: $event, index: i })\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(500, style({ opacity: 0 }))\n      ])\n    ])\n  ]\n})\nexport class SeriesHorizontal implements OnChanges {\n  bars: any;\n  x: any;\n  y: any;\n  barsForDataLabels: Array<{ x: number; y: number; width: number; height: number; total: number; series: string }> = [];\n\n  @Input() dims;\n  @Input() type = 'standard';\n  @Input() series;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() seriesName: string;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() roundEdges: boolean;\n  @Input() animations: boolean = true;\n  @Input() showDataLabel: boolean = false;\n  @Input() dataLabelFormatting: any;\n  @Input() noBarWhenZero: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dataLabelWidthChanged = new EventEmitter();\n\n  tooltipPlacement: string;\n  tooltipType: string;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateTooltipSettings();\n    const d0 = {\n      [D0Types.positive]: 0,\n      [D0Types.negative]: 0\n    };\n    let d0Type: D0Types;\n    d0Type = D0Types.positive;\n    let total;\n    if (this.type === 'normalized') {\n      total = this.series.map(d => d.value).reduce((sum, d) => sum + d, 0);\n    }\n    const xScaleMin = Math.max(this.xScale.domain()[0], 0);\n\n    this.bars = this.series.map((d, index) => {\n      let value = d.value;\n      const label = this.getLabel(d);\n      const formattedLabel = formatLabel(label);\n      const roundEdges = this.roundEdges;\n      d0Type = value > 0 ? D0Types.positive : D0Types.negative;\n\n      const bar: any = {\n        value,\n        label,\n        roundEdges,\n        data: d,\n        formattedLabel\n      };\n\n      bar.height = this.yScale.bandwidth();\n\n      if (this.type === 'standard') {\n        bar.width = Math.abs(this.xScale(value) - this.xScale(xScaleMin));\n        if (value < 0) {\n          bar.x = this.xScale(value);\n        } else {\n          bar.x = this.xScale(xScaleMin);\n        }\n        bar.y = this.yScale(label);\n      } else if (this.type === 'stacked') {\n        const offset0 = d0[d0Type];\n        const offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n      } else if (this.type === 'normalized') {\n        let offset0 = d0[d0Type];\n        let offset1 = offset0 + value;\n        d0[d0Type] += value;\n\n        if (total > 0) {\n          offset0 = (offset0 * 100) / total;\n          offset1 = (offset1 * 100) / total;\n        } else {\n          offset0 = 0;\n          offset1 = 0;\n        }\n\n        bar.width = this.xScale(offset1) - this.xScale(offset0);\n        bar.x = this.xScale(offset0);\n        bar.y = 0;\n        bar.offset0 = offset0;\n        bar.offset1 = offset1;\n        value = (offset1 - offset0).toFixed(2) + '%';\n      }\n\n      if (this.colors.scaleType === 'ordinal') {\n        bar.color = this.colors.getColor(label);\n      } else {\n        if (this.type === 'standard') {\n          bar.color = this.colors.getColor(value);\n          bar.gradientStops = this.colors.getLinearGradientStops(value);\n        } else {\n          bar.color = this.colors.getColor(bar.offset1);\n          bar.gradientStops = this.colors.getLinearGradientStops(bar.offset1, bar.offset0);\n        }\n      }\n\n      let tooltipLabel = formattedLabel;\n      bar.ariaLabel = formattedLabel + ' ' + value.toLocaleString();\n      if (this.seriesName) {\n        tooltipLabel = `${this.seriesName} â¢ ${formattedLabel}`;\n        bar.data.series = this.seriesName;\n        bar.ariaLabel = this.seriesName + ' ' + bar.ariaLabel;\n      }\n\n      bar.tooltipText = this.tooltipDisabled\n        ? undefined\n        : `\n        <span class=\"tooltip-label\">${escapeLabel(tooltipLabel)}</span>\n        <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n      `;\n\n      return bar;\n    });\n\n    this.updateDataLabels();\n  }\n\n  updateDataLabels() {\n    if (this.type === 'stacked') {\n      this.barsForDataLabels = [];\n      const section: any = {};\n      section.series = this.seriesName;\n      const totalPositive = this.series.map(d => d.value).reduce((sum, d) => (d > 0 ? sum + d : sum), 0);\n      const totalNegative = this.series.map(d => d.value).reduce((sum, d) => (d < 0 ? sum + d : sum), 0);\n      section.total = totalPositive + totalNegative;\n      section.x = 0;\n      section.y = 0;\n      // if total is positive then we show it on the right, otherwise on the left\n      if (section.total > 0) {\n        section.width = this.xScale(totalPositive);\n      } else {\n        section.width = this.xScale(totalNegative);\n      }\n      section.height = this.yScale.bandwidth();\n      this.barsForDataLabels.push(section);\n    } else {\n      this.barsForDataLabels = this.series.map(d => {\n        const section: any = {};\n        section.series = this.seriesName ? this.seriesName : d.label;\n        section.total = d.value;\n        section.x = this.xScale(0);\n        section.y = this.yScale(d.label);\n        section.width = this.xScale(section.total) - this.xScale(0);\n        section.height = this.yScale.bandwidth();\n        return section;\n      });\n    }\n  }\n\n  updateTooltipSettings() {\n    this.tooltipPlacement = this.tooltipDisabled ? undefined : 'top';\n    this.tooltipType = this.tooltipDisabled ? undefined : 'tooltip';\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  getLabel(dataItem): string {\n    if (dataItem.label) {\n      return dataItem.label;\n    }\n    return dataItem.name;\n  }\n\n  trackBy(index, bar) {\n    return bar.label;\n  }\n\n  trackDataLabelBy(index, barLabel) {\n    return index + '#' + barLabel.series + '#' + barLabel.total;\n  }\n\n  click(data: DataItem): void {\n    this.select.emit(data);\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ElementRef,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { formatLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ngx-charts-bar-label]',\n  template: `\n    <svg:text\n      class=\"textDataLabel\"\n      alignment-baseline=\"middle\"\n      [attr.text-anchor]=\"textAnchor\"\n      [attr.transform]=\"transform\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n    >\n      {{ formatedValue }}\n    </svg:text>\n  `,\n  styleUrls: ['./bar-label.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BarLabelComponent implements OnChanges {\n  @Input() value;\n  @Input() valueFormatting: any;\n  @Input() barX;\n  @Input() barY;\n  @Input() barWidth;\n  @Input() barHeight;\n  @Input() orientation;\n\n  @Output() dimensionsChanged: EventEmitter<any> = new EventEmitter();\n\n  element: any;\n  x: number;\n  y: number;\n  horizontalPadding: number = 2;\n  verticalPadding: number = 5;\n  formatedValue: string;\n  transform: string;\n  textAnchor: string;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  getSize(): any {\n    const h = this.element.getBoundingClientRect().height;\n    const w = this.element.getBoundingClientRect().width;\n    return { height: h, width: w, negative: this.value < 0 };\n  }\n\n  ngAfterViewInit() {\n    this.dimensionsChanged.emit(this.getSize());\n  }\n\n  update(): void {\n    if (this.valueFormatting) {\n      this.formatedValue = this.valueFormatting(this.value);\n    } else {\n      this.formatedValue = formatLabel(this.value);\n    }\n\n    if (this.orientation === 'horizontal') {\n      this.x = this.barX + this.barWidth;\n      // if the value is negative then it's on the left of the x0.\n      // we need to put the data label in front of the bar\n      if (this.value < 0) {\n        this.x = this.x - this.horizontalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.x = this.x + this.horizontalPadding;\n        this.textAnchor = 'start';\n      }\n      this.y = this.barY + this.barHeight / 2;\n    } else {\n      // orientation must be \"vertical\"\n      this.x = this.barX + this.barWidth / 2;\n      this.y = this.barY + this.barHeight;\n\n      if (this.value < 0) {\n        this.y = this.y + this.verticalPadding;\n        this.textAnchor = 'end';\n      } else {\n        this.y = this.y - this.verticalPadding;\n        this.textAnchor = 'start';\n      }\n      this.transform = `rotate(-45, ${this.x} , ${this.y})`;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { BarComponent } from './bar.component';\nimport { BarHorizontalComponent } from './bar-horizontal.component';\nimport { BarHorizontal2DComponent } from './bar-horizontal-2d.component';\nimport { BarHorizontalNormalizedComponent } from './bar-horizontal-normalized.component';\nimport { BarHorizontalStackedComponent } from './bar-horizontal-stacked.component';\nimport { BarVerticalComponent } from './bar-vertical.component';\nimport { BarVertical2DComponent } from './bar-vertical-2d.component';\nimport { BarVerticalNormalizedComponent } from './bar-vertical-normalized.component';\nimport { BarVerticalStackedComponent } from './bar-vertical-stacked.component';\nimport { SeriesHorizontal } from './series-horizontal.component';\nimport { SeriesVerticalComponent } from './series-vertical.component';\nimport { BarLabelComponent } from './bar-label.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    BarComponent,\n    BarHorizontalComponent,\n    BarHorizontal2DComponent,\n    BarHorizontalNormalizedComponent,\n    BarHorizontalStackedComponent,\n    BarVerticalComponent,\n    BarVertical2DComponent,\n    BarVerticalNormalizedComponent,\n    BarVerticalStackedComponent,\n    BarLabelComponent,\n    SeriesHorizontal,\n    SeriesVerticalComponent\n  ],\n  exports: [\n    BarComponent,\n    BarHorizontalComponent,\n    BarHorizontal2DComponent,\n    BarHorizontalNormalizedComponent,\n    BarHorizontalStackedComponent,\n    BarVerticalComponent,\n    BarVertical2DComponent,\n    BarVerticalNormalizedComponent,\n    BarVerticalStackedComponent,\n    BarLabelComponent,\n    SeriesHorizontal,\n    SeriesVerticalComponent\n  ]\n})\nexport class BarChartModule {}\n","import { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\n\nexport function getDomain(values, scaleType, autoScale, minVal?, maxVal?): number[] {\n  let domain: number[] = [];\n  if (scaleType === 'linear') {\n    values = values.map(v => Number(v));\n    if (!autoScale) {\n      values.push(0);\n    }\n  }\n\n  if (scaleType === 'time' || scaleType === 'linear') {\n    const min = minVal ? minVal : Math.min(...values);\n    const max = maxVal ? maxVal : Math.max(...values);\n\n    domain = [min, max];\n  } else {\n    domain = values;\n  }\n\n  return domain;\n}\n\nexport function getScale(domain, range: number[], scaleType, roundDomains): any {\n  let scale: any;\n\n  if (scaleType === 'time') {\n    scale = scaleTime()\n      .range(range)\n      .domain(domain);\n  } else if (scaleType === 'linear') {\n    scale = scaleLinear()\n      .range(range)\n      .domain(domain);\n\n    if (roundDomains) {\n      scale = scale.nice();\n    }\n  } else if (scaleType === 'ordinal') {\n    scale = scalePoint()\n      .range([range[0], range[1]])\n      .domain(domain);\n  }\n\n  return scale;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { scaleLinear } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { getScaleType } from '../common/domain.helper';\nimport { getDomain, getScale } from './bubble-chart.utils';\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'ngx-charts-bubble-chart',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [activeEntries]=\"activeEntries\"\n      [legendOptions]=\"legendOptions\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"bubble-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [showGridLines]=\"showGridLines\"\n          [dims]=\"dims\"\n          [xScale]=\"xScale\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        />\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [showGridLines]=\"showGridLines\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        />\n        <svg:rect\n          class=\"bubble-chart-area\"\n          x=\"0\"\n          y=\"0\"\n          [attr.width]=\"dims.width\"\n          [attr.height]=\"dims.height\"\n          style=\"fill: rgb(255, 0, 0); opacity: 0; cursor: 'auto';\"\n          (mouseenter)=\"deactivateAll()\"\n        />\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of data; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-bubble-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [rScale]=\"rScale\"\n              [xScaleType]=\"xScaleType\"\n              [yScaleType]=\"yScaleType\"\n              [xAxisLabel]=\"xAxisLabel\"\n              [yAxisLabel]=\"yAxisLabel\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event, series)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(\n          500,\n          style({\n            opacity: 0\n          })\n        )\n      ])\n    ])\n  ]\n})\nexport class BubbleChartComponent extends BaseChartComponent {\n  @Input() showGridLines: boolean = true;\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis: boolean = true;\n  @Input() yAxis: boolean = true;\n  @Input() showXAxisLabel: boolean;\n  @Input() showYAxisLabel: boolean;\n  @Input() xAxisLabel: string;\n  @Input() yAxisLabel: string;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains: boolean = false;\n  @Input() maxRadius = 10;\n  @Input() minRadius = 3;\n  @Input() autoScale: boolean;\n  @Input() schemeType = 'ordinal';\n  @Input() tooltipDisabled: boolean = false;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: any;\n  @Input() yScaleMax: any;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  colors: ColorHelper;\n  scaleType = 'linear';\n  margin = [10, 20, 10, 20];\n  bubblePadding = [0, 0, 0, 0];\n  data: any;\n\n  legendOptions: any;\n  transform: string;\n\n  clipPath: string;\n  clipPathId: string;\n\n  seriesDomain: any[];\n  xDomain: any[];\n  yDomain: any[];\n  rDomain: number[];\n\n  xScaleType: string;\n  yScaleType: string;\n\n  yScale: any;\n  xScale: any;\n  rScale: any;\n\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n\n  activeEntries: any[] = [];\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    this.seriesDomain = this.results.map(d => d.name);\n    this.rDomain = this.getRDomain();\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n\n    this.transform = `translate(${this.dims.xOffset},${this.margin[0]})`;\n\n    const colorDomain = this.schemeType === 'ordinal' ? this.seriesDomain : this.rDomain;\n    this.colors = new ColorHelper(this.scheme, this.schemeType, colorDomain, this.customColors);\n\n    this.data = this.results;\n\n    this.minRadius = Math.max(this.minRadius, 1);\n    this.maxRadius = Math.max(this.maxRadius, 1);\n\n    this.rScale = this.getRScale(this.rDomain, [this.minRadius, this.maxRadius]);\n\n    this.bubblePadding = [0, 0, 0, 0];\n    this.setScales();\n\n    this.bubblePadding = this.getBubblePadding();\n    this.setScales();\n\n    this.legendOptions = this.getLegendOptions();\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.deactivateAll();\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  getBubblePadding() {\n    let yMin = 0;\n    let xMin = 0;\n    let yMax = this.dims.height;\n    let xMax = this.dims.width;\n\n    for (const s of this.data) {\n      for (const d of s.series) {\n        const r = this.rScale(d.r);\n        const cx = this.xScaleType === 'linear' ? this.xScale(Number(d.x)) : this.xScale(d.x);\n        const cy = this.yScaleType === 'linear' ? this.yScale(Number(d.y)) : this.yScale(d.y);\n        xMin = Math.max(r - cx, xMin);\n        yMin = Math.max(r - cy, yMin);\n        yMax = Math.max(cy + r, yMax);\n        xMax = Math.max(cx + r, xMax);\n      }\n    }\n\n    xMax = Math.max(xMax - this.dims.width, 0);\n    yMax = Math.max(yMax - this.dims.height, 0);\n\n    return [yMin, xMax, yMax, xMin];\n  }\n\n  setScales() {\n    let width = this.dims.width;\n    if (this.xScaleMin === undefined && this.xScaleMax === undefined) {\n      width = width - this.bubblePadding[1];\n    }\n    let height = this.dims.height;\n    if (this.yScaleMin === undefined && this.yScaleMax === undefined) {\n      height = height - this.bubblePadding[2];\n    }\n    this.xScale = this.getXScale(this.xDomain, width);\n    this.yScale = this.getYScale(this.yDomain, height);\n  }\n\n  getYScale(domain, height): any {\n    return getScale(domain, [height, this.bubblePadding[0]], this.yScaleType, this.roundDomains);\n  }\n\n  getXScale(domain, width): any {\n    return getScale(domain, [this.bubblePadding[3], width], this.xScaleType, this.roundDomains);\n  }\n\n  getRScale(domain, range): any {\n    const scale = scaleLinear()\n      .range(range)\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  getLegendOptions(): any {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      position: this.legendPosition,\n      title: undefined\n    };\n\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.rDomain;\n      opts.colors = this.colors.scale;\n    }\n\n    return opts;\n  }\n\n  getXDomain(): any[] {\n    const values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.x)) {\n          values.push(d.x);\n        }\n      }\n    }\n\n    this.xScaleType = getScaleType(values);\n    return getDomain(values, this.xScaleType, this.autoScale, this.xScaleMin, this.xScaleMax);\n  }\n\n  getYDomain(): any[] {\n    const values = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.y)) {\n          values.push(d.y);\n        }\n      }\n    }\n\n    this.yScaleType = getScaleType(values);\n    return getDomain(values, this.yScaleType, this.autoScale, this.yScaleMin, this.yScaleMax);\n  }\n\n  getRDomain(): number[] {\n    let min = Infinity;\n    let max = -Infinity;\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        const value = Number(d.r) || 1;\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    }\n\n    return [min, max];\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { formatLabel, escapeLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ngx-charts-bubble-series]',\n  template: `\n    <svg:g *ngFor=\"let circle of circles; trackBy: trackBy\">\n      <svg:g [attr.transform]=\"circle.transform\">\n        <svg:g\n          ngx-charts-circle\n          [@animationState]=\"'active'\"\n          class=\"circle\"\n          [cx]=\"0\"\n          [cy]=\"0\"\n          [r]=\"circle.radius\"\n          [fill]=\"circle.color\"\n          [style.opacity]=\"circle.opacity\"\n          [class.active]=\"circle.isActive\"\n          [pointerEvents]=\"'all'\"\n          [data]=\"circle.value\"\n          [classNames]=\"circle.classNames\"\n          (select)=\"onClick(circle.data)\"\n          (activate)=\"activateCircle(circle)\"\n          (deactivate)=\"deactivateCircle(circle)\"\n          ngx-tooltip\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipPlacement]=\"'top'\"\n          [tooltipType]=\"'tooltip'\"\n          [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(circle)\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipContext]=\"circle.data\"\n        />\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({\n          opacity: 0,\n          transform: 'scale(0)'\n        }),\n        animate(250, style({ opacity: 1, transform: 'scale(1)' }))\n      ])\n    ])\n  ]\n})\nexport class BubbleSeriesComponent implements OnChanges {\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() rScale;\n  @Input() xScaleType;\n  @Input() yScaleType;\n  @Input() colors;\n  @Input() visibleValue;\n  @Input() activeEntries: any[];\n  @Input() xAxisLabel: string;\n  @Input() yAxisLabel: string;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  areaPath: any;\n  circles: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.circles = this.getCircles();\n  }\n\n  getCircles(): any[] {\n    const seriesName = this.data.name;\n\n    return this.data.series\n      .map((d, i) => {\n        if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n          const y = d.y;\n          const x = d.x;\n          const r = d.r;\n\n          const radius = this.rScale(r || 1);\n          const tooltipLabel = formatLabel(d.name);\n\n          const cx = this.xScaleType === 'linear' ? this.xScale(Number(x)) : this.xScale(x);\n          const cy = this.yScaleType === 'linear' ? this.yScale(Number(y)) : this.yScale(y);\n\n          const color = this.colors.scaleType === 'linear' ? this.colors.getColor(r) : this.colors.getColor(seriesName);\n\n          const isActive = !this.activeEntries.length ? true : this.isActive({ name: seriesName });\n          const opacity = isActive ? 1 : 0.3;\n\n          const data = Object.assign({}, d, {\n            series: seriesName,\n            name: d.name,\n            value: d.y,\n            x: d.x,\n            radius: d.r\n          });\n\n          return {\n            data,\n            x,\n            y,\n            r,\n            classNames: [`circle-data-${i}`],\n            value: y,\n            label: x,\n            cx,\n            cy,\n            radius,\n            tooltipLabel,\n            color,\n            opacity,\n            seriesName,\n            isActive,\n            transform: `translate(${cx},${cy})`\n          };\n        }\n      })\n      .filter(circle => circle !== undefined);\n  }\n\n  getTooltipText(circle): string {\n    const hasRadius = typeof circle.r !== 'undefined';\n    const hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n    const hasSeriesName = circle.seriesName && circle.seriesName.length;\n\n    const radiusValue = hasRadius ? formatLabel(circle.r) : '';\n    const xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? `${this.xAxisLabel}:` : '';\n    const yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? `${this.yAxisLabel}:` : '';\n    const x = formatLabel(circle.x);\n    const y = formatLabel(circle.y);\n    const name =\n      hasSeriesName && hasTooltipLabel\n        ? `${circle.seriesName} â¢ ${circle.tooltipLabel}`\n        : circle.seriesName + circle.tooltipLabel;\n    const tooltipTitle =\n      hasSeriesName || hasTooltipLabel ? `<span class=\"tooltip-label\">${escapeLabel(name)}</span>` : '';\n\n    return `\n      ${tooltipTitle}\n      <span class=\"tooltip-label\">\n        <label>${escapeLabel(xAxisLabel)}</label> ${escapeLabel(x)}<br />\n        <label>${escapeLabel(yAxisLabel)}</label> ${escapeLabel(y)}\n      </span>\n      <span class=\"tooltip-val\">\n        ${escapeLabel(radiusValue)}\n      </span>\n    `;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isVisible(circle): boolean {\n    if (this.activeEntries.length > 0) {\n      return this.isActive({ name: circle.seriesName });\n    }\n\n    return circle.opacity !== 0;\n  }\n\n  activateCircle(circle): void {\n    circle.barVisible = true;\n    this.activate.emit({ name: this.data.name });\n  }\n\n  deactivateCircle(circle): void {\n    circle.barVisible = false;\n    this.deactivate.emit({ name: this.data.name });\n  }\n\n  trackBy(index, circle): string {\n    return `${circle.data.series} ${circle.data.name}`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { BubbleChartComponent } from './bubble-chart.component';\nimport { BubbleSeriesComponent } from './bubble-series.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [BubbleChartComponent, BubbleSeriesComponent],\n  exports: [BubbleChartComponent, BubbleSeriesComponent]\n})\nexport class BubbleChartModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  SimpleChanges,\n  ElementRef,\n  OnChanges,\n  ChangeDetectionStrategy,\n  HostListener\n} from '@angular/core';\nimport { select } from 'd3-selection';\n\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'g[ngx-charts-heat-map-cell]',\n  template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\">\n      <defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-linear-gradient orientation=\"vertical\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        rx=\"3\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"cell\"\n        style=\"cursor: pointer\"\n        (click)=\"onClick()\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeatMapCellComponent implements OnChanges {\n  @Input() fill;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() data;\n  @Input() label;\n  @Input() gradient: boolean = false;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  element: HTMLElement;\n  transform: string;\n  activeRange: any[];\n  startOpacity: number;\n  gradientId: string;\n  gradientUrl: string;\n  gradientStops: any[];\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.transform = `translate(${this.x} , ${this.y})`;\n\n    this.startOpacity = 0.3;\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n\n    if (this.animations) {\n      this.loadAnimation();\n    }\n  }\n\n  getGradientStops() {\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: this.startOpacity\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }\n    ];\n  }\n\n  loadAnimation(): void {\n    const node = select(this.element).select('.cell');\n    node.attr('opacity', 0);\n    this.animateToCurrentForm();\n  }\n\n  animateToCurrentForm(): void {\n    const node = select(this.element).select('.cell');\n\n    node\n      .transition()\n      .duration(750)\n      .attr('opacity', 1);\n  }\n\n  onClick() {\n    this.select.emit(this.data);\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter(): void {\n    this.activate.emit(this.data);\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave(): void {\n    this.deactivate.emit(this.data);\n  }\n}\n","import {\n  Component,\n  Input,\n  SimpleChanges,\n  Output,\n  EventEmitter,\n  OnChanges,\n  OnInit,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { formatLabel, escapeLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ngx-charts-heat-map-cell-series]',\n  template: `\n    <svg:g\n      ngx-charts-heat-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [data]=\"c.data\"\n      (select)=\"onClick(c.cell)\"\n      (activate)=\"activate.emit(c.cell)\"\n      (deactivate)=\"deactivate.emit(c.cell)\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"{ series: c.series, name: c.label, value: c.data }\"\n    ></svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeatCellSeriesComponent implements OnChanges, OnInit {\n  @Input() data;\n  @Input() colors;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() gradient: boolean;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipText: any;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  cells: any[];\n\n  ngOnInit() {\n    if (!this.tooltipText) {\n      this.tooltipText = this.getTooltipText;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.cells = this.getCells();\n  }\n\n  getCells() {\n    const cells = [];\n\n    this.data.map(row => {\n      row.series.map(cell => {\n        const value = cell.value;\n        cell.series = row.name;\n\n        cells.push({\n          row,\n          cell,\n          x: this.xScale(row.name),\n          y: this.yScale(cell.name),\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: this.colors.getColor(value),\n          data: value,\n          label: formatLabel(cell.name),\n          series: row.name\n        });\n      });\n    });\n\n    return cells;\n  }\n\n  getTooltipText({ label, data, series }): string {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(series)} â¢ ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${data.toLocaleString()}</span>\n    `;\n  }\n\n  trackBy(index, item): string {\n    return item.tooltipText;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { scaleBand } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ngx-charts-heat-map',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [animations]=\"animations\"\n      [legendOptions]=\"legendOptions\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"heat-map chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:rect\n          *ngFor=\"let rect of rects\"\n          [attr.x]=\"rect.x\"\n          [attr.y]=\"rect.y\"\n          [attr.rx]=\"rect.rx\"\n          [attr.width]=\"rect.width\"\n          [attr.height]=\"rect.height\"\n          [attr.fill]=\"rect.fill\"\n        />\n        <svg:g\n          ngx-charts-heat-map-cell-series\n          [xScale]=\"xScale\"\n          [yScale]=\"yScale\"\n          [colors]=\"colors\"\n          [data]=\"results\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, undefined)\"\n          (deactivate)=\"onDeactivate($event, undefined)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class HeatMapComponent extends BaseChartComponent {\n  @Input() legend;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() gradient: boolean;\n  @Input() innerPadding: number | number[] = 8;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipText: any;\n  @Input() min: any;\n  @Input() max: any;\n  @Input() activeEntries: any[] = [];\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xDomain: any[];\n  yDomain: any[];\n  valueDomain: any[];\n  xScale: any;\n  yScale: any;\n  color: any;\n  colors: ColorHelper;\n  colorScale: any;\n  transform: string;\n  rects: any[];\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  legendOptions: any;\n  scaleType: string = 'linear';\n\n  update(): void {\n    super.update();\n\n    this.formatDates();\n\n    this.xDomain = this.getXDomain();\n    this.yDomain = this.getYDomain();\n    this.valueDomain = this.getValueDomain();\n\n    this.scaleType = getScaleType(this.valueDomain, false);\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.scaleType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.scaleType === 'linear') {\n      let min = this.min;\n      let max = this.max;\n      if (!this.min) {\n        min = Math.min(0, ...this.valueDomain);\n      }\n      if (!this.max) {\n        max = Math.max(...this.valueDomain);\n      }\n      this.valueDomain = [min, max];\n    }\n\n    this.xScale = this.getXScale();\n    this.yScale = this.getYScale();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n    this.rects = this.getRects();\n  }\n\n  getXDomain(): any {\n    const domain = [];\n    for (const group of this.results) {\n      if (!domain.includes(group.name)) {\n        domain.push(group.name);\n      }\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.name)) {\n          domain.push(d.name);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  getValueDomain(): any[] {\n    const domain = [];\n\n    for (const group of this.results) {\n      for (const d of group.series) {\n        if (!domain.includes(d.value)) {\n          domain.push(d.value);\n        }\n      }\n    }\n\n    return domain;\n  }\n\n  /**\n   * Converts the input to gap paddingInner in fraction\n   * Supports the following inputs:\n   *    Numbers: 8\n   *    Strings: \"8\", \"8px\", \"8%\"\n   *    Arrays: [8,2], \"8,2\", \"[8,2]\"\n   *    Mixed: [8,\"2%\"], [\"8px\",\"2%\"], \"8,2%\", \"[8,2%]\"\n   *\n   * @memberOf HeatMapComponent\n   */\n  getDimension(value: string | number | Array<string | number>, index = 0, N: number, L: number): number {\n    if (typeof value === 'string') {\n      value = value\n        .replace('[', '')\n        .replace(']', '')\n        .replace('px', '')\n        // tslint:disable-next-line: quotemark\n        .replace(\"'\", '');\n\n      if (value.includes(',')) {\n        value = value.split(',');\n      }\n    }\n    if (Array.isArray(value) && typeof index === 'number') {\n      return this.getDimension(value[index], null, N, L);\n    }\n    if (typeof value === 'string' && value.includes('%')) {\n      return +value.replace('%', '') / 100;\n    }\n    return N / (L / +value + 1);\n  }\n\n  getXScale(): any {\n    const f = this.getDimension(this.innerPadding, 0, this.xDomain.length, this.dims.width);\n    return scaleBand()\n      .rangeRound([0, this.dims.width])\n      .domain(this.xDomain)\n      .paddingInner(f);\n  }\n\n  getYScale(): any {\n    const f = this.getDimension(this.innerPadding, 1, this.yDomain.length, this.dims.height);\n    return scaleBand()\n      .rangeRound([this.dims.height, 0])\n      .domain(this.yDomain)\n      .paddingInner(f);\n  }\n\n  getRects(): any[] {\n    const rects = [];\n\n    this.xDomain.map(xVal => {\n      this.yDomain.map(yVal => {\n        rects.push({\n          x: this.xScale(xVal),\n          y: this.yScale(yVal),\n          rx: 3,\n          width: this.xScale.bandwidth(),\n          height: this.yScale.bandwidth(),\n          fill: 'rgba(200,200,200,0.03)'\n        });\n      });\n    });\n\n    return rects;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, this.scaleType, this.valueDomain);\n  }\n\n  getLegendOptions() {\n    return {\n      scaleType: this.scaleType,\n      domain: this.valueDomain,\n      colors: this.scaleType === 'ordinal' ? this.colors : this.colors.scale,\n      title: this.scaleType === 'ordinal' ? this.legendTitle : undefined,\n      position: this.legendPosition\n    };\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    const items = this.results\n      .map(g => g.series)\n      .flat()\n      .filter(i => {\n        if (fromLegend) {\n          return i.label === item.name;\n        } else {\n          return i.name === item.name && i.series === item.series;\n        }\n      });\n\n    this.activeEntries = [...items];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(event, group, fromLegend = false) {\n    const item = Object.assign({}, event);\n    if (group) {\n      item.series = group.name;\n    }\n\n    this.activeEntries = this.activeEntries.filter(i => {\n      if (fromLegend) {\n        return i.label !== item.name;\n      } else {\n        return !(i.name === item.name && i.series === item.series);\n      }\n    });\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { HeatMapCellComponent } from './heat-map-cell.component';\nimport { HeatCellSeriesComponent } from './heat-map-cell-series.component';\nimport { HeatMapComponent } from './heat-map.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],\n  exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]\n})\nexport class HeatMapModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ElementRef,\n  ChangeDetectionStrategy,\n  SimpleChanges\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { select } from 'd3-selection';\n\n@Component({\n  selector: 'g[ngx-charts-line]',\n  template: `\n    <svg:path\n      [@animationState]=\"'active'\"\n      class=\"line\"\n      [attr.d]=\"initialPath\"\n      [attr.fill]=\"fill\"\n      [attr.stroke]=\"stroke\"\n      stroke-width=\"1.5px\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':enter', [\n        style({\n          strokeDasharray: 2000,\n          strokeDashoffset: 2000\n        }),\n        animate(\n          1000,\n          style({\n            strokeDashoffset: 0\n          })\n        )\n      ])\n    ])\n  ]\n})\nexport class LineComponent implements OnChanges {\n  @Input() path;\n  @Input() stroke;\n  @Input() data;\n  @Input() fill: string = 'none';\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  initialized: boolean = false;\n  initialPath: string;\n\n  constructor(private element: ElementRef) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.initialized) {\n      this.initialized = true;\n      this.initialPath = this.path;\n    } else {\n      this.updatePathEl();\n    }\n  }\n\n  updatePathEl(): void {\n    const node = select(this.element.nativeElement).select('.line');\n\n    if (this.animations) {\n      node\n        .transition()\n        .duration(750)\n        .attr('d', this.path);\n    } else {\n      node.attr('d', this.path);\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  HostListener,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { curveLinear } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { id } from '../utils/id';\nimport { getUniqueXDomainValues, getScaleType } from '../common/domain.helper';\n\n@Component({\n  selector: 'ngx-charts-line-chart',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:defs>\n        <svg:clipPath [attr.id]=\"clipPathId\">\n          <svg:rect\n            [attr.width]=\"dims.width + 10\"\n            [attr.height]=\"dims.height + 10\"\n            [attr.transform]=\"'translate(-5, -5)'\"\n          />\n        </svg:clipPath>\n      </svg:defs>\n      <svg:g [attr.transform]=\"transform\" class=\"line-chart chart\">\n        <svg:g\n          ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"xScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [rotateTicks]=\"rotateXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"yScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          [referenceLines]=\"referenceLines\"\n          [showRefLines]=\"showRefLines\"\n          [showRefLabels]=\"showRefLabels\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g [attr.clip-path]=\"clipPath\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-line-series\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [hasRange]=\"hasRange\"\n              [animations]=\"animations\"\n            />\n          </svg:g>\n\n          <svg:g *ngIf=\"!tooltipDisabled\" (mouseleave)=\"hideCircles()\">\n            <svg:g\n              ngx-charts-tooltip-area\n              [dims]=\"dims\"\n              [xSet]=\"xSet\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [results]=\"results\"\n              [colors]=\"colors\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"seriesTooltipTemplate\"\n              (hover)=\"updateHoveredVertical($event)\"\n            />\n\n            <svg:g *ngFor=\"let series of results\">\n              <svg:g\n                ngx-charts-circle-series\n                [xScale]=\"xScale\"\n                [yScale]=\"yScale\"\n                [colors]=\"colors\"\n                [data]=\"series\"\n                [scaleType]=\"scaleType\"\n                [visibleValue]=\"hoveredVertical\"\n                [activeEntries]=\"activeEntries\"\n                [tooltipDisabled]=\"tooltipDisabled\"\n                [tooltipTemplate]=\"tooltipTemplate\"\n                (select)=\"onClick($event)\"\n                (activate)=\"onActivate($event)\"\n                (deactivate)=\"onDeactivate($event)\"\n              />\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n      <svg:g\n        ngx-charts-timeline\n        *ngIf=\"timeline && scaleType != 'ordinal'\"\n        [attr.transform]=\"timelineTransform\"\n        [results]=\"results\"\n        [view]=\"[timelineWidth, height]\"\n        [height]=\"timelineHeight\"\n        [scheme]=\"scheme\"\n        [customColors]=\"customColors\"\n        [scaleType]=\"scaleType\"\n        [legend]=\"legend\"\n        (onDomainChange)=\"updateDomain($event)\"\n      >\n        <svg:g *ngFor=\"let series of results; trackBy: trackBy\">\n          <svg:g\n            ngx-charts-line-series\n            [xScale]=\"timelineXScale\"\n            [yScale]=\"timelineYScale\"\n            [colors]=\"colors\"\n            [data]=\"series\"\n            [scaleType]=\"scaleType\"\n            [curve]=\"curve\"\n            [hasRange]=\"hasRange\"\n            [animations]=\"animations\"\n          />\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(\n          500,\n          style({\n            opacity: 0\n          })\n        )\n      ])\n    ])\n  ]\n})\nexport class LineChartComponent extends BaseChartComponent {\n  @Input() legend;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis;\n  @Input() yAxis;\n  @Input() showXAxisLabel;\n  @Input() showYAxisLabel;\n  @Input() xAxisLabel;\n  @Input() yAxisLabel;\n  @Input() autoScale;\n  @Input() timeline;\n  @Input() gradient: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() curve: any = curveLinear;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() rangeFillOpacity: number;\n  @Input() trimXAxisTicks: boolean = true;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() rotateXAxisTicks: boolean = true;\n  @Input() maxXAxisTickLength: number = 16;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: any;\n  @Input() yAxisTickFormatting: any;\n  @Input() xAxisTicks: any[];\n  @Input() yAxisTicks: any[];\n  @Input() roundDomains: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() showRefLines: boolean = false;\n  @Input() referenceLines: any;\n  @Input() showRefLabels: boolean = true;\n  @Input() xScaleMin: any;\n  @Input() xScaleMax: any;\n  @Input() yScaleMin: number;\n  @Input() yScaleMax: number;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n  @ContentChild('seriesTooltipTemplate') seriesTooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  xSet: any;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  yScale: any;\n  xScale: any;\n  colors: ColorHelper;\n  scaleType: string;\n  transform: string;\n  clipPath: string;\n  clipPathId: string;\n  series: any;\n  areaPath: any;\n  margin = [10, 20, 10, 20];\n  hoveredVertical: any; // the value of the x axis that is hovered over\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  filteredDomain: any;\n  legendOptions: any;\n  hasRange: boolean; // whether the line has a min-max range around it\n  timelineWidth: any;\n  timelineHeight: number = 50;\n  timelineXScale: any;\n  timelineYScale: any;\n  timelineXDomain: any;\n  timelineTransform: any;\n  timelinePadding: number = 10;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    if (this.timeline) {\n      this.dims.height -= this.timelineHeight + this.margin[2] + this.timelinePadding;\n    }\n\n    this.xDomain = this.getXDomain();\n    if (this.filteredDomain) {\n      this.xDomain = this.filteredDomain;\n    }\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n    this.yScale = this.getYScale(this.yDomain, this.dims.height);\n\n    this.updateTimeline();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n\n    this.clipPathId = 'clip' + id().toString();\n    this.clipPath = `url(#${this.clipPathId})`;\n  }\n\n  updateTimeline(): void {\n    if (this.timeline) {\n      this.timelineWidth = this.dims.width;\n      this.timelineXDomain = this.getXDomain();\n      this.timelineXScale = this.getXScale(this.timelineXDomain, this.timelineWidth);\n      this.timelineYScale = this.getYScale(this.yDomain, this.timelineHeight);\n      this.timelineTransform = `translate(${this.dims.xOffset}, ${-this.margin[2]})`;\n    }\n  }\n\n  getXDomain(): any[] {\n    let values = getUniqueXDomainValues(this.results);\n\n    this.scaleType = getScaleType(values);\n    let domain = [];\n\n    if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n    }\n\n    let min;\n    let max;\n    if (this.scaleType === 'time' || this.scaleType === 'linear') {\n      min = this.xScaleMin ? this.xScaleMin : Math.min(...values);\n\n      max = this.xScaleMax ? this.xScaleMax : Math.max(...values);\n    }\n\n    if (this.scaleType === 'time') {\n      domain = [new Date(min), new Date(max)];\n      this.xSet = [...values].sort((a, b) => {\n        const aDate = a.getTime();\n        const bDate = b.getTime();\n        if (aDate > bDate) return 1;\n        if (bDate > aDate) return -1;\n        return 0;\n      });\n    } else if (this.scaleType === 'linear') {\n      domain = [min, max];\n      // Use compare function to sort numbers numerically\n      this.xSet = [...values].sort((a, b) => a - b);\n    } else {\n      domain = values;\n      this.xSet = values;\n    }\n\n    return domain;\n  }\n\n  getYDomain(): any[] {\n    const domain = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          this.hasRange = true;\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n\n    const values = [...domain];\n    if (!this.autoScale) {\n      values.push(0);\n    }\n\n    const min = this.yScaleMin ? this.yScaleMin : Math.min(...values);\n\n    const max = this.yScaleMax ? this.yScaleMax : Math.max(...values);\n\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    let scale;\n\n    if (this.scaleType === 'time') {\n      scale = scaleTime()\n        .range([0, width])\n        .domain(domain);\n    } else if (this.scaleType === 'linear') {\n      scale = scaleLinear()\n        .range([0, width])\n        .domain(domain);\n\n      if (this.roundDomains) {\n        scale = scale.nice();\n      }\n    } else if (this.scaleType === 'ordinal') {\n      scale = scalePoint()\n        .range([0, width])\n        .padding(0.1)\n        .domain(domain);\n    }\n\n    return scale;\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([height, 0])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  updateDomain(domain): void {\n    this.filteredDomain = domain;\n    this.xDomain = this.filteredDomain;\n    this.xScale = this.getXScale(this.xDomain, this.dims.width);\n  }\n\n  updateHoveredVertical(item): void {\n    this.hoveredVertical = item.value;\n    this.deactivateAll();\n  }\n\n  @HostListener('mouseleave')\n  hideCircles(): void {\n    this.hoveredVertical = null;\n    this.deactivateAll();\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.name;\n  }\n\n  setColors(): void {\n    let domain;\n    if (this.schemeType === 'ordinal') {\n      domain = this.seriesDomain;\n    } else {\n      domain = this.yDomain;\n    }\n\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    const opts = {\n      scaleType: this.schemeType,\n      colors: undefined,\n      domain: [],\n      title: undefined,\n      position: this.legendPosition\n    };\n    if (opts.scaleType === 'ordinal') {\n      opts.domain = this.seriesDomain;\n      opts.colors = this.colors;\n      opts.title = this.legendTitle;\n    } else {\n      opts.domain = this.yDomain;\n      opts.colors = this.colors.scale;\n    }\n    return opts;\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    this.deactivateAll();\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { area, line } from 'd3-shape';\n\nimport { id } from '../utils/id';\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\n\n@Component({\n  selector: 'g[ngx-charts-line-series]',\n  template: `\n    <svg:g>\n      <defs>\n        <svg:g\n          ngx-charts-svg-linear-gradient\n          *ngIf=\"hasGradient\"\n          orientation=\"vertical\"\n          [name]=\"gradientId\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-area\n        class=\"line-highlight\"\n        [data]=\"data\"\n        [path]=\"areaPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [opacity]=\"0.25\"\n        [startOpacity]=\"0\"\n        [gradient]=\"true\"\n        [stops]=\"areaGradientStops\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-line\n        class=\"line-series\"\n        [data]=\"data\"\n        [path]=\"path\"\n        [stroke]=\"stroke\"\n        [animations]=\"animations\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n      />\n      <svg:g\n        ngx-charts-area\n        *ngIf=\"hasRange\"\n        class=\"line-series-range\"\n        [data]=\"data\"\n        [path]=\"outerPath\"\n        [fill]=\"hasGradient ? gradientUrl : colors.getColor(data.name)\"\n        [class.active]=\"isActive(data)\"\n        [class.inactive]=\"isInactive(data)\"\n        [opacity]=\"rangeFillOpacity\"\n        [animations]=\"animations\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LineSeriesComponent implements OnChanges {\n  @Input() data;\n  @Input() xScale;\n  @Input() yScale;\n  @Input() colors;\n  @Input() scaleType;\n  @Input() curve: any;\n  @Input() activeEntries: any[];\n  @Input() rangeFillOpacity: number;\n  @Input() hasRange: boolean;\n  @Input() animations: boolean = true;\n\n  path: string;\n  outerPath: string;\n  areaPath: string;\n  gradientId: string;\n  gradientUrl: string;\n  hasGradient: boolean;\n  gradientStops: any[];\n  areaGradientStops: any[];\n  stroke: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateGradients();\n\n    const data = this.sortData(this.data.series);\n\n    const lineGen = this.getLineGenerator();\n    this.path = lineGen(data) || '';\n\n    const areaGen = this.getAreaGenerator();\n    this.areaPath = areaGen(data) || '';\n\n    if (this.hasRange) {\n      const range = this.getRangeGenerator();\n      this.outerPath = range(data) || '';\n    }\n\n    if (this.hasGradient) {\n      this.stroke = this.gradientUrl;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      if (max === min) {\n        this.stroke = this.colors.getColor(max);\n      }\n    } else {\n      this.stroke = this.colors.getColor(this.data.name);\n    }\n  }\n\n  getLineGenerator(): any {\n    return line<any>()\n      .x(d => {\n        const label = d.name;\n        let value;\n        if (this.scaleType === 'time') {\n          value = this.xScale(label);\n        } else if (this.scaleType === 'linear') {\n          value = this.xScale(Number(label));\n        } else {\n          value = this.xScale(label);\n        }\n        return value;\n      })\n      .y(d => this.yScale(d.value))\n      .curve(this.curve);\n  }\n\n  getRangeGenerator(): any {\n    return area<any>()\n      .x(d => {\n        const label = d.name;\n        let value;\n        if (this.scaleType === 'time') {\n          value = this.xScale(label);\n        } else if (this.scaleType === 'linear') {\n          value = this.xScale(Number(label));\n        } else {\n          value = this.xScale(label);\n        }\n        return value;\n      })\n      .y0(d => this.yScale(typeof d.min === 'number' ? d.min : d.value))\n      .y1(d => this.yScale(typeof d.max === 'number' ? d.max : d.value))\n      .curve(this.curve);\n  }\n\n  getAreaGenerator(): any {\n    const xProperty = d => {\n      const label = d.name;\n      return this.xScale(label);\n    };\n\n    return area<any>()\n      .x(xProperty)\n      .y0(() => this.yScale.range()[0])\n      .y1(d => this.yScale(d.value))\n      .curve(this.curve);\n  }\n\n  sortData(data) {\n    if (this.scaleType === 'linear') {\n      data = sortLinear(data, 'name');\n    } else if (this.scaleType === 'time') {\n      data = sortByTime(data, 'name');\n    } else {\n      data = sortByDomain(data, 'name', 'asc', this.xScale.domain());\n    }\n\n    return data;\n  }\n\n  updateGradients() {\n    if (this.colors.scaleType === 'linear') {\n      this.hasGradient = true;\n      this.gradientId = 'grad' + id().toString();\n      this.gradientUrl = `url(#${this.gradientId})`;\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n      this.areaGradientStops = this.colors.getLinearGradientStops(max);\n    } else {\n      this.hasGradient = false;\n      this.gradientStops = undefined;\n      this.areaGradientStops = undefined;\n    }\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry): boolean {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { LineComponent } from './line.component';\nimport { LineChartComponent } from './line-chart.component';\nimport { LineSeriesComponent } from './line-series.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [LineComponent, LineChartComponent, LineSeriesComponent],\n  exports: [LineComponent, LineChartComponent, LineSeriesComponent]\n})\nexport class LineChartModule {}\n","export function isDate(value) {\n  return toString.call(value) === '[object Date]';\n}\n\nexport function isNumber(value) {\n  return typeof value === 'number';\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { scaleLinear, scaleTime, scalePoint } from 'd3-scale';\nimport { curveCardinalClosed } from 'd3-shape';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { getScaleType } from '../common/domain.helper';\nimport { isDate } from '../utils/types';\n\nconst twoPI = 2 * Math.PI;\n\n@Component({\n  selector: 'ngx-charts-polar-chart',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g class=\"polar-chart chart\" [attr.transform]=\"transform\">\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:circle class=\"polar-chart-background\" cx=\"0\" cy=\"0\" [attr.r]=\"this.outerRadius\" />\n          <svg:g *ngIf=\"showGridLines\">\n            <svg:circle\n              *ngFor=\"let r of radiusTicks\"\n              class=\"gridline-path radial-gridline-path\"\n              cx=\"0\"\n              cy=\"0\"\n              [attr.r]=\"r\"\n            />\n          </svg:g>\n          <svg:g *ngIf=\"xAxis\">\n            <svg:g\n              ngx-charts-pie-label\n              *ngFor=\"let tick of thetaTicks\"\n              [data]=\"tick\"\n              [radius]=\"outerRadius\"\n              [label]=\"tick.label\"\n              [max]=\"outerRadius\"\n              [value]=\"showGridLines ? 1 : outerRadius\"\n              [explodeSlices]=\"true\"\n              [animations]=\"animations\"\n              [labelTrim]=\"labelTrim\"\n              [labelTrimSize]=\"labelTrimSize\"\n            ></svg:g>\n          </svg:g>\n        </svg:g>\n        <svg:g\n          ngx-charts-y-axis\n          [attr.transform]=\"transformYAxis\"\n          *ngIf=\"yAxis\"\n          [yScale]=\"yAxisScale\"\n          [dims]=\"yAxisDims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-axis-label\n          *ngIf=\"xAxis && showXAxisLabel\"\n          [label]=\"xAxisLabel\"\n          [offset]=\"labelOffset\"\n          [orient]=\"'bottom'\"\n          [height]=\"dims.height\"\n          [width]=\"dims.width\"\n        ></svg:g>\n        <svg:g [attr.transform]=\"transformPlot\">\n          <svg:g *ngFor=\"let series of results; trackBy: trackBy\" [@animationState]=\"'active'\">\n            <svg:g\n              ngx-charts-polar-series\n              [gradient]=\"gradient\"\n              [xScale]=\"xScale\"\n              [yScale]=\"yScale\"\n              [colors]=\"colors\"\n              [data]=\"series\"\n              [activeEntries]=\"activeEntries\"\n              [scaleType]=\"scaleType\"\n              [curve]=\"curve\"\n              [rangeFillOpacity]=\"rangeFillOpacity\"\n              [animations]=\"animations\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n            />\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: [\n    '../common/base-chart.component.scss',\n    '../pie-chart/pie-chart.component.scss',\n    './polar-chart.component.scss'\n  ],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('animationState', [\n      transition(':leave', [\n        style({\n          opacity: 1\n        }),\n        animate(\n          500,\n          style({\n            opacity: 0\n          })\n        )\n      ])\n    ])\n  ]\n})\nexport class PolarChartComponent extends BaseChartComponent {\n  @Input() legend: boolean;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() xAxis: boolean;\n  @Input() yAxis: boolean;\n  @Input() showXAxisLabel: boolean;\n  @Input() showYAxisLabel: boolean;\n  @Input() xAxisLabel: string;\n  @Input() yAxisLabel: string;\n  @Input() autoScale: boolean;\n  @Input() showGridLines: boolean = true;\n  @Input() curve: any = curveCardinalClosed;\n  @Input() activeEntries: any[] = [];\n  @Input() schemeType: string;\n  @Input() rangeFillOpacity: number = 0.15;\n  @Input() trimYAxisTicks: boolean = true;\n  @Input() maxYAxisTickLength: number = 16;\n  @Input() xAxisTickFormatting: (o: any) => any;\n  @Input() yAxisTickFormatting: (o: any) => any;\n  @Input() roundDomains: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() showSeriesOnHover: boolean = true;\n  @Input() gradient: boolean = false;\n  @Input() yAxisMinScale: number = 0;\n  @Input() labelTrim: boolean = true;\n  @Input() labelTrimSize: number = 10;\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: ViewDimensions;\n  yAxisDims: ViewDimensions;\n  labelOffset: number;\n  xDomain: any;\n  yDomain: any;\n  seriesDomain: any;\n  yScale: any; // -> rScale\n  xScale: any; // -> tScale\n  yAxisScale: any; // -> yScale\n  colors: ColorHelper;\n  scaleType: string;\n  transform: string;\n  transformPlot: string;\n  transformYAxis: string;\n  transformXAxis: string;\n  series: any; // ???\n  margin = [10, 20, 10, 20];\n  xAxisHeight: number = 0;\n  yAxisWidth: number = 0;\n  filteredDomain: any;\n  legendOptions: any;\n  thetaTicks: any[];\n  radiusTicks: number[];\n  outerRadius: number;\n\n  update(): void {\n    super.update();\n\n    this.setDims();\n\n    this.setScales();\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    this.setTicks();\n  }\n\n  setDims() {\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showXAxis: this.xAxis,\n      showYAxis: this.yAxis,\n      xAxisHeight: this.xAxisHeight,\n      yAxisWidth: this.yAxisWidth,\n      showXLabel: this.showXAxisLabel,\n      showYLabel: this.showYAxisLabel,\n      showLegend: this.legend,\n      legendType: this.schemeType,\n      legendPosition: this.legendPosition\n    });\n\n    const halfWidth = Math.floor(this.dims.width / 2);\n    const halfHeight = Math.floor(this.dims.height / 2);\n\n    const outerRadius = (this.outerRadius = Math.min(halfHeight / 1.5, halfWidth / 1.5));\n\n    const yOffset = Math.max(0, halfHeight - outerRadius);\n\n    this.yAxisDims = {\n      ...this.dims,\n      width: halfWidth\n    };\n\n    this.transform = `translate(${this.dims.xOffset}, ${this.margin[0]})`;\n    this.transformYAxis = `translate(0, ${yOffset})`;\n    this.labelOffset = this.dims.height + 40;\n    this.transformPlot = `translate(${halfWidth}, ${halfHeight})`;\n  }\n\n  setScales() {\n    const xValues = this.getXValues();\n    this.scaleType = getScaleType(xValues);\n    this.xDomain = this.filteredDomain || this.getXDomain(xValues);\n\n    this.yDomain = this.getYDomain();\n    this.seriesDomain = this.getSeriesDomain();\n\n    this.xScale = this.getXScale(this.xDomain, twoPI);\n    this.yScale = this.getYScale(this.yDomain, this.outerRadius);\n    this.yAxisScale = this.getYScale(this.yDomain.reverse(), this.outerRadius);\n  }\n\n  setTicks() {\n    let tickFormat;\n    if (this.xAxisTickFormatting) {\n      tickFormat = this.xAxisTickFormatting;\n    } else if (this.xScale.tickFormat) {\n      tickFormat = this.xScale.tickFormat.apply(this.xScale, [5]);\n    } else {\n      tickFormat = d => {\n        if (isDate(d)) {\n          return d.toLocaleDateString();\n        }\n        return d.toLocaleString();\n      };\n    }\n\n    const outerRadius = this.outerRadius;\n    const s = 1.1;\n\n    this.thetaTicks = this.xDomain.map(d => {\n      const startAngle = this.xScale(d);\n      const dd = s * outerRadius * (startAngle > Math.PI ? -1 : 1);\n      const label = tickFormat(d);\n\n      const startPos = [outerRadius * Math.sin(startAngle), -outerRadius * Math.cos(startAngle)];\n      const pos = [dd, s * startPos[1]];\n      return {\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle: startAngle,\n        value: outerRadius,\n        label,\n        startPos,\n        pos\n      };\n    });\n\n    const minDistance = 10;\n\n    /* from pie chart, abstract out -*/\n    for (let i = 0; i < this.thetaTicks.length - 1; i++) {\n      const a = this.thetaTicks[i];\n\n      for (let j = i + 1; j < this.thetaTicks.length; j++) {\n        const b = this.thetaTicks[j];\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n\n    this.radiusTicks = this.yAxisScale.ticks(Math.floor(this.dims.height / 50)).map(d => this.yScale(d));\n  }\n\n  getXValues(): any[] {\n    const values = [];\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (!values.includes(d.name)) {\n          values.push(d.name);\n        }\n      }\n    }\n    return values;\n  }\n\n  getXDomain(values = this.getXValues()): any[] {\n    if (this.scaleType === 'time') {\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    } else if (this.scaleType === 'linear') {\n      values = values.map(v => Number(v));\n      const min = Math.min(...values);\n      const max = Math.max(...values);\n      return [min, max];\n    }\n    return values;\n  }\n\n  getYValues(): any[] {\n    const domain = [];\n\n    for (const results of this.results) {\n      for (const d of results.series) {\n        if (domain.indexOf(d.value) < 0) {\n          domain.push(d.value);\n        }\n        if (d.min !== undefined) {\n          if (domain.indexOf(d.min) < 0) {\n            domain.push(d.min);\n          }\n        }\n        if (d.max !== undefined) {\n          if (domain.indexOf(d.max) < 0) {\n            domain.push(d.max);\n          }\n        }\n      }\n    }\n    return domain;\n  }\n\n  getYDomain(domain = this.getYValues()): any[] {\n    let min = Math.min(...domain);\n    const max = Math.max(this.yAxisMinScale, ...domain);\n\n    min = Math.max(0, min);\n    if (!this.autoScale) {\n      min = Math.min(0, min);\n    }\n\n    return [min, max];\n  }\n\n  getSeriesDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getXScale(domain, width): any {\n    switch (this.scaleType) {\n      case 'time':\n        return scaleTime()\n          .range([0, width])\n          .domain(domain);\n      case 'linear':\n        const scale = scaleLinear()\n          .range([0, width])\n          .domain(domain);\n        return this.roundDomains ? scale.nice() : scale;\n      default:\n        return scalePoint()\n          .range([0, width - twoPI / domain.length])\n          .padding(0)\n          .domain(domain);\n    }\n  }\n\n  getYScale(domain, height): any {\n    const scale = scaleLinear()\n      .range([0, height])\n      .domain(domain);\n\n    return this.roundDomains ? scale.nice() : scale;\n  }\n\n  onClick(data, series?): void {\n    if (series) {\n      data.series = series.name;\n    }\n\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    const domain = this.schemeType === 'ordinal' ? this.seriesDomain : this.yDomain.reverse();\n    this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    if (this.schemeType === 'ordinal') {\n      return {\n        scaleType: this.schemeType,\n        colors: this.colors,\n        domain: this.seriesDomain,\n        title: this.legendTitle,\n        position: this.legendPosition\n      };\n    }\n    return {\n      scaleType: this.schemeType,\n      colors: this.colors.scale,\n      domain: this.yDomain,\n      title: undefined,\n      position: this.legendPosition\n    };\n  }\n\n  updateYAxisWidth({ width }): void {\n    this.yAxisWidth = width;\n    this.update();\n  }\n\n  updateXAxisHeight({ height }): void {\n    this.xAxisHeight = height;\n    this.update();\n  }\n\n  onActivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n    this.activeEntries = this.showSeriesOnHover ? [item, ...this.activeEntries] : this.activeEntries;\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item) {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  deactivateAll() {\n    this.activeEntries = [...this.activeEntries];\n    for (const entry of this.activeEntries) {\n      this.deactivate.emit({ value: entry, entries: [] });\n    }\n    this.activeEntries = [];\n  }\n\n  trackBy(index, item) {\n    return item.name;\n  }\n}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  TemplateRef,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { lineRadial } from 'd3-shape';\n\nimport { id } from '../utils/id';\nimport { sortLinear, sortByTime, sortByDomain } from '../utils/sort';\nimport { escapeLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ngx-charts-polar-series]',\n  template: `\n    <svg:g class=\"polar-charts-series\">\n      <defs>\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          *ngIf=\"hasGradient\"\n          orientation=\"vertical\"\n          [color]=\"seriesColor\"\n          [name]=\"gradientId\"\n          [startOpacity]=\"0.25\"\n          [endOpacity]=\"1\"\n          [stops]=\"gradientStops\"\n        />\n      </defs>\n      <svg:g\n        ngx-charts-line\n        class=\"polar-series-path\"\n        [path]=\"path\"\n        [stroke]=\"hasGradient ? gradientUrl : seriesColor\"\n        [class.active]=\"active\"\n        [class.inactive]=\"inactive\"\n        [attr.fill-opacity]=\"rangeFillOpacity\"\n        [fill]=\"hasGradient ? gradientUrl : seriesColor\"\n        [animations]=\"animations\"\n      />\n      <svg:g\n        ngx-charts-circle\n        *ngFor=\"let circle of circles\"\n        class=\"circle\"\n        [cx]=\"circle.cx\"\n        [cy]=\"circle.cy\"\n        [r]=\"circleRadius\"\n        [fill]=\"circle.color\"\n        [style.opacity]=\"inactive ? 0.2 : 1\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        tooltipType=\"tooltip\"\n        [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(circle)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"circle.data\"\n        (select)=\"select.emit(circle.data)\"\n        (activate)=\"activate.emit({ name: circle.data.series })\"\n        (deactivate)=\"deactivate.emit({ name: circle.data.series })\"\n      ></svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PolarSeriesComponent implements OnChanges {\n  @Input() name;\n  @Input() data;\n  @Input() xScale; // Theta\n  @Input() yScale; // R\n  @Input() colors;\n  @Input() scaleType;\n  @Input() curve: any;\n  @Input() activeEntries: any[];\n  @Input() rangeFillOpacity: number;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipText: (o: any) => string;\n  @Input() gradient: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  path: string;\n  circles: any[];\n  circleRadius: number = 3;\n\n  outerPath: string;\n  areaPath: string;\n  gradientId: string;\n  gradientUrl: string;\n  hasGradient: boolean;\n  gradientStops: any[];\n  areaGradientStops: any[];\n  seriesColor: string;\n\n  active: boolean;\n  inactive: boolean;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.updateGradients();\n\n    const line = this.getLineGenerator();\n\n    const data = this.sortData(this.data.series);\n\n    const seriesName = this.data.name;\n    const linearScaleType = this.colors.scaleType === 'linear';\n    const min = this.yScale.domain()[0];\n    this.seriesColor = this.colors.getColor(linearScaleType ? min : seriesName);\n\n    this.path = line(data) || '';\n\n    this.circles = data.map(d => {\n      const a = this.getAngle(d);\n      const r = this.getRadius(d);\n      const value = d.value;\n\n      const color = this.colors.getColor(linearScaleType ? Math.abs(value) : seriesName);\n\n      const cData = Object.assign({}, d, {\n        series: seriesName,\n        value,\n        name: d.name\n      });\n\n      return {\n        data: cData,\n        cx: r * Math.sin(a),\n        cy: -r * Math.cos(a),\n        value,\n        color,\n        label: d.name\n      };\n    });\n\n    this.active = this.isActive(this.data);\n    this.inactive = this.isInactive(this.data);\n    this.tooltipText = this.tooltipText || (c => this.defaultTooltipText(c));\n  }\n\n  getAngle(d) {\n    const label = d.name;\n    if (this.scaleType === 'time') {\n      return this.xScale(label);\n    } else if (this.scaleType === 'linear') {\n      return this.xScale(Number(label));\n    }\n    return this.xScale(label);\n  }\n\n  getRadius(d) {\n    return this.yScale(d.value);\n  }\n\n  getLineGenerator(): any {\n    return lineRadial<any>()\n      .angle(d => this.getAngle(d))\n      .radius(d => this.getRadius(d))\n      .curve(this.curve);\n  }\n\n  sortData(data) {\n    if (this.scaleType === 'linear') {\n      return sortLinear(data, 'name');\n    } else if (this.scaleType === 'time') {\n      return sortByTime(data, 'name');\n    }\n    return sortByDomain(data, 'name', 'asc', this.xScale.domain());\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item !== undefined;\n  }\n\n  isInactive(entry): boolean {\n    if (!this.activeEntries || this.activeEntries.length === 0) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name;\n    });\n    return item === undefined;\n  }\n\n  defaultTooltipText({ label, value }): string {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(this.data.name)} â¢ ${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n\n  updateGradients() {\n    this.hasGradient = this.gradient || this.colors.scaleType === 'linear';\n\n    if (!this.hasGradient) {\n      return;\n    }\n\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n\n    if (this.colors.scaleType === 'linear') {\n      const values = this.data.series.map(d => d.value);\n      const max = Math.max(...values);\n      const min = Math.min(...values);\n      this.gradientStops = this.colors.getLinearGradientStops(max, min);\n    } else {\n      this.gradientStops = undefined;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  EventEmitter,\n  Input,\n  Output,\n  TemplateRef,\n  ViewEncapsulation\n} from '@angular/core';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { DataItem } from '../models/chart-data.model';\n\n@Component({\n  selector: 'ngx-charts-advanced-pie-chart',\n  template: `\n    <div [style.width.px]=\"width\" [style.height.px]=\"height\">\n      <div class=\"advanced-pie chart\" [style.width.px]=\"dims.width\" [style.height.px]=\"dims.height\">\n        <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n          <svg:g [attr.transform]=\"transform\" class=\"pie chart\">\n            <svg:g\n              ngx-charts-pie-series\n              [colors]=\"colors\"\n              [series]=\"results\"\n              [innerRadius]=\"innerRadius\"\n              [activeEntries]=\"activeEntries\"\n              [outerRadius]=\"outerRadius\"\n              [gradient]=\"gradient\"\n              [tooltipDisabled]=\"tooltipDisabled\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipText]=\"tooltipText\"\n              (select)=\"onClick($event)\"\n              (activate)=\"onActivate($event)\"\n              (deactivate)=\"onDeactivate($event)\"\n              [animations]=\"animations\"\n            ></svg:g>\n          </svg:g>\n        </ngx-charts-chart>\n      </div>\n      <div class=\"advanced-pie-legend-wrapper\" [style.width.px]=\"width - dims.width\" [style.height.px]=\"height\">\n        <ngx-charts-advanced-legend\n          [data]=\"results\"\n          [colors]=\"colors\"\n          [width]=\"width - dims.width - margin[1]\"\n          [label]=\"label\"\n          [animations]=\"animations\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"nameFormatting\"\n          [percentageFormatting]=\"percentageFormatting\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event, true)\"\n          (deactivate)=\"onDeactivate($event, true)\"\n        >\n        </ngx-charts-advanced-legend>\n      </div>\n    </div>\n  `,\n  styleUrls: ['../common/base-chart.component.scss', './advanced-pie-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AdvancedPieChartComponent extends BaseChartComponent {\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[] = [];\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipText: any;\n  @Input() label: string = 'Total';\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  data: any;\n  dims: ViewDimensions;\n  domain: any[];\n  outerRadius: number;\n  innerRadius: number;\n  transform: string;\n  colors: ColorHelper;\n  legendWidth: number;\n  margin = [20, 20, 20, 20];\n\n  @Input() valueFormatting: (value: number) => any;\n  @Input() nameFormatting: (value: string) => any;\n  @Input() percentageFormatting: (value: number) => any;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: (this.width * 4) / 12.0,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.formatDates();\n\n    this.domain = this.getDomain();\n    this.setColors();\n\n    const xOffset = this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n    this.legendWidth = this.width - this.dims.width - this.margin[1];\n\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2.5;\n    this.innerRadius = this.outerRadius * 0.75;\n\n    this.transform = `translate(${xOffset} , ${yOffset})`;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.label);\n  }\n\n  onClick(data: DataItem) {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { arc } from 'd3-shape';\n\nimport { trimLabel } from '../common/trim-label.helper';\n\n@Component({\n  selector: 'g[ngx-charts-pie-label]',\n  template: `\n    <title>{{ label }}</title>\n    <svg:g [attr.transform]=\"attrTransform\" [style.transform]=\"styleTransform\" [style.transition]=\"textTransition\">\n      <svg:text\n        class=\"pie-label\"\n        [class.animation]=\"animations\"\n        dy=\".35em\"\n        [style.textAnchor]=\"textAnchor()\"\n        [style.shapeRendering]=\"'crispEdges'\"\n      >\n        {{ labelTrim ? trimLabel(label, labelTrimSize) : label }}\n      </svg:text>\n    </svg:g>\n    <svg:path\n      [attr.d]=\"line\"\n      [attr.stroke]=\"color\"\n      fill=\"none\"\n      class=\"pie-label-line line\"\n      [class.animation]=\"animations\"\n    ></svg:path>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieLabelComponent implements OnChanges {\n  @Input() data;\n  @Input() radius;\n  @Input() label;\n  @Input() color;\n  @Input() max;\n  @Input() value;\n  @Input() explodeSlices;\n  @Input() animations: boolean = true;\n  @Input() labelTrim: boolean = true;\n  @Input() labelTrimSize: number = 10;\n\n  trimLabel: (label: string, max?: number) => string;\n  line: string;\n\n  private readonly isIE = /(edge|msie|trident)/i.test(navigator.userAgent);\n\n  constructor() {\n    this.trimLabel = trimLabel;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    let startRadius = this.radius;\n    if (this.explodeSlices) {\n      startRadius = (this.radius * this.value) / this.max;\n    }\n\n    const innerArc = arc()\n      .innerRadius(startRadius)\n      .outerRadius(startRadius);\n\n    // Calculate innerPos then scale outer position to match label position\n    const innerPos = innerArc.centroid(this.data);\n\n    let scale = this.data.pos[1] / innerPos[1];\n    if (this.data.pos[1] === 0 || innerPos[1] === 0) {\n      scale = 1;\n    }\n    const outerPos = [scale * innerPos[0], scale * innerPos[1]];\n\n    this.line = `M${innerPos}L${outerPos}L${this.data.pos}`;\n  }\n\n  get textX(): number {\n    return this.data.pos[0];\n  }\n\n  get textY(): number {\n    return this.data.pos[1];\n  }\n\n  get styleTransform(): string {\n    return this.isIE ? null : `translate3d(${this.textX}px,${this.textY}px, 0)`;\n  }\n\n  get attrTransform(): string {\n    return !this.isIE ? null : `translate(${this.textX},${this.textY})`;\n  }\n\n  get textTransition(): string {\n    return this.isIE || !this.animations ? null : 'transform 0.75s';\n  }\n\n  textAnchor(): any {\n    return this.midAngle(this.data) < Math.PI ? 'start' : 'end';\n  }\n\n  midAngle(d): number {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { interpolate } from 'd3-interpolate';\nimport { select } from 'd3-selection';\nimport { arc } from 'd3-shape';\n\nimport { id } from '../utils/id';\n/* tslint:disable */\nimport { MouseEvent } from '../events';\n\n@Component({\n  selector: 'g[ngx-charts-pie-arc]',\n  template: `\n    <svg:g class=\"arc-group\">\n      <svg:defs *ngIf=\"gradient\">\n        <svg:g\n          ngx-charts-svg-radial-gradient\n          [color]=\"fill\"\n          orientation=\"vertical\"\n          [name]=\"radialGradientId\"\n          [startOpacity]=\"startOpacity\"\n        />\n      </svg:defs>\n      <svg:path\n        [attr.d]=\"path\"\n        class=\"arc\"\n        [class.active]=\"isActive\"\n        [attr.fill]=\"getGradient()\"\n        (click)=\"onClick()\"\n        (dblclick)=\"onDblClick($event)\"\n        (mouseenter)=\"activate.emit(data)\"\n        (mouseleave)=\"deactivate.emit(data)\"\n        [style.pointer-events]=\"getPointerEvents()\"\n      />\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieArcComponent implements OnChanges {\n  @Input() fill;\n  @Input() startAngle: number = 0;\n  @Input() endAngle: number = Math.PI * 2;\n  @Input() innerRadius;\n  @Input() outerRadius;\n  @Input() cornerRadius: number = 0;\n  @Input() value;\n  @Input() max;\n  @Input() data;\n  @Input() explodeSlices: boolean = false;\n  @Input() gradient: boolean = false;\n  @Input() animate: boolean = true;\n  @Input() pointerEvents: boolean = true;\n  @Input() isActive: boolean = false;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dblclick = new EventEmitter();\n\n  element: HTMLElement;\n  path: any;\n  startOpacity: number;\n  radialGradientId: string;\n  linearGradientId: string;\n  gradientFill: string;\n  initialized: boolean = false;\n  private _timeout;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  getGradient() {\n    return this.gradient ? this.gradientFill : this.fill;\n  }\n\n  getPointerEvents() {\n    return this.pointerEvents ? 'auto' : 'none';\n  }\n\n  update(): void {\n    const calc = this.calculateArc();\n    this.startOpacity = 0.5;\n    this.radialGradientId = 'linearGrad' + id().toString();\n    this.gradientFill = `url(#${this.radialGradientId})`;\n\n    if (this.animate) {\n      if (this.initialized) {\n        this.updateAnimation();\n      } else {\n        this.loadAnimation();\n        this.initialized = true;\n      }\n    } else {\n      this.path = calc.startAngle(this.startAngle).endAngle(this.endAngle)();\n    }\n  }\n\n  calculateArc(): any {\n    let outerRadius = this.outerRadius;\n    if (this.explodeSlices && this.innerRadius === 0) {\n      outerRadius = (this.outerRadius * this.value) / this.max;\n    }\n\n    return arc()\n      .innerRadius(this.innerRadius)\n      .outerRadius(outerRadius)\n      .cornerRadius(this.cornerRadius);\n  }\n\n  loadAnimation(): void {\n    const node = select(this.element)\n      .selectAll('.arc')\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n\n    const calc = this.calculateArc();\n\n    node\n      .transition()\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const copyOfD = Object.assign({}, d);\n        copyOfD.endAngle = copyOfD.startAngle;\n        const interpolater = interpolate(copyOfD, copyOfD);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      })\n      .transition()\n      .duration(750)\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const interpolater = interpolate((<any>this)._current, d);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      });\n  }\n\n  updateAnimation(): void {\n    const node = select(this.element)\n      .selectAll('.arc')\n      .data([{ startAngle: this.startAngle, endAngle: this.endAngle }]);\n\n    const calc = this.calculateArc();\n\n    node\n      .transition()\n      .duration(750)\n      .attrTween('d', function(d) {\n        (<any>this)._current = (<any>this)._current || d;\n        const interpolater = interpolate((<any>this)._current, d);\n        (<any>this)._current = interpolater(0);\n        return function(t) {\n          return calc(interpolater(t));\n        };\n      });\n  }\n\n  onClick(): void {\n    clearTimeout(this._timeout);\n    this._timeout = setTimeout(() => this.select.emit(this.data), 200);\n  }\n\n  onDblClick(event: MouseEvent) {\n    event.preventDefault();\n    event.stopPropagation();\n    clearTimeout(this._timeout);\n\n    this.dblclick.emit({\n      data: this.data,\n      nativeEvent: event\n    });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  ViewEncapsulation,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { DataItem } from '../models/chart-data.model';\n\n@Component({\n  selector: 'ngx-charts-pie-chart',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event, true)\"\n      (legendLabelDeactivate)=\"onDeactivate($event, true)\"\n      (legendLabelClick)=\"onClick($event)\"\n    >\n      <svg:g [attr.transform]=\"translation\" class=\"pie-chart chart\">\n        <svg:g\n          ngx-charts-pie-series\n          [colors]=\"colors\"\n          [series]=\"data\"\n          [showLabels]=\"labels\"\n          [labelFormatting]=\"labelFormatting\"\n          [trimLabels]=\"trimLabels\"\n          [maxLabelLength]=\"maxLabelLength\"\n          [activeEntries]=\"activeEntries\"\n          [innerRadius]=\"innerRadius\"\n          [outerRadius]=\"outerRadius\"\n          [explodeSlices]=\"explodeSlices\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipText]=\"tooltipText\"\n          (dblclick)=\"dblclick.emit($event)\"\n          (select)=\"onClick($event)\"\n          (activate)=\"onActivate($event)\"\n          (deactivate)=\"onDeactivate($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss', './pie-chart.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieChartComponent extends BaseChartComponent {\n  @Input() labels = false;\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() explodeSlices = false;\n  @Input() doughnut = false;\n  @Input() arcWidth = 0.25;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[] = [];\n  @Input() tooltipDisabled: boolean = false;\n  @Input() labelFormatting: any;\n  @Input() trimLabels: boolean = true;\n  @Input() maxLabelLength: number = 10;\n  @Input() tooltipText: any;\n  @Output() dblclick = new EventEmitter();\n  // optional margins\n  @Input() margins: number[];\n  @Output() select = new EventEmitter();\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  translation: string;\n  outerRadius: number;\n  innerRadius: number;\n  data: any;\n  colors: ColorHelper;\n  domain: any;\n  dims: any;\n  legendOptions: any;\n\n  update(): void {\n    super.update();\n\n    if (this.labels && this.hasNoOptionalMarginsSet()) {\n      this.margins = [30, 80, 30, 80];\n    } else if (!this.labels && this.hasNoOptionalMarginsSet()) {\n      // default value for margins\n      this.margins = [20, 20, 20, 20];\n    }\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margins,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n\n    this.formatDates();\n\n    const xOffset = this.margins[3] + this.dims.width / 2;\n    const yOffset = this.margins[0] + this.dims.height / 2;\n    this.translation = `translate(${xOffset}, ${yOffset})`;\n    this.outerRadius = Math.min(this.dims.width, this.dims.height);\n    if (this.labels) {\n      // make room for labels\n      this.outerRadius /= 3;\n    } else {\n      this.outerRadius /= 2;\n    }\n    this.innerRadius = 0;\n    if (this.doughnut) {\n      this.innerRadius = this.outerRadius * (1 - this.arcWidth);\n    }\n\n    this.domain = this.getDomain();\n\n    // sort data according to domain\n    this.data = this.results.sort((a, b) => {\n      return this.domain.indexOf(a.name) - this.domain.indexOf(b.name);\n    });\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.label);\n  }\n\n  onClick(data: DataItem): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  getLegendOptions() {\n    return {\n      scaleType: 'ordinal',\n      domain: this.domain,\n      colors: this.colors,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  private hasNoOptionalMarginsSet(): boolean {\n    return !this.margins || this.margins.length <= 0;\n  }\n}\n","import { scaleBand } from 'd3-scale';\n\nexport function gridSize(dims, len, minWidth) {\n  let rows = 1;\n  let cols = len;\n  const width = dims.width;\n\n  if (width > minWidth) {\n    while (width / cols < minWidth) {\n      rows += 1;\n      cols = Math.ceil(len / rows);\n    }\n  }\n\n  return [cols, rows];\n}\n\nexport function gridLayout(dims, data, minWidth, designatedTotal) {\n  const xScale: any = scaleBand<number>();\n  const yScale: any = scaleBand<number>();\n  const width = dims.width;\n  const height = dims.height;\n\n  const [columns, rows] = gridSize(dims, data.length, minWidth);\n\n  const xDomain = [];\n  const yDomain = [];\n  for (let i = 0; i < rows; i++) {\n    yDomain.push(i);\n  }\n  for (let i = 0; i < columns; i++) {\n    xDomain.push(i);\n  }\n  xScale.domain(xDomain);\n  yScale.domain(yDomain);\n\n  xScale.rangeRound([0, width], 0.1);\n  yScale.rangeRound([0, height], 0.1);\n\n  const res = [];\n  const total = designatedTotal ? designatedTotal : getTotal(data);\n  const cardWidth = xScale.bandwidth();\n  const cardHeight = yScale.bandwidth();\n\n  for (let i = 0; i < data.length; i++) {\n    res[i] = {};\n    res[i].data = {\n      name: data[i] ? data[i].name : '',\n      value: data[i] ? data[i].value : undefined,\n      extra: data[i] ? data[i].extra : undefined,\n      label: data[i] ? data[i].label : ''\n    };\n    res[i].x = xScale(i % columns);\n    res[i].y = yScale(Math.floor(i / columns));\n    res[i].width = cardWidth;\n    res[i].height = cardHeight;\n    res[i].data.percent = total > 0 ? res[i].data.value / total : 0;\n    res[i].data.total = total;\n  }\n\n  return res;\n}\n\nfunction getTotal(results) {\n  return results.map(d => (d ? d.value : 0)).reduce((sum, val) => sum + val, 0);\n}\n","import {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { min } from 'd3-array';\nimport { format } from 'd3-format';\n\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { gridLayout } from '../common/grid-layout.helper';\nimport { formatLabel } from '../common/label.helper';\nimport { DataItem } from '../models/chart-data.model';\n\n@Component({\n  selector: 'ngx-charts-pie-grid',\n  template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"pie-grid chart\">\n        <svg:g *ngFor=\"let series of series\" class=\"pie-grid-item\" [attr.transform]=\"series.transform\">\n          <svg:g\n            ngx-charts-pie-grid-series\n            [colors]=\"series.colors\"\n            [data]=\"series.data\"\n            [innerRadius]=\"series.innerRadius\"\n            [outerRadius]=\"series.outerRadius\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            ngx-tooltip\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipPlacement]=\"'top'\"\n            [tooltipType]=\"'tooltip'\"\n            [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText({ data: series })\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipContext]=\"series.data[0].data\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          />\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label percent-label\"\n            dy=\"-0.5em\"\n            x=\"0\"\n            y=\"5\"\n            ngx-charts-count-up\n            [countTo]=\"series.percent\"\n            [countSuffix]=\"'%'\"\n            text-anchor=\"middle\"\n          ></svg:text>\n          <svg:text *ngIf=\"!animations\" class=\"label percent-label\" dy=\"-0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.percent.toLocaleString() }}\n          </svg:text>\n          <svg:text class=\"label\" dy=\"0.5em\" x=\"0\" y=\"5\" text-anchor=\"middle\">\n            {{ series.label }}\n          </svg:text>\n          <svg:text\n            *ngIf=\"animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n            ngx-charts-count-up\n            [countTo]=\"series.total\"\n            [countPrefix]=\"label + ': '\"\n          ></svg:text>\n          <svg:text\n            *ngIf=\"!animations\"\n            class=\"label\"\n            dy=\"1.23em\"\n            x=\"0\"\n            [attr.y]=\"series.outerRadius\"\n            text-anchor=\"middle\"\n          >\n            {{ label }}: {{ series.total.toLocaleString() }}\n          </svg:text>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss', './pie-grid.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieGridComponent extends BaseChartComponent {\n  @Input() designatedTotal: number;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipText: (o: any) => any;\n  @Input() label: string = 'Total';\n  @Input() minWidth: number = 150;\n  @Input() activeEntries: any[] = [];\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  dims: ViewDimensions;\n  data: any[];\n  transform: string;\n  series: any[];\n  domain: any[];\n  colorScale: ColorHelper;\n  margin = [20, 20, 20, 20];\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.formatDates();\n\n    this.domain = this.getDomain();\n\n    this.data = gridLayout(this.dims, this.results, this.minWidth, this.designatedTotal);\n    this.transform = `translate(${this.margin[3]} , ${this.margin[0]})`;\n\n    this.series = this.getSeries();\n    this.setColors();\n\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n\n  defaultTooltipText({ data }): string {\n    const label = trimLabel(formatLabel(data.name));\n    const val = data.value.toLocaleString();\n    return `\n      <span class=\"tooltip-label\">${label}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.label);\n  }\n\n  getSeries(): any[] {\n    const total = this.designatedTotal ? this.designatedTotal : this.getTotal();\n\n    return this.data.map(d => {\n      const baselineLabelHeight = 20;\n      const padding = 10;\n      const name = d.data.name;\n      const label = formatLabel(name);\n      const value = d.data.value;\n      const radius = min([d.width - padding, d.height - baselineLabelHeight]) / 2 - 5;\n      const innerRadius = radius * 0.9;\n\n      let count = 0;\n      const colors = () => {\n        count += 1;\n        if (count === 1) {\n          return 'rgba(100,100,100,0.3)';\n        } else {\n          return this.colorScale.getColor(label);\n        }\n      };\n\n      const xPos = d.x + (d.width - padding) / 2;\n      const yPos = d.y + (d.height - baselineLabelHeight) / 2;\n\n      return {\n        transform: `translate(${xPos}, ${yPos})`,\n        colors,\n        innerRadius,\n        outerRadius: radius,\n        name,\n        label: trimLabel(label),\n        total: value,\n        value,\n        percent: format('.1%')(d.data.percent),\n        data: [\n          d,\n          {\n            data: {\n              other: true,\n              value: total - value,\n              name: d.data.name\n            }\n          }\n        ]\n      };\n    });\n  }\n\n  getTotal(): any {\n    return this.results.map(d => d.value).reduce((sum, d) => sum + d, 0);\n  }\n\n  onClick(data: DataItem): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colorScale = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  onActivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item, fromLegend = false) {\n    item = this.results.find(d => {\n      if (fromLegend) {\n        return d.label === item.name;\n      } else {\n        return d.name === item.name;\n      }\n    });\n\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value && d.series === item.series;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { pie } from 'd3-shape';\n\n@Component({\n  selector: 'g[ngx-charts-pie-grid-series]',\n  template: `\n    <svg:g class=\"pie-grid-arcs\">\n      <svg:g\n        ngx-charts-pie-arc\n        *ngFor=\"let arc of arcs; trackBy: trackBy\"\n        [attr.class]=\"arc.class\"\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [data]=\"arc.data\"\n        [gradient]=\"false\"\n        [pointerEvents]=\"arc.pointerEvents\"\n        [animate]=\"arc.animate\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n      ></svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieGridSeriesComponent implements OnChanges {\n  @Input() colors;\n  @Input() data;\n  @Input() innerRadius = 70;\n  @Input() outerRadius = 80;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  element: HTMLElement;\n  layout: any;\n  arcs: any;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    this.layout = pie<any, any>()\n      .value(d => d.data.value)\n      .sort(null);\n\n    this.arcs = this.getArcs();\n  }\n\n  getArcs(): any[] {\n    return this.layout(this.data).map((arc, index) => {\n      const label = arc.data.data.name;\n      const other = arc.data.data.other;\n\n      if (index === 0) {\n        arc.startAngle = 0;\n      }\n\n      const color = this.colors(label);\n      return {\n        data: arc.data.data,\n        class: 'arc ' + 'arc' + index,\n        fill: color,\n        startAngle: other ? 0 : arc.startAngle,\n        endAngle: arc.endAngle,\n        animate: this.animations && !other,\n        pointerEvents: !other\n      };\n    });\n  }\n\n  onClick(data): void {\n    this.select.emit(this.data[0].data);\n  }\n\n  trackBy(index, item): string {\n    return item.data.name;\n  }\n\n  label(arc): string {\n    return arc.data.name;\n  }\n\n  color(arc): any {\n    return this.colors(this.label(arc));\n  }\n}\n","import {\n  Component,\n  SimpleChanges,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { max } from 'd3-array';\nimport { arc, pie } from 'd3-shape';\n\nimport { formatLabel, escapeLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ngx-charts-pie-series]',\n  template: `\n    <svg:g *ngFor=\"let arc of data; trackBy: trackBy\">\n      <svg:g\n        ngx-charts-pie-label\n        *ngIf=\"labelVisible(arc)\"\n        [data]=\"arc\"\n        [radius]=\"outerRadius\"\n        [color]=\"color(arc)\"\n        [label]=\"labelText(arc)\"\n        [labelTrim]=\"trimLabels\"\n        [labelTrimSize]=\"maxLabelLength\"\n        [max]=\"max\"\n        [value]=\"arc.value\"\n        [explodeSlices]=\"explodeSlices\"\n        [animations]=\"animations\"\n      ></svg:g>\n      <svg:g\n        ngx-charts-pie-arc\n        [startAngle]=\"arc.startAngle\"\n        [endAngle]=\"arc.endAngle\"\n        [innerRadius]=\"innerRadius\"\n        [outerRadius]=\"outerRadius\"\n        [fill]=\"color(arc)\"\n        [value]=\"arc.data.value\"\n        [gradient]=\"gradient\"\n        [data]=\"arc.data\"\n        [max]=\"max\"\n        [explodeSlices]=\"explodeSlices\"\n        [isActive]=\"isActive(arc.data)\"\n        [animate]=\"animations\"\n        (select)=\"onClick($event)\"\n        (activate)=\"activate.emit($event)\"\n        (deactivate)=\"deactivate.emit($event)\"\n        (dblclick)=\"dblclick.emit($event)\"\n        ngx-tooltip\n        [tooltipDisabled]=\"tooltipDisabled\"\n        [tooltipPlacement]=\"'top'\"\n        [tooltipType]=\"'tooltip'\"\n        [tooltipTitle]=\"getTooltipTitle(arc)\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipContext]=\"arc.data\"\n      ></svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PieSeriesComponent implements OnChanges {\n  @Input() colors;\n  @Input() series: any = [];\n  @Input() dims;\n  @Input() innerRadius = 60;\n  @Input() outerRadius = 80;\n  @Input() explodeSlices;\n  @Input() showLabels;\n  @Input() gradient: boolean;\n  @Input() activeEntries: any[];\n  @Input() labelFormatting: any;\n  @Input() trimLabels: boolean = true;\n  @Input() maxLabelLength: number = 10;\n  @Input() tooltipText: (o: any) => any;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n  @Output() dblclick = new EventEmitter();\n\n  max: number;\n  data: any;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    const pieGenerator = pie<any, any>()\n      .value(d => d.value)\n      .sort(null);\n\n    const arcData = pieGenerator(this.series);\n\n    this.max = max(arcData, d => {\n      return d.value;\n    });\n\n    this.data = this.calculateLabelPositions(arcData);\n    this.tooltipText = this.tooltipText || this.defaultTooltipText;\n  }\n\n  midAngle(d): number {\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\n  }\n\n  outerArc(): any {\n    const factor = 1.5;\n\n    return arc()\n      .innerRadius(this.outerRadius * factor)\n      .outerRadius(this.outerRadius * factor);\n  }\n\n  calculateLabelPositions(pieData): any {\n    const factor = 1.5;\n    const minDistance = 10;\n    const labelPositions = pieData;\n\n    labelPositions.forEach(d => {\n      d.pos = this.outerArc().centroid(d);\n      d.pos[0] = factor * this.outerRadius * (this.midAngle(d) < Math.PI ? 1 : -1);\n    });\n\n    for (let i = 0; i < labelPositions.length - 1; i++) {\n      const a = labelPositions[i];\n      if (!this.labelVisible(a)) {\n        continue;\n      }\n\n      for (let j = i + 1; j < labelPositions.length; j++) {\n        const b = labelPositions[j];\n        if (!this.labelVisible(b)) {\n          continue;\n        }\n        // if they're on the same side\n        if (b.pos[0] * a.pos[0] > 0) {\n          // if they're overlapping\n          const o = minDistance - Math.abs(b.pos[1] - a.pos[1]);\n          if (o > 0) {\n            // push the second up or down\n            b.pos[1] += Math.sign(b.pos[0]) * o;\n          }\n        }\n      }\n    }\n\n    return labelPositions;\n  }\n\n  labelVisible(myArc): boolean {\n    return this.showLabels && myArc.endAngle - myArc.startAngle > Math.PI / 30;\n  }\n\n  getTooltipTitle(a) {\n    return this.tooltipTemplate ? undefined : this.tooltipText(a);\n  }\n\n  labelText(myArc): string {\n    if (this.labelFormatting) {\n      return this.labelFormatting(myArc.data.name);\n    }\n    return this.label(myArc);\n  }\n\n  label(myArc): string {\n    return formatLabel(myArc.data.name);\n  }\n\n  defaultTooltipText(myArc): string {\n    const label = this.label(myArc);\n    const val = formatLabel(myArc.data.value);\n\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n\n  color(myArc): any {\n    return this.colors.getColor(this.label(myArc));\n  }\n\n  trackBy(index, item): string {\n    return item.data.name;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { AdvancedPieChartComponent } from './advanced-pie-chart.component';\nimport { PieLabelComponent } from './pie-label.component';\nimport { PieArcComponent } from './pie-arc.component';\nimport { PieChartComponent } from './pie-chart.component';\nimport { PieGridComponent } from './pie-grid.component';\nimport { PieGridSeriesComponent } from './pie-grid-series.component';\nimport { PieSeriesComponent } from './pie-series.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [\n    AdvancedPieChartComponent,\n    PieLabelComponent,\n    PieArcComponent,\n    PieChartComponent,\n    PieGridComponent,\n    PieGridSeriesComponent,\n    PieSeriesComponent\n  ],\n  exports: [\n    AdvancedPieChartComponent,\n    PieLabelComponent,\n    PieArcComponent,\n    PieChartComponent,\n    PieGridComponent,\n    PieGridSeriesComponent,\n    PieSeriesComponent\n  ]\n})\nexport class PieChartModule {}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { PolarChartComponent } from './polar-chart.component';\nimport { PolarSeriesComponent } from './polar-series.component';\nimport { PieChartModule } from '../pie-chart/pie-chart.module';\nimport { LineChartModule } from '../line-chart/line-chart.module';\n\n@NgModule({\n  imports: [ChartCommonModule, PieChartModule, LineChartModule],\n  declarations: [PolarChartComponent, PolarSeriesComponent],\n  exports: [PolarChartComponent, PolarSeriesComponent]\n})\nexport class PolarChartModule {}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n  OnChanges,\n  ViewChild,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  NgZone,\n  OnDestroy\n} from '@angular/core';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { roundedRect } from '../common/shape.helper';\nimport { escapeLabel } from '../common/label.helper';\nimport { decimalChecker, count } from '../common/count/count.helper';\n\n@Component({\n  selector: 'g[ngx-charts-card]',\n  template: `\n    <svg:g [attr.transform]=\"transform\" class=\"cell\" (click)=\"onClick()\">\n      <svg:rect class=\"card\" [style.fill]=\"color\" [attr.width]=\"cardWidth\" [attr.height]=\"cardHeight\" rx=\"3\" ry=\"3\" />\n      <svg:path\n        *ngIf=\"bandColor && bandColor !== color\"\n        class=\"card-band\"\n        [attr.fill]=\"bandColor\"\n        [attr.transform]=\"transformBand\"\n        stroke=\"none\"\n        [attr.d]=\"bandPath\"\n      />\n      <title>{{ label }}</title>\n      <svg:foreignObject\n        class=\"trimmed-label\"\n        x=\"5\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"cardHeight - textPadding[2]\"\n        [attr.width]=\"textWidth\"\n        [attr.height]=\"labelFontSize + textPadding[2]\"\n        alignment-baseline=\"hanging\"\n      >\n        <xhtml:p\n          [style.color]=\"textColor\"\n          [style.fontSize.px]=\"labelFontSize\"\n          [style.lineHeight.px]=\"labelFontSize\"\n          [innerHTML]=\"formattedLabel\"\n        >\n        </xhtml:p>\n      </svg:foreignObject>\n      <svg:text\n        #textEl\n        class=\"value-text\"\n        [attr.x]=\"textPadding[3]\"\n        [attr.y]=\"textPadding[0]\"\n        [style.fill]=\"textColor\"\n        text-anchor=\"start\"\n        alignment-baseline=\"hanging\"\n        [style.font-size.pt]=\"textFontSize\"\n      >\n        {{ value }}\n      </svg:text>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardComponent implements OnChanges, OnDestroy {\n  @Input() color;\n  @Input() bandColor;\n  @Input() textColor;\n\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() label;\n  @Input() data;\n  @Input() medianSize: number;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  @ViewChild('textEl', { static: false }) textEl: ElementRef;\n\n  element: HTMLElement;\n  value: string = '';\n  transform: string;\n  formattedLabel: string;\n  cardWidth: number;\n  cardHeight: number;\n  textWidth: number;\n  textFontSize: number = 12;\n  textTransform: string = '';\n  initialized: boolean = false;\n  animationReq: any;\n\n  bandHeight: number = 10;\n  transformBand: string;\n  textPadding = [10, 20, 5, 20];\n  labelFontSize = 15;\n\n  bandPath: string;\n\n  constructor(element: ElementRef, private cd: ChangeDetectorRef, private zone: NgZone) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  ngOnDestroy(): void {\n    cancelAnimationFrame(this.animationReq);\n  }\n\n  update(): void {\n    this.zone.run(() => {\n      const hasValue = this.data && typeof this.data.value !== 'undefined';\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n      const labelFormatting = this.labelFormatting || (card => escapeLabel(trimLabel(card.label, 55)));\n\n      this.transform = `translate(${this.x} , ${this.y})`;\n\n      this.textWidth = Math.max(0, this.width) - this.textPadding[1] - this.textPadding[3];\n      this.cardWidth = Math.max(0, this.width);\n      this.cardHeight = Math.max(0, this.height);\n\n      this.label = this.label ? this.label : this.data.name;\n\n      const cardData = {\n        label: this.label,\n        data: this.data,\n        value: this.data.value\n      };\n\n      this.formattedLabel = labelFormatting(cardData);\n      this.transformBand = `translate(0 , ${this.cardHeight - this.bandHeight})`;\n\n      const value = hasValue ? valueFormatting(cardData) : '';\n\n      this.value = this.paddedValue(value);\n      this.setPadding();\n\n      this.bandPath = roundedRect(0, 0, this.cardWidth, this.bandHeight, 3, [false, false, true, true]);\n\n      setTimeout(() => {\n        this.scaleText();\n        this.value = value;\n        if (hasValue && !this.initialized) {\n          setTimeout(() => this.startCount(), 20);\n        }\n      }, 8);\n    });\n  }\n\n  paddedValue(value: string) {\n    if (this.medianSize && this.medianSize > value.length) {\n      value += '\\u2007'.repeat(this.medianSize - value.length);\n    }\n    return value;\n  }\n\n  startCount(): void {\n    if (!this.initialized && this.animations) {\n      cancelAnimationFrame(this.animationReq);\n\n      const val = this.data.value;\n      const decs = decimalChecker(val);\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n\n      const callback = ({ value, finished }) => {\n        this.zone.run(() => {\n          value = finished ? val : value;\n          this.value = valueFormatting({ label: this.label, data: this.data, value });\n          if (!finished) {\n            this.value = this.paddedValue(this.value);\n          }\n          this.cd.markForCheck();\n        });\n      };\n\n      this.animationReq = count(0, val, decs, 1, callback);\n      this.initialized = true;\n    }\n  }\n\n  scaleText(): void {\n    this.zone.run(() => {\n      const { width, height } = this.textEl.nativeElement.getBoundingClientRect();\n      if (width === 0 || height === 0) {\n        return;\n      }\n\n      const textPadding = (this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8);\n      const availableWidth = this.cardWidth - 2 * textPadding;\n      const availableHeight = this.cardHeight / 3;\n\n      const resizeScale = Math.min(availableWidth / width, availableHeight / height);\n      this.textFontSize = Math.floor(this.textFontSize * resizeScale);\n      this.labelFontSize = Math.min(this.textFontSize, 15);\n\n      this.setPadding();\n      this.cd.markForCheck();\n    });\n  }\n\n  setPadding() {\n    this.textPadding[1] = this.textPadding[3] = this.cardWidth / 8;\n    const padding = this.cardHeight / 2;\n    this.textPadding[0] = padding - this.textFontSize - this.labelFontSize / 2;\n    this.textPadding[2] = padding - this.labelFontSize;\n  }\n\n  onClick(): void {\n    this.select.emit(this.data);\n  }\n}\n","import * as d3_color from 'd3-color';\n\n/**\n * Converts a hex to RGB\n *\n * @export\n */\nexport function hexToRgb(value: string): any {\n  // deprecated, use d3.color()\n  return d3_color.rgb(value);\n}\n\n/**\n * Accepts a color (string) and returns a inverted hex color (string)\n * http://stackoverflow.com/questions/9600295/automatically-change-text-color-to-assure-readability\n *\n * @export\n */\nexport function invertColor(value: string): string {\n  const color = d3_color.rgb(value);\n  const { r, g, b, opacity } = color;\n  if (opacity === 0) {\n    return color.toString();\n  }\n  const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n  const depth = yiq >= 128 ? -0.8 : 0.8;\n\n  return shadeRGBColor(color, depth);\n}\n\n/**\n * Given a rgb, it will darken/lighten\n * http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color-or-rgb-and-blend-colors\n *\n * @export\n * @param \\{ r, g, b }\n */\nexport function shadeRGBColor({ r, g, b }, percent) {\n  const t = percent < 0 ? 0 : 255;\n  const p = percent < 0 ? percent * -1 : percent;\n\n  r = Math.round((t - r) * p) + r;\n  g = Math.round((t - g) * p) + g;\n  b = Math.round((t - b) * p) + b;\n\n  return `rgb(${r}, ${g}, ${b})`;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { invertColor } from '../utils/color-utils';\n\nexport interface CardModel {\n  x;\n  y;\n  width: number;\n  height: number;\n  color: string;\n  label: string;\n  data;\n  tooltipText: string;\n}\n\n@Component({\n  selector: 'g[ngx-charts-card-series]',\n  template: `\n    <svg:rect\n      *ngFor=\"let c of emptySlots; trackBy: trackBy\"\n      class=\"card-empty\"\n      [attr.x]=\"c.x\"\n      [attr.y]=\"c.y\"\n      [style.fill]=\"emptyColor\"\n      [attr.width]=\"c.width\"\n      [attr.height]=\"c.height\"\n      rx=\"3\"\n      ry=\"3\"\n    />\n    <svg:g\n      ngx-charts-card\n      *ngFor=\"let c of cards; trackBy: trackBy\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [color]=\"c.color\"\n      [bandColor]=\"c.bandColor\"\n      [textColor]=\"c.textColor\"\n      [data]=\"c.data\"\n      [label]=\"c.label\"\n      [medianSize]=\"medianSize\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n    />\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CardSeriesComponent implements OnChanges {\n  @Input() data: any[];\n  @Input() slots: any[];\n  @Input() dims;\n  @Input() colors;\n  @Input() innerPadding = 15;\n\n  @Input() cardColor;\n  @Input() bandColor;\n  @Input() emptyColor = 'rgba(0, 0, 0, 0)';\n  @Input() textColor;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  cards: CardModel[];\n  emptySlots: any[];\n  medianSize: number;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.update();\n  }\n\n  update(): void {\n    if (this.data.length > 2) {\n      const valueFormatting = this.valueFormatting || (card => card.value.toLocaleString());\n\n      const sortedLengths = this.data\n        .map(d => {\n          const hasValue = d && d.data && typeof d.data.value !== 'undefined' && d.data.value !== null;\n          return hasValue\n            ? valueFormatting({\n                data: d.data,\n                label: d ? d.data.name : '',\n                value: d && d.data ? d.data.value : ''\n              }).length\n            : 0;\n        })\n        .sort((a, b) => b - a);\n      const idx = Math.ceil(this.data.length / 2);\n      this.medianSize = sortedLengths[idx];\n    }\n\n    const cards = this.getCards();\n    this.cards = cards.filter(d => d.data.value !== null);\n    this.emptySlots = cards.filter(d => d.data.value === null);\n  }\n\n  getCards(): any[] {\n    const yPadding =\n      typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[0] + this.innerPadding[2];\n    const xPadding =\n      typeof this.innerPadding === 'number' ? this.innerPadding : this.innerPadding[1] + this.innerPadding[3];\n\n    return this.data.map((d, index) => {\n      let label = d.data.name;\n      if (label && label.constructor.name === 'Date') {\n        label = label.toLocaleDateString();\n      } else {\n        label = label ? label.toLocaleString() : label;\n      }\n\n      const value = d.data.value;\n      const valueColor = label ? this.colors.getColor(label) : this.emptyColor;\n      const color = this.cardColor || valueColor || '#000';\n      return {\n        x: d.x,\n        y: d.y,\n        width: d.width - xPadding,\n        height: d.height - yPadding,\n        color,\n        bandColor: this.bandColor || valueColor,\n        textColor: this.textColor || invertColor(color),\n        label,\n        data: d.data,\n        tooltipText: `${label}: ${value}`\n      };\n    });\n  }\n\n  trackBy(index, card): string {\n    return card.label;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n}\n","import { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { gridLayout, gridSize } from '../common/grid-layout.helper';\n\n@Component({\n  selector: 'ngx-charts-number-card',\n  template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"number-card chart\" [class.clickable]=\"clickable\">\n        <svg:g\n          ngx-charts-card-series\n          [colors]=\"colors\"\n          [cardColor]=\"cardColor\"\n          [bandColor]=\"bandColor\"\n          [textColor]=\"textColor\"\n          [emptyColor]=\"emptyColor\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [innerPadding]=\"innerPadding\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss', './card.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NumberCardComponent extends BaseChartComponent {\n  @Input() cardColor: string;\n  @Input() bandColor: string;\n  @Input() emptyColor: string = 'rgba(0, 0, 0, 0)';\n  @Input() innerPadding = 15;\n  @Input() textColor: string;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() designatedTotal: number;\n\n  dims: ViewDimensions;\n  data: any[];\n  slots: any[];\n  colors: ColorHelper;\n  transform: string;\n  domain: any[];\n  margin = [10, 10, 10, 10];\n\n  backgroundCards: any[];\n\n  get clickable() {\n    return !!this.select.observers.length;\n  }\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.formatDates();\n\n    this.domain = this.getDomain();\n\n    this.setColors();\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n\n    const size = gridSize(this.dims, this.results.length, 150);\n    const N = size[0] * size[1];\n\n    const data = this.results.slice();\n\n    while (data.length < N) {\n      data.push({ value: null });\n    }\n\n    this.data = gridLayout(this.dims, data, 150, this.designatedTotal);\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.label);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { CardComponent } from './card.component';\nimport { CardSeriesComponent } from './card-series.component';\nimport { NumberCardComponent } from './number-card.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [CardComponent, CardSeriesComponent, NumberCardComponent],\n  exports: [CardComponent, CardSeriesComponent, NumberCardComponent]\n})\nexport class NumberCardModule {}\n","import { Component, Input, Output, EventEmitter, ElementRef, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { select } from 'd3-selection';\n\nimport { invertColor } from '../utils/color-utils';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { escapeLabel } from '../common/label.helper';\nimport { id } from '../utils/id';\n\n@Component({\n  selector: 'g[ngx-charts-tree-map-cell]',\n  template: `\n    <svg:g>\n      <defs *ngIf=\"gradient\">\n        <svg:g ngx-charts-svg-linear-gradient orientation=\"vertical\" [name]=\"gradientId\" [stops]=\"gradientStops\" />\n      </defs>\n      <svg:rect\n        [attr.fill]=\"gradient ? gradientUrl : fill\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [style.cursor]=\"'pointer'\"\n        class=\"cell\"\n        (click)=\"onClick()\"\n      />\n      <svg:foreignObject\n        *ngIf=\"width >= 70 && height >= 35\"\n        [attr.x]=\"x\"\n        [attr.y]=\"y\"\n        [attr.width]=\"width\"\n        [attr.height]=\"height\"\n        class=\"treemap-label\"\n        [style.pointer-events]=\"'none'\"\n      >\n        <xhtml:p [style.color]=\"getTextColor()\" [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\">\n          <xhtml:span class=\"treemap-label\" [innerHTML]=\"formattedLabel\"> </xhtml:span>\n          <xhtml:br />\n          <xhtml:span\n            *ngIf=\"animations\"\n            class=\"treemap-val\"\n            ngx-charts-count-up\n            [countTo]=\"value\"\n            [valueFormatting]=\"valueFormatting\"\n          >\n          </xhtml:span>\n          <xhtml:span *ngIf=\"!animations\" class=\"treemap-val\">\n            {{ formattedValue }}\n          </xhtml:span>\n        </xhtml:p>\n      </svg:foreignObject>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeMapCellComponent implements OnChanges {\n  @Input() data;\n  @Input() fill;\n  @Input() x;\n  @Input() y;\n  @Input() width;\n  @Input() height;\n  @Input() label;\n  @Input() value;\n  @Input() valueType;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() gradient: boolean = false;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  gradientStops: any[];\n  gradientId: string;\n  gradientUrl: string;\n\n  element: HTMLElement;\n  transform: string;\n  formattedLabel: string;\n  formattedValue: string;\n  initialized: boolean = false;\n\n  constructor(element: ElementRef) {\n    this.element = element.nativeElement;\n  }\n\n  ngOnChanges(): void {\n    this.update();\n\n    this.valueFormatting = this.valueFormatting || (value => value.toLocaleString());\n    const labelFormatting = this.labelFormatting || (cell => escapeLabel(trimLabel(cell.label, 55)));\n\n    const cellData = {\n      data: this.data,\n      label: this.label,\n      value: this.value\n    };\n\n    this.formattedValue = this.valueFormatting(cellData.value);\n    this.formattedLabel = labelFormatting(cellData);\n\n    this.gradientId = 'grad' + id().toString();\n    this.gradientUrl = `url(#${this.gradientId})`;\n    this.gradientStops = this.getGradientStops();\n  }\n\n  update(): void {\n    if (this.initialized) {\n      this.animateToCurrentForm();\n    } else {\n      if (this.animations) {\n        this.loadAnimation();\n      }\n      this.initialized = true;\n    }\n  }\n\n  loadAnimation(): void {\n    const node = select(this.element).select('.cell');\n\n    node\n      .attr('opacity', 0)\n      .attr('x', this.x)\n      .attr('y', this.y);\n\n    this.animateToCurrentForm();\n  }\n\n  getTextColor(): string {\n    return invertColor(this.fill);\n  }\n\n  animateToCurrentForm(): void {\n    const node = select(this.element).select('.cell');\n\n    if (this.animations) {\n      node\n        .transition()\n        .duration(750)\n        .attr('opacity', 1)\n        .attr('x', this.x)\n        .attr('y', this.y)\n        .attr('width', this.width)\n        .attr('height', this.height);\n    } else {\n      node\n        .attr('opacity', 1)\n        .attr('x', this.x)\n        .attr('y', this.y)\n        .attr('width', this.width)\n        .attr('height', this.height);\n    }\n  }\n\n  onClick(): void {\n    this.select.emit(this.data);\n  }\n\n  getGradientStops() {\n    return [\n      {\n        offset: 0,\n        color: this.fill,\n        opacity: 0.3\n      },\n      {\n        offset: 100,\n        color: this.fill,\n        opacity: 1\n      }\n    ];\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  SimpleChanges,\n  EventEmitter,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { escapeLabel } from '../common/label.helper';\n\n@Component({\n  selector: 'g[ngx-charts-tree-map-cell-series]',\n  template: `\n    <svg:g\n      ngx-charts-tree-map-cell\n      *ngFor=\"let c of cells; trackBy: trackBy\"\n      [data]=\"c.data\"\n      [x]=\"c.x\"\n      [y]=\"c.y\"\n      [width]=\"c.width\"\n      [height]=\"c.height\"\n      [fill]=\"c.fill\"\n      [label]=\"c.label\"\n      [value]=\"c.value\"\n      [valueType]=\"c.valueType\"\n      [valueFormatting]=\"valueFormatting\"\n      [labelFormatting]=\"labelFormatting\"\n      [gradient]=\"gradient\"\n      [animations]=\"animations\"\n      (select)=\"onClick($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : getTooltipText(c)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"c.data\"\n    ></svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeMapCellSeriesComponent implements OnChanges {\n  @Input() data;\n  @Input() dims;\n  @Input() colors;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() gradient: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n\n  cells: any[];\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.cells = this.getCells();\n  }\n\n  getCells(): any[] {\n    return this.data.children\n      .filter(d => {\n        return d.depth === 1;\n      })\n      .map((d, index) => {\n        const label = d.id;\n\n        return {\n          data: d.data,\n          x: d.x0,\n          y: d.y0,\n          width: d.x1 - d.x0,\n          height: d.y1 - d.y0,\n          fill: this.colors.getColor(label),\n          label,\n          value: d.value,\n          valueType: d.valueType\n        };\n      });\n  }\n\n  getTooltipText({ label, value }): string {\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${value.toLocaleString()}</span>\n    `;\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  trackBy(index, item): string {\n    return item.label;\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { treemap, stratify } from 'd3-hierarchy';\n\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'ngx-charts-tree-map',\n  template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\">\n      <svg:g [attr.transform]=\"transform\" class=\"tree-map chart\">\n        <svg:g\n          ngx-charts-tree-map-cell-series\n          [colors]=\"colors\"\n          [data]=\"data\"\n          [dims]=\"dims\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [valueFormatting]=\"valueFormatting\"\n          [labelFormatting]=\"labelFormatting\"\n          [gradient]=\"gradient\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event)\"\n        />\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['./tree-map.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeMapComponent extends BaseChartComponent {\n  @Input() results;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() valueFormatting: any;\n  @Input() labelFormatting: any;\n  @Input() gradient: boolean = false;\n\n  @Output() select = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  dims: any;\n  domain: any;\n  transform: any;\n  colors: ColorHelper;\n  treemap: any;\n  data: any;\n  margin = [10, 10, 10, 10];\n\n  update(): void {\n    super.update();\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.domain = this.getDomain();\n\n    this.treemap = treemap<any>().size([this.dims.width, this.dims.height]);\n\n    const rootNode = {\n      name: 'root',\n      value: 0,\n      isRoot: true\n    };\n\n    const root = stratify<any>()\n      .id(d => {\n        let label = d.name;\n\n        if (label.constructor.name === 'Date') {\n          label = label.toLocaleDateString();\n        } else {\n          label = label.toLocaleString();\n        }\n        return label;\n      })\n      .parentId(d => (d.isRoot ? null : 'root'))([rootNode, ...this.results])\n      .sum(d => d.value);\n\n    this.data = this.treemap(root);\n\n    this.setColors();\n\n    this.transform = `translate(${this.dims.xOffset} , ${this.margin[0]})`;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { TreeMapCellComponent } from './tree-map-cell.component';\nimport { TreeMapCellSeriesComponent } from './tree-map-cell-series.component';\nimport { TreeMapComponent } from './tree-map.component';\n\n@NgModule({\n  imports: [ChartCommonModule],\n  declarations: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent],\n  exports: [TreeMapCellComponent, TreeMapCellSeriesComponent, TreeMapComponent]\n})\nexport class TreeMapModule {}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { scaleLinear } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'ngx-charts-linear-gauge',\n  template: `\n    <ngx-charts-chart [view]=\"[width, height]\" [showLegend]=\"false\" [animations]=\"animations\" (click)=\"onClick()\">\n      <svg:g class=\"linear-gauge chart\">\n        <svg:g\n          ngx-charts-bar\n          class=\"background-bar\"\n          [width]=\"dims.width\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [data]=\"{}\"\n          [orientation]=\"'horizontal'\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n        <svg:g\n          ngx-charts-bar\n          [width]=\"valueScale(value)\"\n          [height]=\"3\"\n          [x]=\"margin[3]\"\n          [y]=\"dims.height / 2 + margin[0] - 2\"\n          [fill]=\"colors.getColor(units)\"\n          [data]=\"{}\"\n          [orientation]=\"'horizontal'\"\n          [roundEdges]=\"true\"\n          [animations]=\"animations\"\n        ></svg:g>\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"5\"\n          x2=\"0\"\n          y2=\"15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:line\n          *ngIf=\"hasPreviousValue\"\n          [attr.transform]=\"transformLine\"\n          x1=\"0\"\n          y1=\"-5\"\n          x2=\"0\"\n          y2=\"-15\"\n          [attr.stroke]=\"colors.getColor(units)\"\n        />\n\n        <svg:g [attr.transform]=\"transform\">\n          <svg:g [attr.transform]=\"valueTranslate\">\n            <svg:text\n              #valueTextEl\n              class=\"value\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"valueTextTransform\"\n              alignment-baseline=\"after-edge\"\n            >\n              {{ displayValue }}\n            </svg:text>\n          </svg:g>\n\n          <svg:g [attr.transform]=\"unitsTranslate\">\n            <svg:text\n              #unitsTextEl\n              class=\"units\"\n              [style.textAnchor]=\"'middle'\"\n              [attr.transform]=\"unitsTextTransform\"\n              alignment-baseline=\"before-edge\"\n            >\n              {{ units }}\n            </svg:text>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss', './linear-gauge.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LinearGaugeComponent extends BaseChartComponent implements AfterViewInit {\n  @Input() min: number = 0;\n  @Input() max: number = 100;\n  @Input() value: number = 0;\n  @Input() units: string;\n  @Input() previousValue;\n  @Input() valueFormatting: any;\n\n  @ViewChild('valueTextEl') valueTextEl: ElementRef;\n  @ViewChild('unitsTextEl') unitsTextEl: ElementRef;\n\n  dims: ViewDimensions;\n  valueDomain: any;\n  valueScale: any;\n\n  colors: ColorHelper;\n  transform: string;\n  margin: any[] = [10, 20, 10, 20];\n  transformLine: string;\n\n  valueResizeScale: number = 1;\n  unitsResizeScale: number = 1;\n  valueTextTransform: string = '';\n  valueTranslate: string = '';\n  unitsTextTransform: string = '';\n  unitsTranslate: string = '';\n  displayValue: string;\n  hasPreviousValue: boolean;\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    setTimeout(() => {\n      this.scaleText('value');\n      this.scaleText('units');\n    });\n  }\n\n  update(): void {\n    super.update();\n\n    this.hasPreviousValue = this.previousValue !== undefined;\n    this.max = Math.max(this.max, this.value);\n    this.min = Math.min(this.min, this.value);\n    if (this.hasPreviousValue) {\n      this.max = Math.max(this.max, this.previousValue);\n      this.min = Math.min(this.min, this.previousValue);\n    }\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin\n    });\n\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n\n    this.setColors();\n\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.transformLine = `translate(${this.margin[3] + this.valueScale(this.previousValue)}, ${yOffset})`;\n    this.valueTranslate = `translate(0, -15)`;\n    this.unitsTranslate = `translate(0, 15)`;\n    setTimeout(() => this.scaleText('value'), 50);\n    setTimeout(() => this.scaleText('units'), 50);\n  }\n\n  getValueDomain(): any[] {\n    return [this.min, this.max];\n  }\n\n  getValueScale(): any {\n    return scaleLinear()\n      .range([0, this.dims.width])\n      .domain(this.valueDomain);\n  }\n\n  getDisplayValue(): string {\n    if (this.valueFormatting) {\n      return this.valueFormatting(this.value);\n    }\n    return this.value.toLocaleString();\n  }\n\n  scaleText(element, repeat: boolean = true): void {\n    let el;\n    let resizeScale;\n    if (element === 'value') {\n      el = this.valueTextEl;\n      resizeScale = this.valueResizeScale;\n    } else {\n      el = this.unitsTextEl;\n      resizeScale = this.unitsResizeScale;\n    }\n\n    const { width, height } = el.nativeElement.getBoundingClientRect();\n    if (width === 0 || height === 0) return;\n    const oldScale = resizeScale;\n    const availableWidth = this.dims.width;\n    const availableHeight = Math.max(this.dims.height / 2 - 15, 0);\n    const resizeScaleWidth = Math.floor((availableWidth / (width / resizeScale)) * 100) / 100;\n    const resizeScaleHeight = Math.floor((availableHeight / (height / resizeScale)) * 100) / 100;\n    resizeScale = Math.min(resizeScaleHeight, resizeScaleWidth);\n\n    if (resizeScale !== oldScale) {\n      if (element === 'value') {\n        this.valueResizeScale = resizeScale;\n        this.valueTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      } else {\n        this.unitsResizeScale = resizeScale;\n        this.unitsTextTransform = `scale(${resizeScale}, ${resizeScale})`;\n      }\n      this.cd.markForCheck();\n      if (repeat) {\n        setTimeout(() => {\n          this.scaleText(element, false);\n        }, 50);\n      }\n    }\n  }\n\n  onClick(): void {\n    this.select.emit({\n      name: 'Value',\n      value: this.value\n    });\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', [this.value], this.customColors);\n  }\n}\n","import {\n  Component,\n  Input,\n  ElementRef,\n  ViewChild,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Output,\n  EventEmitter,\n  ViewEncapsulation,\n  ContentChild,\n  TemplateRef\n} from '@angular/core';\nimport { scaleLinear } from 'd3-scale';\n\nimport { BaseChartComponent } from '../common/base-chart.component';\nimport { calculateViewDimensions, ViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'ngx-charts-gauge',\n  template: `\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelClick)=\"onClick($event)\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n    >\n      <svg:g [attr.transform]=\"transform\" class=\"gauge chart\">\n        <svg:g *ngFor=\"let arc of arcs; trackBy: trackBy\" [attr.transform]=\"rotation\">\n          <svg:g\n            ngx-charts-gauge-arc\n            [backgroundArc]=\"arc.backgroundArc\"\n            [valueArc]=\"arc.valueArc\"\n            [cornerRadius]=\"cornerRadius\"\n            [colors]=\"colors\"\n            [isActive]=\"isActive(arc.valueArc.data)\"\n            [tooltipDisabled]=\"tooltipDisabled\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [valueFormatting]=\"valueFormatting\"\n            [animations]=\"animations\"\n            (select)=\"onClick($event)\"\n            (activate)=\"onActivate($event)\"\n            (deactivate)=\"onDeactivate($event)\"\n          ></svg:g>\n        </svg:g>\n\n        <svg:g\n          ngx-charts-gauge-axis\n          *ngIf=\"showAxis\"\n          [bigSegments]=\"bigSegments\"\n          [smallSegments]=\"smallSegments\"\n          [min]=\"min\"\n          [max]=\"max\"\n          [radius]=\"outerRadius\"\n          [angleSpan]=\"angleSpan\"\n          [valueScale]=\"valueScale\"\n          [startAngle]=\"startAngle\"\n          [tickFormatting]=\"axisTickFormatting\"\n        ></svg:g>\n\n        <svg:text\n          #textEl\n          *ngIf=\"showText\"\n          [style.textAnchor]=\"'middle'\"\n          [attr.transform]=\"textTransform\"\n          alignment-baseline=\"central\"\n        >\n          <tspan x=\"0\" dy=\"0\">{{ displayValue }}</tspan>\n          <tspan x=\"0\" dy=\"1.2em\">{{ units }}</tspan>\n        </svg:text>\n      </svg:g>\n    </ngx-charts-chart>\n  `,\n  styleUrls: ['../common/base-chart.component.scss', './gauge.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GaugeComponent extends BaseChartComponent implements AfterViewInit {\n  @Input() legend = false;\n  @Input() legendTitle: string = 'Legend';\n  @Input() legendPosition: string = 'right';\n  @Input() min: number = 0;\n  @Input() max: number = 100;\n  @Input() textValue: string;\n  @Input() units: string;\n  @Input() bigSegments: number = 10;\n  @Input() smallSegments: number = 5;\n  @Input() results: any[];\n  @Input() showAxis: boolean = true;\n  @Input() startAngle: number = -120;\n  @Input() angleSpan: number = 240;\n  @Input() activeEntries: any[] = [];\n  @Input() axisTickFormatting: any;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() valueFormatting: (value: any) => string;\n  @Input() showText: boolean = true;\n\n  // Specify margins\n  @Input() margin: any[];\n\n  @Output() activate: EventEmitter<any> = new EventEmitter();\n  @Output() deactivate: EventEmitter<any> = new EventEmitter();\n\n  @ContentChild('tooltipTemplate') tooltipTemplate: TemplateRef<any>;\n\n  @ViewChild('textEl') textEl: ElementRef;\n\n  dims: ViewDimensions;\n  domain: any[];\n  valueDomain: any;\n  valueScale: any;\n\n  colors: ColorHelper;\n  transform: string;\n\n  outerRadius: number;\n  textRadius: number; // max available radius for the text\n  resizeScale: number = 1;\n  rotation: string = '';\n  textTransform: string = 'scale(1, 1)';\n  cornerRadius: number = 10;\n  arcs: any[];\n  displayValue: string;\n  legendOptions: any;\n\n  ngAfterViewInit(): void {\n    super.ngAfterViewInit();\n    setTimeout(() => this.scaleText());\n  }\n\n  update(): void {\n    super.update();\n\n    if (!this.showAxis) {\n      if (!this.margin) {\n        this.margin = [10, 20, 10, 20];\n      }\n    } else {\n      if (!this.margin) {\n        this.margin = [60, 100, 60, 100];\n      }\n    }\n\n    // make the starting angle positive\n    if (this.startAngle < 0) {\n      this.startAngle = (this.startAngle % 360) + 360;\n    }\n\n    this.angleSpan = Math.min(this.angleSpan, 360);\n\n    this.dims = calculateViewDimensions({\n      width: this.width,\n      height: this.height,\n      margins: this.margin,\n      showLegend: this.legend,\n      legendPosition: this.legendPosition\n    });\n\n    this.domain = this.getDomain();\n    this.valueDomain = this.getValueDomain();\n    this.valueScale = this.getValueScale();\n    this.displayValue = this.getDisplayValue();\n\n    this.outerRadius = Math.min(this.dims.width, this.dims.height) / 2;\n\n    this.arcs = this.getArcs();\n\n    this.setColors();\n    this.legendOptions = this.getLegendOptions();\n\n    const xOffset = this.margin[3] + this.dims.width / 2;\n    const yOffset = this.margin[0] + this.dims.height / 2;\n\n    this.transform = `translate(${xOffset}, ${yOffset})`;\n    this.rotation = `rotate(${this.startAngle})`;\n    setTimeout(() => this.scaleText(), 50);\n  }\n\n  getArcs(): any[] {\n    const arcs = [];\n\n    const availableRadius = this.outerRadius * 0.7;\n\n    const radiusPerArc = Math.min(availableRadius / this.results.length, 10);\n    const arcWidth = radiusPerArc * 0.7;\n    this.textRadius = this.outerRadius - this.results.length * radiusPerArc;\n    this.cornerRadius = Math.floor(arcWidth / 2);\n\n    let i = 0;\n    for (const d of this.results) {\n      const outerRadius = this.outerRadius - i * radiusPerArc;\n      const innerRadius = outerRadius - arcWidth;\n\n      const backgroundArc = {\n        endAngle: (this.angleSpan * Math.PI) / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: this.max,\n          name: d.name\n        }\n      };\n\n      const valueArc = {\n        endAngle: (Math.min(this.valueScale(d.value), this.angleSpan) * Math.PI) / 180,\n        innerRadius,\n        outerRadius,\n        data: {\n          value: d.value,\n          name: d.name\n        }\n      };\n\n      const arc = {\n        backgroundArc,\n        valueArc\n      };\n\n      arcs.push(arc);\n      i++;\n    }\n\n    return arcs;\n  }\n\n  getDomain(): any[] {\n    return this.results.map(d => d.name);\n  }\n\n  getValueDomain(): any[] {\n    const values = this.results.map(d => d.value);\n    const dataMin = Math.min(...values);\n    const dataMax = Math.max(...values);\n\n    if (this.min !== undefined) {\n      this.min = Math.min(this.min, dataMin);\n    } else {\n      this.min = dataMin;\n    }\n\n    if (this.max !== undefined) {\n      this.max = Math.max(this.max, dataMax);\n    } else {\n      this.max = dataMax;\n    }\n\n    return [this.min, this.max];\n  }\n\n  getValueScale(): any {\n    return scaleLinear()\n      .range([0, this.angleSpan])\n      .nice()\n      .domain(this.valueDomain);\n  }\n\n  getDisplayValue(): string {\n    const value = this.results.map(d => d.value).reduce((a, b) => a + b, 0);\n\n    if (this.textValue && 0 !== this.textValue.length) {\n      return this.textValue.toLocaleString();\n    }\n\n    if (this.valueFormatting) {\n      return this.valueFormatting(value);\n    }\n\n    return value.toLocaleString();\n  }\n\n  scaleText(repeat: boolean = true): void {\n    if (!this.showText) {\n      return;\n    }\n    const { width } = this.textEl.nativeElement.getBoundingClientRect();\n    const oldScale = this.resizeScale;\n\n    if (width === 0) {\n      this.resizeScale = 1;\n    } else {\n      const availableSpace = this.textRadius;\n      this.resizeScale = Math.floor((availableSpace / (width / this.resizeScale)) * 100) / 100;\n    }\n\n    if (this.resizeScale !== oldScale) {\n      this.textTransform = `scale(${this.resizeScale}, ${this.resizeScale})`;\n      this.cd.markForCheck();\n      if (repeat) {\n        setTimeout(() => this.scaleText(false), 50);\n      }\n    }\n  }\n\n  onClick(data): void {\n    this.select.emit(data);\n  }\n\n  getLegendOptions(): any {\n    return {\n      scaleType: 'ordinal',\n      colors: this.colors,\n      domain: this.domain,\n      title: this.legendTitle,\n      position: this.legendPosition\n    };\n  }\n\n  setColors(): void {\n    this.colors = new ColorHelper(this.scheme, 'ordinal', this.domain, this.customColors);\n  }\n\n  onActivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n    if (idx > -1) {\n      return;\n    }\n\n    this.activeEntries = [item, ...this.activeEntries];\n    this.activate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  onDeactivate(item): void {\n    const idx = this.activeEntries.findIndex(d => {\n      return d.name === item.name && d.value === item.value;\n    });\n\n    this.activeEntries.splice(idx, 1);\n    this.activeEntries = [...this.activeEntries];\n\n    this.deactivate.emit({ value: item, entries: this.activeEntries });\n  }\n\n  isActive(entry): boolean {\n    if (!this.activeEntries) return false;\n    const item = this.activeEntries.find(d => {\n      return entry.name === d.name && entry.series === d.series;\n    });\n    return item !== undefined;\n  }\n\n  trackBy(index, item): string {\n    return item.valueArc.data.name;\n  }\n}\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\nimport { formatLabel, escapeLabel } from '../common/label.helper';\nimport { ColorHelper } from '../common/color.helper';\n\n@Component({\n  selector: 'g[ngx-charts-gauge-arc]',\n  template: `\n    <svg:g\n      ngx-charts-pie-arc\n      class=\"background-arc\"\n      [startAngle]=\"0\"\n      [endAngle]=\"backgroundArc.endAngle\"\n      [innerRadius]=\"backgroundArc.innerRadius\"\n      [outerRadius]=\"backgroundArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [data]=\"backgroundArc.data\"\n      [animate]=\"false\"\n      [pointerEvents]=\"false\"\n    ></svg:g>\n    <svg:g\n      ngx-charts-pie-arc\n      [startAngle]=\"0\"\n      [endAngle]=\"valueArc.endAngle\"\n      [innerRadius]=\"valueArc.innerRadius\"\n      [outerRadius]=\"valueArc.outerRadius\"\n      [cornerRadius]=\"cornerRadius\"\n      [fill]=\"colors.getColor(valueArc.data.name)\"\n      [data]=\"valueArc.data\"\n      [animate]=\"animations\"\n      [isActive]=\"isActive\"\n      (select)=\"select.emit($event)\"\n      (activate)=\"activate.emit($event)\"\n      (deactivate)=\"deactivate.emit($event)\"\n      ngx-tooltip\n      [tooltipDisabled]=\"tooltipDisabled\"\n      [tooltipPlacement]=\"'top'\"\n      [tooltipType]=\"'tooltip'\"\n      [tooltipTitle]=\"tooltipTemplate ? undefined : tooltipText(valueArc)\"\n      [tooltipTemplate]=\"tooltipTemplate\"\n      [tooltipContext]=\"valueArc.data\"\n    ></svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GaugeArcComponent {\n  @Input() backgroundArc: any;\n  @Input() valueArc: any;\n  @Input() cornerRadius: any;\n  @Input() colors: ColorHelper;\n  @Input() isActive: boolean = false;\n  @Input() tooltipDisabled: boolean = false;\n  @Input() valueFormatting: (value: any) => string;\n  @Input() tooltipTemplate: TemplateRef<any>;\n  @Input() animations: boolean = true;\n\n  @Output() select = new EventEmitter();\n  @Output() activate = new EventEmitter();\n  @Output() deactivate = new EventEmitter();\n\n  tooltipText(arc): string {\n    const label = formatLabel(arc.data.name);\n    let val;\n\n    if (this.valueFormatting) {\n      val = this.valueFormatting(arc.data.value);\n    } else {\n      val = formatLabel(arc.data.value);\n    }\n\n    return `\n      <span class=\"tooltip-label\">${escapeLabel(label)}</span>\n      <span class=\"tooltip-val\">${val}</span>\n    `;\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { line } from 'd3-shape';\n\n@Component({\n  selector: 'g[ngx-charts-gauge-axis]',\n  template: `\n    <svg:g [attr.transform]=\"rotate\">\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.big\" class=\"gauge-tick gauge-tick-large\">\n        <svg:text\n          [style.textAnchor]=\"tick.textAnchor\"\n          [attr.transform]=\"tick.textTransform\"\n          alignment-baseline=\"central\"\n        >\n          {{ tick.text }}\n        </svg:text>\n      </svg:g>\n      <svg:g *ngFor=\"let tick of ticks.small\" class=\"gauge-tick gauge-tick-small\">\n        <svg:path [attr.d]=\"tick.line\" />\n      </svg:g>\n    </svg:g>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GaugeAxisComponent implements OnChanges {\n  @Input() bigSegments: any;\n  @Input() smallSegments: any;\n  @Input() min: any;\n  @Input() max: any;\n  @Input() angleSpan: number;\n  @Input() startAngle: number;\n  @Input() radius: any;\n  @Input() valueScale: any;\n  @Input() tickFormatting: any;\n\n  ticks: any;\n  rotationAngle: number;\n  rotate: string = '';\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.update();\n  }\n\n  update(): void {\n    this.rotationAngle = -90 + this.startAngle;\n    this.rotate = `rotate(${this.rotationAngle})`;\n    this.ticks = this.getTicks();\n  }\n\n  getTicks(): any {\n    const bigTickSegment = this.angleSpan / this.bigSegments;\n    const smallTickSegment = bigTickSegment / this.smallSegments;\n    const tickLength = 20;\n    const ticks = {\n      big: [],\n      small: []\n    };\n\n    const startDistance = this.radius + 10;\n    const textDist = startDistance + tickLength + 10;\n\n    for (let i = 0; i <= this.bigSegments; i++) {\n      const angleDeg = i * bigTickSegment;\n      const angle = (angleDeg * Math.PI) / 180;\n\n      const textAnchor = this.getTextAnchor(angleDeg);\n\n      let skip = false;\n      if (i === 0 && this.angleSpan === 360) {\n        skip = true;\n      }\n\n      if (!skip) {\n        let text = Number.parseFloat(this.valueScale.invert(angleDeg).toString()).toLocaleString();\n        if (this.tickFormatting) {\n          text = this.tickFormatting(text);\n        }\n        ticks.big.push({\n          line: this.getTickPath(startDistance, tickLength, angle),\n          textAnchor,\n          text,\n          textTransform: `\n            translate(${textDist * Math.cos(angle)}, ${textDist * Math.sin(angle)}) rotate(${-this.rotationAngle})\n          `\n        });\n      }\n\n      if (i === this.bigSegments) {\n        continue;\n      }\n\n      for (let j = 1; j <= this.smallSegments; j++) {\n        const smallAngleDeg = angleDeg + j * smallTickSegment;\n        const smallAngle = (smallAngleDeg * Math.PI) / 180;\n\n        ticks.small.push({\n          line: this.getTickPath(startDistance, tickLength / 2, smallAngle)\n        });\n      }\n    }\n\n    return ticks;\n  }\n\n  getTextAnchor(angle) {\n    // [0, 45] = 'middle';\n    // [46, 135] = 'start';\n    // [136, 225] = 'middle';\n    // [226, 315] = 'end';\n\n    angle = (this.startAngle + angle) % 360;\n    let textAnchor = 'middle';\n    if (angle > 45 && angle <= 135) {\n      textAnchor = 'start';\n    } else if (angle > 225 && angle <= 315) {\n      textAnchor = 'end';\n    }\n    return textAnchor;\n  }\n\n  getTickPath(startDistance, tickLength, angle): any {\n    const y1 = startDistance * Math.sin(angle);\n    const y2 = (startDistance + tickLength) * Math.sin(angle);\n    const x1 = startDistance * Math.cos(angle);\n    const x2 = (startDistance + tickLength) * Math.cos(angle);\n\n    const points = [\n      { x: x1, y: y1 },\n      { x: x2, y: y2 }\n    ];\n    const lineGenerator = line<any>()\n      .x(d => d.x)\n      .y(d => d.y);\n    return lineGenerator(points);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from '../common/chart-common.module';\nimport { LinearGaugeComponent } from './linear-gauge.component';\nimport { GaugeComponent } from './gauge.component';\nimport { GaugeArcComponent } from './gauge-arc.component';\nimport { GaugeAxisComponent } from './gauge-axis.component';\nimport { PieChartModule } from '../pie-chart/pie-chart.module';\nimport { BarChartModule } from '../bar-chart/bar-chart.module';\n\n@NgModule({\n  imports: [ChartCommonModule, PieChartModule, BarChartModule],\n  declarations: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent],\n  exports: [LinearGaugeComponent, GaugeComponent, GaugeArcComponent, GaugeAxisComponent]\n})\nexport class GaugeModule {}\n","// The export is needed here to generate a valid polyfills.metadata.json file\nexport function ngxChartsPolyfills() {\n  // IE11 fix\n  // Ref: https://github.com/swimlane/ngx-charts/issues/386\n  if (typeof SVGElement !== 'undefined' && typeof SVGElement.prototype.contains === 'undefined') {\n    SVGElement.prototype.contains = HTMLDivElement.prototype.contains;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ChartCommonModule } from './common/chart-common.module';\nimport { AreaChartModule } from './area-chart/area-chart.module';\nimport { BarChartModule } from './bar-chart/bar-chart.module';\nimport { BubbleChartModule } from './bubble-chart/bubble-chart.module';\nimport { HeatMapModule } from './heat-map/heat-map.module';\nimport { LineChartModule } from './line-chart/line-chart.module';\nimport { PolarChartModule } from './polar-chart/polar-chart.module';\nimport { NumberCardModule } from './number-card/number-card.module';\nimport { PieChartModule } from './pie-chart/pie-chart.module';\nimport { TreeMapModule } from './tree-map/tree-map.module';\nimport { GaugeModule } from './gauge/gauge.module';\nimport { ngxChartsPolyfills } from './polyfills';\n\n@NgModule({\n  exports: [\n    ChartCommonModule,\n    AreaChartModule,\n    BarChartModule,\n    BubbleChartModule,\n    HeatMapModule,\n    LineChartModule,\n    PolarChartModule,\n    NumberCardModule,\n    PieChartModule,\n    TreeMapModule,\n    GaugeModule\n  ]\n})\nexport class NgxChartsModule {\n  constructor() {\n    ngxChartsPolyfills();\n  }\n}\n","import { timeFormat } from 'd3-time-format';\n\nexport function tickFormat(fieldType, groupByType): (label: string) => string {\n  return function(label: string): string {\n    if (label === 'No Value' || label === 'Other') {\n      return label;\n    }\n    if (fieldType === 'date' && groupByType === 'groupBy') {\n      const formatter = timeFormat('MM/DD/YYYY');\n      return formatter(<any>label);\n    }\n\n    return label.toString();\n  };\n}\n"],"names":["DomPortalHost","portal","ComponentPortal","ApplicationRef","ComponentFactoryResolver","Injector","Injectable","ElementRef","Renderer2","Input","ViewChild","HostBinding","HostListener","Component","ViewEncapsulation","EventEmitter","Output","ChangeDetectionStrategy","trigger","transition","style","animate","NgZone","Directive","observableFromEvent","debounceTime","ChangeDetectorRef","NgModule","CommonModule","StyleTypes","AlignmentTypes","ShowTypes","ViewContainerRef","select","scaleTime","scaleLinear","scalePoint","brushX","d3event","DomSanitizer","scaleQuantile","scaleOrdinal","range","scaleBand","curveLinear","ContentChild","area","D0Types","line","curveCardinalClosed","lineRadial","arc","interpolate","min","format","pie","max","d3_color.rgb","treemap","stratify","timeFormat"],"mappings":"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"}